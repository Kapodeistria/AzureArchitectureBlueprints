{
  "name": "agentic-well-architected-blueprint",
  "version": "3.1.0",
  "description": "AgenticWellArchitectedBlueprint - Microsoft Well-Architected Framework assessment platform with 11 specialized AI agents for comprehensive WAF compliance analysis",
  "main": "index.js",
  "scripts": {
    "local": "scripts/dev/nyan-wrapper.sh waf-assessment && tsx src/cli/interview-cli.ts analyze --input case-study.txt --output local-solution.md --copy",
    "quick": "scripts/dev/nyan-wrapper.sh waf-quick && tsx src/cli/interview-cli.ts quick",
    "analyze": "scripts/dev/nyan-wrapper.sh waf-analyze && tsx src/cli/interview-cli.ts analyze",
    "interactive": "scripts/dev/nyan-wrapper.sh waf-interactive && tsx src/cli/interview-cli.ts interactive",
    "test": "scripts/dev/nyan-wrapper.sh waf-test && tsx src/cli/interview-cli.ts test",
    "status": "scripts/dev/nyan-wrapper.sh status && tsx src/cli/interview-cli.ts status",
    "setup-vscode": "scripts/dev/nyan-wrapper.sh setup-vscode && tsx src/utils/vscode-integration.ts",
    "interview": "scripts/dev/nyan-wrapper.sh interview && npm run quick",
    "config": "scripts/dev/nyan-wrapper.sh config && tsx src/config/config-cli.ts",
    "config:list": "scripts/dev/nyan-wrapper.sh config:list && tsx src/config/config-cli.ts list",
    "config:generate": "scripts/dev/nyan-wrapper.sh config:generate && tsx src/config/config-cli.ts generate",
    "config:validate": "scripts/dev/nyan-wrapper.sh config:validate && tsx src/config/config-cli.ts validate",
    "deploy:foundry": "scripts/dev/nyan-wrapper.sh deploy:foundry && tsx src/utils/deploy-agents-to-foundry.ts",
    "deploy:prepare": "scripts/dev/nyan-wrapper.sh deploy:prepare && tsx src/utils/deploy-agents-to-foundry.ts",
    "deploy:all": "scripts/dev/nyan-wrapper.sh deploy:all && scripts/deploy/deploy-all-to-foundry.sh",
    "deploy:production": "scripts/dev/nyan-wrapper.sh deploy:production && scripts/deploy/deploy-all-to-foundry.sh",
    "deploy:foundry:mine": "scripts/dev/nyan-wrapper.sh deploy:foundry:mine && scripts/deploy/deploy-to-your-foundry.sh",
    "deploy:mine": "scripts/dev/nyan-wrapper.sh deploy:mine && scripts/deploy/deploy-to-your-foundry.sh",
    "deploy:simple": "scripts/dev/nyan-wrapper.sh deploy:simple && scripts/deploy/deploy-simple.sh",
    "deploy:agents": "scripts/dev/nyan-wrapper.sh deploy:agents && scripts/deploy/deploy-agents.sh",
    "delete:agents": "scripts/dev/nyan-wrapper.sh delete:agents && scripts/deploy/delete-agents.sh",
    "redeploy:agents": "scripts/dev/nyan-wrapper.sh redeploy:agents && scripts/deploy/redeploy-agents.sh",
    "redeploy": "scripts/dev/nyan-wrapper.sh redeploy && scripts/deploy/redeploy-agents.sh",
    "delete": "scripts/dev/nyan-wrapper.sh delete && scripts/deploy/delete-agents.sh",
    "agents:delete": "scripts/dev/nyan-wrapper.sh agents:delete && tsx src/utils/deploy-agents-to-foundry.ts delete",
    "agents:redeploy": "scripts/dev/nyan-wrapper.sh agents:redeploy && tsx src/utils/deploy-agents-to-foundry.ts redeploy",
    "agents:deploy": "scripts/dev/nyan-wrapper.sh agents:deploy && tsx src/utils/deploy-agents-to-foundry.ts",
    "agents:status": "scripts/dev/nyan-wrapper.sh agents:status && cat foundry-agents/agent-ids.env 2>/dev/null || echo 'No agents deployed yet'",
    "waf:download": "scripts/dev/nyan-wrapper.sh waf:download && tsx src/utils/waf-knowledge-downloader.ts",
    "waf:integrate": "scripts/dev/nyan-wrapper.sh waf:integrate && tsx src/utils/integrate-waf-knowledge.ts",
    "waf:setup": "scripts/dev/nyan-wrapper.sh waf:setup && npm run waf:download",
    "waf:rag": "scripts/dev/nyan-wrapper.sh waf:rag && tsx src/utils/waf-rag-preparator.ts",
    "waf:deploy": "scripts/dev/nyan-wrapper.sh waf:deploy && npm run waf:rag && npm run agents:deploy",
    "foundry:test": "scripts/dev/nyan-wrapper.sh foundry:test && tsx test-foundry-connection.ts",
    "foundry:list": "scripts/dev/nyan-wrapper.sh foundry:list && tsx test-foundry-connection.ts",
    "copilot": "scripts/dev/nyancat.sh",
    "assistant": "scripts/dev/nyancat.sh",
    "ai": "scripts/dev/nyancat.sh --quick",
    "ready": "scripts/dev/nyancat.sh --quick",
    "test:agents": "echo 'Agent tests available - use test:dsl for Structurizr validation'",
    "test:dsl": "scripts/dev/nyan-wrapper.sh test:dsl && tsx test-dsl-validator.ts",
    "test:rendering": "scripts/dev/nyan-wrapper.sh test:rendering && tsx test-rendering-benchmark.ts",
    "benchmark:render": "npm run test:rendering",
    "test:smoke": "scripts/dev/nyan-wrapper.sh test:smoke && tsx tests/e2e/smoke-test.ts",
    "test:smoke:fast": "scripts/dev/nyan-wrapper.sh test:smoke:fast && tsx tests/e2e/smoke-test.ts --fast",
    "test:e2e": "scripts/dev/nyan-wrapper.sh test:e2e && tsx tests/e2e/e2e-test-framework.ts",
    "test:e2e:critical": "scripts/dev/nyan-wrapper.sh test:e2e:critical && tsx tests/e2e/e2e-test-framework.ts --critical",
    "test:critical-path": "scripts/dev/nyan-wrapper.sh test:critical-path && tsx tests/e2e/critical-path-test.ts",
    "test:rag": "scripts/dev/nyan-wrapper.sh test:rag && tsx tests/e2e/rag-validation-test.ts",
    "test:all": "npm run test:smoke && npm run test:critical-path && npm run test:rag && npm run test:e2e",
    "test:pre-commit": "npm run test:smoke:fast",
    "test:ci": "npm run test:smoke && npm run test:critical-path",
    "test:regression": "echo 'Regression tests not yet implemented'",
    "test:integration": "echo 'Integration tests not yet implemented'",
    "test:report": "echo 'Test reporting not yet implemented'"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@azure/identity": "^4.12.0",
    "@types/node": "^24.5.2",
    "axios": "^1.12.2",
    "chalk": "^5.6.2",
    "clipboardy": "^4.0.0",
    "commander": "^14.0.1",
    "form-data": "^4.0.4",
    "gh": "^2.8.9",
    "inquirer": "^12.9.6",
    "openai": "^5.23.0",
    "ora": "^9.0.0",
    "tsx": "^4.20.5",
    "typescript": "^5.9.2"
  }
}
