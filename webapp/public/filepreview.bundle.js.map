{
  "version": 3,
  "sources": ["external-global:react", "../node_modules/inline-style-parser/index.js", "../node_modules/style-to-object/src/index.ts", "../node_modules/style-to-js/src/utilities.ts", "../node_modules/style-to-js/src/index.ts", "../node_modules/react/cjs/react-jsx-runtime.production.js", "../node_modules/react/jsx-runtime.js", "../node_modules/extend/index.js", "webpack://xterm/webpack/universalModuleDefinition", "webpack://xterm/src/browser/AccessibilityManager.ts", "webpack://xterm/src/browser/Clipboard.ts", "webpack://xterm/src/browser/ColorContrastCache.ts", "webpack://xterm/src/browser/Lifecycle.ts", "webpack://xterm/src/browser/Linkifier2.ts", "webpack://xterm/src/browser/LocalizableStrings.ts", "webpack://xterm/src/browser/OscLinkProvider.ts", "webpack://xterm/src/browser/RenderDebouncer.ts", "webpack://xterm/src/browser/ScreenDprMonitor.ts", "webpack://xterm/src/browser/Terminal.ts", "webpack://xterm/src/browser/TimeBasedDebouncer.ts", "webpack://xterm/src/browser/Viewport.ts", "webpack://xterm/src/browser/decorations/BufferDecorationRenderer.ts", "webpack://xterm/src/browser/decorations/ColorZoneStore.ts", "webpack://xterm/src/browser/decorations/OverviewRulerRenderer.ts", "webpack://xterm/src/browser/input/CompositionHelper.ts", "webpack://xterm/src/browser/input/Mouse.ts", "webpack://xterm/src/browser/input/MoveToCell.ts", "webpack://xterm/src/browser/renderer/dom/DomRenderer.ts", "webpack://xterm/src/browser/renderer/dom/DomRendererRowFactory.ts", "webpack://xterm/src/browser/renderer/dom/WidthCache.ts", "webpack://xterm/src/browser/renderer/shared/Constants.ts", "webpack://xterm/src/browser/renderer/shared/RendererUtils.ts", "webpack://xterm/src/browser/selection/SelectionModel.ts", "webpack://xterm/src/browser/services/CharSizeService.ts", "webpack://xterm/src/browser/services/CharacterJoinerService.ts", "webpack://xterm/src/browser/services/CoreBrowserService.ts", "webpack://xterm/src/browser/services/MouseService.ts", "webpack://xterm/src/browser/services/RenderService.ts", "webpack://xterm/src/browser/services/SelectionService.ts", "webpack://xterm/src/browser/services/Services.ts", "webpack://xterm/src/browser/services/ThemeService.ts", "webpack://xterm/src/common/CircularList.ts", "webpack://xterm/src/common/Clone.ts", "webpack://xterm/src/common/Color.ts", "webpack://xterm/src/common/CoreTerminal.ts", "webpack://xterm/src/common/EventEmitter.ts", "webpack://xterm/src/common/InputHandler.ts", "webpack://xterm/src/common/Lifecycle.ts", "webpack://xterm/src/common/MultiKeyMap.ts", "webpack://xterm/src/common/Platform.ts", "webpack://xterm/src/common/SortedList.ts", "webpack://xterm/src/common/TaskQueue.ts", "webpack://xterm/src/common/WindowsMode.ts", "webpack://xterm/src/common/buffer/AttributeData.ts", "webpack://xterm/src/common/buffer/Buffer.ts", "webpack://xterm/src/common/buffer/BufferLine.ts", "webpack://xterm/src/common/buffer/BufferRange.ts", "webpack://xterm/src/common/buffer/BufferReflow.ts", "webpack://xterm/src/common/buffer/BufferSet.ts", "webpack://xterm/src/common/buffer/CellData.ts", "webpack://xterm/src/common/buffer/Constants.ts", "webpack://xterm/src/common/buffer/Marker.ts", "webpack://xterm/src/common/data/Charsets.ts", "webpack://xterm/src/common/data/EscapeSequences.ts", "webpack://xterm/src/common/input/Keyboard.ts", "webpack://xterm/src/common/input/TextDecoder.ts", "webpack://xterm/src/common/input/UnicodeV6.ts", "webpack://xterm/src/common/input/WriteBuffer.ts", "webpack://xterm/src/common/input/XParseColor.ts", "webpack://xterm/src/common/parser/Constants.ts", "webpack://xterm/src/common/parser/DcsParser.ts", "webpack://xterm/src/common/parser/EscapeSequenceParser.ts", "webpack://xterm/src/common/parser/OscParser.ts", "webpack://xterm/src/common/parser/Params.ts", "webpack://xterm/src/common/public/AddonManager.ts", "webpack://xterm/src/common/public/BufferApiView.ts", "webpack://xterm/src/common/public/BufferLineApiView.ts", "webpack://xterm/src/common/public/BufferNamespaceApi.ts", "webpack://xterm/src/common/public/ParserApi.ts", "webpack://xterm/src/common/public/UnicodeApi.ts", "webpack://xterm/src/common/services/BufferService.ts", "webpack://xterm/src/common/services/CharsetService.ts", "webpack://xterm/src/common/services/CoreMouseService.ts", "webpack://xterm/src/common/services/CoreService.ts", "webpack://xterm/src/common/services/DecorationService.ts", "webpack://xterm/src/common/services/InstantiationService.ts", "webpack://xterm/src/common/services/LogService.ts", "webpack://xterm/src/common/services/OptionsService.ts", "webpack://xterm/src/common/services/OscLinkService.ts", "webpack://xterm/src/common/services/ServiceRegistry.ts", "webpack://xterm/src/common/services/Services.ts", "webpack://xterm/src/common/services/UnicodeService.ts", "webpack://xterm/webpack/bootstrap", "webpack://xterm/src/browser/public/Terminal.ts", "../src/components/DocViewer.tsx", "../node_modules/comma-separated-tokens/index.js", "../node_modules/estree-util-is-identifier-name/lib/index.js", "../node_modules/hast-util-whitespace/lib/index.js", "../node_modules/property-information/lib/util/schema.js", "../node_modules/property-information/lib/util/merge.js", "../node_modules/property-information/lib/normalize.js", "../node_modules/property-information/lib/util/info.js", "../node_modules/property-information/lib/util/types.js", "../node_modules/property-information/lib/util/defined-info.js", "../node_modules/property-information/lib/util/create.js", "../node_modules/property-information/lib/aria.js", "../node_modules/property-information/lib/util/case-sensitive-transform.js", "../node_modules/property-information/lib/util/case-insensitive-transform.js", "../node_modules/property-information/lib/html.js", "../node_modules/property-information/lib/svg.js", "../node_modules/property-information/lib/xlink.js", "../node_modules/property-information/lib/xmlns.js", "../node_modules/property-information/lib/xml.js", "../node_modules/property-information/lib/hast-to-react.js", "../node_modules/property-information/lib/find.js", "../node_modules/property-information/index.js", "../node_modules/space-separated-tokens/index.js", "../node_modules/hast-util-to-jsx-runtime/lib/index.js", "../node_modules/unist-util-position/lib/index.js", "../node_modules/unist-util-stringify-position/lib/index.js", "../node_modules/vfile-message/lib/index.js", "../node_modules/html-url-attributes/lib/index.js", "../node_modules/react-markdown/lib/index.js", "../node_modules/mdast-util-to-string/lib/index.js", "../node_modules/decode-named-character-reference/index.dom.js", "../node_modules/micromark-util-chunked/index.js", "../node_modules/micromark-util-combine-extensions/index.js", "../node_modules/micromark-util-decode-numeric-character-reference/index.js", "../node_modules/micromark-util-normalize-identifier/index.js", "../node_modules/micromark-util-character/index.js", "../node_modules/micromark-util-sanitize-uri/index.js", "../node_modules/micromark-factory-space/index.js", "../node_modules/micromark/lib/initialize/content.js", "../node_modules/micromark/lib/initialize/document.js", "../node_modules/micromark-util-classify-character/index.js", "../node_modules/micromark-util-resolve-all/index.js", "../node_modules/micromark-core-commonmark/lib/attention.js", "../node_modules/micromark-core-commonmark/lib/autolink.js", "../node_modules/micromark-core-commonmark/lib/blank-line.js", "../node_modules/micromark-core-commonmark/lib/block-quote.js", "../node_modules/micromark-core-commonmark/lib/character-escape.js", "../node_modules/micromark-core-commonmark/lib/character-reference.js", "../node_modules/micromark-core-commonmark/lib/code-fenced.js", "../node_modules/micromark-core-commonmark/lib/code-indented.js", "../node_modules/micromark-core-commonmark/lib/code-text.js", "../node_modules/micromark-util-subtokenize/lib/splice-buffer.js", "../node_modules/micromark-util-subtokenize/index.js", "../node_modules/micromark-core-commonmark/lib/content.js", "../node_modules/micromark-factory-destination/index.js", "../node_modules/micromark-factory-label/index.js", "../node_modules/micromark-factory-title/index.js", "../node_modules/micromark-factory-whitespace/index.js", "../node_modules/micromark-core-commonmark/lib/definition.js", "../node_modules/micromark-core-commonmark/lib/hard-break-escape.js", "../node_modules/micromark-core-commonmark/lib/heading-atx.js", "../node_modules/micromark-util-html-tag-name/index.js", "../node_modules/micromark-core-commonmark/lib/html-flow.js", "../node_modules/micromark-core-commonmark/lib/html-text.js", "../node_modules/micromark-core-commonmark/lib/label-end.js", "../node_modules/micromark-core-commonmark/lib/label-start-image.js", "../node_modules/micromark-core-commonmark/lib/label-start-link.js", "../node_modules/micromark-core-commonmark/lib/line-ending.js", "../node_modules/micromark-core-commonmark/lib/thematic-break.js", "../node_modules/micromark-core-commonmark/lib/list.js", "../node_modules/micromark-core-commonmark/lib/setext-underline.js", "../node_modules/micromark/lib/initialize/flow.js", "../node_modules/micromark/lib/initialize/text.js", "../node_modules/micromark/lib/constructs.js", "../node_modules/micromark/lib/create-tokenizer.js", "../node_modules/micromark/lib/parse.js", "../node_modules/micromark/lib/postprocess.js", "../node_modules/micromark/lib/preprocess.js", "../node_modules/micromark-util-decode-string/index.js", "../node_modules/mdast-util-from-markdown/lib/index.js", "../node_modules/remark-parse/lib/index.js", "../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js", "../node_modules/mdast-util-to-hast/lib/handlers/break.js", "../node_modules/mdast-util-to-hast/lib/handlers/code.js", "../node_modules/mdast-util-to-hast/lib/handlers/delete.js", "../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js", "../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js", "../node_modules/mdast-util-to-hast/lib/handlers/heading.js", "../node_modules/mdast-util-to-hast/lib/handlers/html.js", "../node_modules/mdast-util-to-hast/lib/revert.js", "../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js", "../node_modules/mdast-util-to-hast/lib/handlers/image.js", "../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js", "../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js", "../node_modules/mdast-util-to-hast/lib/handlers/link.js", "../node_modules/mdast-util-to-hast/lib/handlers/list-item.js", "../node_modules/mdast-util-to-hast/lib/handlers/list.js", "../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js", "../node_modules/mdast-util-to-hast/lib/handlers/root.js", "../node_modules/mdast-util-to-hast/lib/handlers/strong.js", "../node_modules/mdast-util-to-hast/lib/handlers/table.js", "../node_modules/mdast-util-to-hast/lib/handlers/table-row.js", "../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js", "../node_modules/trim-lines/index.js", "../node_modules/mdast-util-to-hast/lib/handlers/text.js", "../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js", "../node_modules/mdast-util-to-hast/lib/handlers/index.js", "../node_modules/@ungap/structured-clone/esm/deserialize.js", "../node_modules/@ungap/structured-clone/esm/serialize.js", "../node_modules/@ungap/structured-clone/esm/index.js", "../node_modules/mdast-util-to-hast/lib/footer.js", "../node_modules/unist-util-is/lib/index.js", "../node_modules/unist-util-visit-parents/lib/index.js", "../node_modules/unist-util-visit/lib/index.js", "../node_modules/mdast-util-to-hast/lib/state.js", "../node_modules/mdast-util-to-hast/lib/index.js", "../node_modules/remark-rehype/lib/index.js", "../node_modules/bail/index.js", "../node_modules/unified/lib/index.js", "../node_modules/is-plain-obj/index.js", "../node_modules/trough/lib/index.js", "../node_modules/vfile/lib/minpath.browser.js", "../node_modules/vfile/lib/minproc.browser.js", "../node_modules/vfile/lib/minurl.shared.js", "../node_modules/vfile/lib/minurl.browser.js", "../node_modules/vfile/lib/index.js", "../node_modules/unified/lib/callable-instance.js", "../node_modules/ccount/index.js", "../node_modules/escape-string-regexp/index.js", "../node_modules/mdast-util-find-and-replace/lib/index.js", "../node_modules/mdast-util-gfm-autolink-literal/lib/index.js", "../node_modules/mdast-util-gfm-footnote/lib/index.js", "../node_modules/mdast-util-gfm-strikethrough/lib/index.js", "../node_modules/markdown-table/index.js", "../node_modules/mdast-util-to-markdown/lib/handle/blockquote.js", "../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js", "../node_modules/mdast-util-to-markdown/lib/handle/break.js", "../node_modules/longest-streak/index.js", "../node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js", "../node_modules/mdast-util-to-markdown/lib/util/check-fence.js", "../node_modules/mdast-util-to-markdown/lib/handle/code.js", "../node_modules/mdast-util-to-markdown/lib/util/check-quote.js", "../node_modules/mdast-util-to-markdown/lib/handle/definition.js", "../node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js", "../node_modules/mdast-util-to-markdown/lib/util/encode-character-reference.js", "../node_modules/mdast-util-to-markdown/lib/util/encode-info.js", "../node_modules/mdast-util-to-markdown/lib/handle/emphasis.js", "../node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js", "../node_modules/mdast-util-to-markdown/lib/handle/heading.js", "../node_modules/mdast-util-to-markdown/lib/handle/html.js", "../node_modules/mdast-util-to-markdown/lib/handle/image.js", "../node_modules/mdast-util-to-markdown/lib/handle/image-reference.js", "../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js", "../node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js", "../node_modules/mdast-util-to-markdown/lib/handle/link.js", "../node_modules/mdast-util-to-markdown/lib/handle/link-reference.js", "../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js", "../node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js", "../node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js", "../node_modules/mdast-util-to-markdown/lib/util/check-rule.js", "../node_modules/mdast-util-to-markdown/lib/handle/list.js", "../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js", "../node_modules/mdast-util-to-markdown/lib/handle/list-item.js", "../node_modules/mdast-util-to-markdown/lib/handle/paragraph.js", "../node_modules/mdast-util-phrasing/lib/index.js", "../node_modules/mdast-util-to-markdown/lib/handle/root.js", "../node_modules/mdast-util-to-markdown/lib/util/check-strong.js", "../node_modules/mdast-util-to-markdown/lib/handle/strong.js", "../node_modules/mdast-util-to-markdown/lib/handle/text.js", "../node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js", "../node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js", "../node_modules/mdast-util-to-markdown/lib/handle/index.js", "../node_modules/mdast-util-gfm-table/lib/index.js", "../node_modules/mdast-util-gfm-task-list-item/lib/index.js", "../node_modules/mdast-util-gfm/lib/index.js", "../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js", "../node_modules/micromark-extension-gfm-footnote/lib/syntax.js", "../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js", "../node_modules/micromark-extension-gfm-table/lib/edit-map.js", "../node_modules/micromark-extension-gfm-table/lib/infer.js", "../node_modules/micromark-extension-gfm-table/lib/syntax.js", "../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js", "../node_modules/micromark-extension-gfm/index.js", "../node_modules/remark-gfm/lib/index.js", "../node_modules/dompurify/src/utils.ts", "../node_modules/dompurify/src/tags.ts", "../node_modules/dompurify/src/attrs.ts", "../node_modules/dompurify/src/regexp.ts", "../node_modules/dompurify/src/purify.ts", "../src/filepreview-entry.tsx"],
  "sourcesContent": ["module.exports = window.React", "// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n", "import type { Declaration } from 'inline-style-parser';\nimport parse from 'inline-style-parser';\n\nexport { Declaration };\n\ninterface StyleObject {\n  [name: string]: string;\n}\n\ntype Iterator = (\n  property: string,\n  value: string,\n  declaration: Declaration,\n) => void;\n\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nexport default function StyleToObject(\n  style: string,\n  iterator?: Iterator,\n): StyleObject | null {\n  let styleObject: StyleObject | null = null;\n\n  if (!style || typeof style !== 'string') {\n    return styleObject;\n  }\n\n  const declarations = parse(style);\n  const hasIterator = typeof iterator === 'function';\n\n  declarations.forEach((declaration) => {\n    if (declaration.type !== 'declaration') {\n      return;\n    }\n\n    const { property, value } = declaration;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      styleObject = styleObject || {};\n      styleObject[property] = value;\n    }\n  });\n\n  return styleObject;\n}\n", "const CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9_-]+$/;\nconst HYPHEN_REGEX = /-([a-z])/g;\nconst NO_HYPHEN_REGEX = /^[^-]+$/;\nconst VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;\nconst MS_VENDOR_PREFIX_REGEX = /^-(ms)-/;\n\n/**\n * Checks whether to skip camelCase.\n */\nconst skipCamelCase = (property: string) =>\n  !property ||\n  NO_HYPHEN_REGEX.test(property) ||\n  CUSTOM_PROPERTY_REGEX.test(property);\n\n/**\n * Replacer that capitalizes first character.\n */\nconst capitalize = (match: string, character: string) =>\n  character.toUpperCase();\n\n/**\n * Replacer that removes beginning hyphen of vendor prefix property.\n */\nconst trimHyphen = (match: string, prefix: string) => `${prefix}-`;\n\n/**\n * CamelCase options.\n */\nexport interface CamelCaseOptions {\n  reactCompat?: boolean;\n}\n\n/**\n * CamelCases a CSS property.\n */\nexport const camelCase = (property: string, options: CamelCaseOptions = {}) => {\n  if (skipCamelCase(property)) {\n    return property;\n  }\n\n  property = property.toLowerCase();\n\n  if (options.reactCompat) {\n    // `-ms` vendor prefix should not be capitalized\n    property = property.replace(MS_VENDOR_PREFIX_REGEX, trimHyphen);\n  } else {\n    // for non-React, remove first hyphen so vendor prefix is not capitalized\n    property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);\n  }\n\n  return property.replace(HYPHEN_REGEX, capitalize);\n};\n", "import StyleToObject from 'style-to-object';\n\nimport { camelCase, CamelCaseOptions } from './utilities';\n\ntype StyleObject = Record<string, string>;\n\ninterface StyleToJSOptions extends CamelCaseOptions {}\n\n/**\n * Parses CSS inline style to JavaScript object (camelCased).\n */\nfunction StyleToJS(style: string, options?: StyleToJSOptions): StyleObject {\n  const output: StyleObject = {};\n\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  StyleToObject(style, (property, value) => {\n    // skip CSS comment\n    if (property && value) {\n      output[camelCase(property, options)] = value;\n    }\n  });\n\n  return output;\n}\n\nStyleToJS.default = StyleToJS;\n\nexport = StyleToJS;\n", "/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n", "'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = document.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._renderRows.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      this._accessibilityContainer.remove();\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityContainer.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      this._liveRegion.remove();\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService, optionsService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode && optionsService.rawOptions.ignoreBracketedPasteMode !== true);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBufferCellPosition, ILink, ILinkDecorations, ILinkProvider, ILinkWithState, ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, disposeArray, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { IBufferService } from 'common/services/Services';\nimport { IMouseService, IRenderService } from './services/Services';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine\n    //       should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // Sanity check, this shouldn't happen in practice as this listener would be disposed\n          if (!this._currentLink) {\n            return;\n          }\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const end = this._bufferService.buffer.ydisp + 1 + e.end;\n          // Only clear the link if the viewport change happened on this line\n          if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n            this._clearCurrentLink(start, end);\n            if (this._lastMouseEvent && this._element) {\n              // re-eval previously active link after changes\n              const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n              if (position) {\n                this._askForLink(position, false);\n              }\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same\n    //       id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { copyHandler, handlePasteEvent, moveTextAreaUnderMouseCursor, paste, rightClickHandler } from 'browser/Clipboard';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { CharacterJoinerHandler, CustomKeyEventHandler, IBrowser, IBufferRange, ICompositionHelper, ILinkifier2, ITerminal, IViewport } from 'browser/Types';\nimport { Viewport } from 'browser/Viewport';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { MouseService } from 'browser/services/MouseService';\nimport { RenderService } from 'browser/services/RenderService';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport { ICharSizeService, ICharacterJoinerService, ICoreBrowserService, IMouseService, IRenderService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ThemeService } from 'browser/services/ThemeService';\nimport { color, rgba } from 'common/Color';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { ColorRequestType, CoreMouseAction, CoreMouseButton, CoreMouseEventType, IColorEvent, ITerminalOptions, KeyboardResultType, ScrollSource, SpecialColorIndex } from 'common/Types';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { IBuffer } from 'common/buffer/Types';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { IDecoration, IDecorationOptions, IDisposable, ILinkProvider, IMarker } from 'xterm';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { AccessibilityManager } from './AccessibilityManager';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: MutableDisposable<AccessibilityManager> = this.register(new MutableDisposable());\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case SpecialColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case SpecialColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case SpecialColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager.value && this._renderService) {\n        this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager.clear();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService, this.optionsService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport, this._viewportElement, this._viewportScrollArea);\n    this.viewport.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent, ScrollSource.VIEWPORT)),\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        el.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        el.addEventListener('mouseup', eventListeners.mouseup);\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    if (source === ScrollSource.VIEWPORT) {\n      super.scrollLines(disp, suppressScrollEvent, source);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.viewport?.scrollLines(disp);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService, this.optionsService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public registerMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // IMPORTANT: Fire scroll event before viewport is reset. This ensures embedders get the clear\n    // scroll event and that the viewport's state will be valid for immediate writes.\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n    this.viewport?.reset();\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n    this.viewport?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<{ amount: number, suppressScrollEvent: boolean }>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that\n    // case, therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea());\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  public reset(): void {\n    this._currentRowHeight = 0;\n    this._currentDeviceCellHeight = 0;\n    this._lastRecordedBufferLength = 0;\n    this._lastRecordedViewportHeight = 0;\n    this._lastRecordedBufferHeight = 0;\n    this._lastTouchY = 0;\n    this._lastScrollTop = 0;\n    // Sync on next animation frame to ensure the new terminal state is used\n    this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: true });\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._onRequestScrollLines.fire({ amount: diff, suppressScrollEvent: true });\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  public scrollLines(disp: number): void {\n    if (disp === 0) {\n      return;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._onRequestScrollLines.fire({ amount: disp, suppressScrollEvent: false });\n    } else {\n      const amount = disp * this._currentRowHeight;\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        this._smoothScrollState.target = this._smoothScrollState.origin + amount;\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n        decoration.onDispose(() => {\n          this._decorationElements.delete(decoration);\n          element!.remove();\n        });\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DomRendererRowFactory, RowCss } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _widthCache: WidthCache;\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._widthCache.dispose();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n\n    this._widthCache = new WidthCache(document);\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +   // TODO: find workaround for inline-block (creates ~20% render penalty)\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      ` font-kerning: none;` +\n      ` white-space: pre` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${RowCss.BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  border-bottom-style: hidden;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: inherit;` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}:not(.${RowCss.CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_OUTLINE_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` border-bottom: 1px ${colors.cursor.css};` +\n      ` border-bottom-style: solid;` +\n      ` height: calc(100% - 1px);` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  /**\n   * default letter spacing\n   * Due to rounding issues in dimensions dpr calc glyph might render\n   * slightly too wide or too narrow. The method corrects the stacking offsets\n   * by applying a default letter-spacing for all chars.\n   * The value gets passed to the row factory to avoid setting this value again\n   * (render speedup is roughly 10%).\n   */\n  private _setDefaultSpacing(): void {\n    // measure same char as in CharSizeService to get the base deviation\n    const spacing = this.dimensions.css.cell.width - this._widthCache.get('W', false, false);\n    this._rowContainer.style.letterSpacing = `${spacing}px`;\n    this._rowFactory.defaultSpacing = spacing;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n    this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    this._selectionContainer.replaceChildren();\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n    // update spacing cache\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and\n       * `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + buffer.ydisp;\n      const rowElement = this._rowElements[y];\n      const lineData = buffer.lines.get(row);\n      if (!rowElement || !lineData) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          lineData,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          -1,\n          -1\n        )\n      );\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    // clip coords into viewport\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n    const maxY = this._bufferService.rows - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n\n    cols = Math.min(cols, this._bufferService.cols);\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    // refresh rows within link range\n    for (let i = y; i <= y2; ++i) {\n      const row = i + buffer.ydisp;\n      const rowElement = this._rowElements[i];\n      const bufferline = buffer.lines.get(row);\n      if (!rowElement || !bufferline) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          bufferline,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          enabled ? (i === y ? x : 0) : -1,\n          enabled ? ((i === y2 ? x2 : cols) - 1) : -1\n        )\n      );\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { IColorContrastCache } from 'browser/Types';\n\n\nexport const enum RowCss {\n  BOLD_CLASS = 'xterm-bold',\n  DIM_CLASS = 'xterm-dim',\n  ITALIC_CLASS = 'xterm-italic',\n  UNDERLINE_CLASS = 'xterm-underline',\n  OVERLINE_CLASS = 'xterm-overline',\n  STRIKETHROUGH_CLASS = 'xterm-strikethrough',\n  CURSOR_CLASS = 'xterm-cursor',\n  CURSOR_BLINK_CLASS = 'xterm-cursor-blink',\n  CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block',\n  CURSOR_STYLE_OUTLINE_CLASS = 'xterm-cursor-outline',\n  CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar',\n  CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline'\n}\n\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  public defaultSpacing = 0;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(\n    lineData: IBufferLine,\n    row: number,\n    isCursorRow: boolean,\n    cursorStyle: string | undefined,\n    cursorInactiveStyle: string | undefined,\n    cursorX: number,\n    cursorBlink: boolean,\n    cellWidth: number,\n    widthCache: WidthCache,\n    linkStart: number,\n    linkEnd: number\n  ): HTMLSpanElement[] {\n\n    const elements: HTMLSpanElement[] = [];\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    const colors = this._themeService.colors;\n\n    let lineLength = lineData.getNoBgTrimmedLength();\n    if (isCursorRow && lineLength < cursorX + 1) {\n      lineLength = cursorX + 1;\n    }\n\n    let charElement: HTMLSpanElement | undefined;\n    let cellAmount = 0;\n    let text = '';\n    let oldBg = 0;\n    let oldFg = 0;\n    let oldExt = 0;\n    let oldLinkHover: number | boolean = false;\n    let oldSpacing = 0;\n    let oldIsInSelection: boolean = false;\n    let spacing = 0;\n    const classes: string[] = [];\n\n    const hasHover = linkStart !== -1 && linkEnd !== -1;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const isInSelection = this._isCellInSelection(x, row);\n      const isCursorCell = isCursorRow && x === cursorX;\n      const isLinkHover = hasHover && x >= linkStart && x <= linkEnd;\n\n      let isDecorated = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        isDecorated = true;\n      });\n\n      // get chars to render for this cell\n      let chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n      if (chars === ' ' && (cell.isUnderline() || cell.isOverline())) {\n        chars = '\\xa0';\n      }\n\n      // lookup char render width and calc spacing\n      spacing = width * cellWidth - widthCache.get(chars, cell.isBold(), cell.isItalic());\n\n      if (!charElement) {\n        charElement = this._document.createElement('span');\n      } else {\n        /**\n         * chars can only be merged on existing span if:\n         * - existing span only contains mergeable chars (cellAmount != 0)\n         * - bg did not change (or both are in selection)\n         * - fg did not change (or both are in selection and selection fg is set)\n         * - ext did not change\n         * - underline from hover state did not change\n         * - cell content renders to same letter-spacing\n         * - cell is not cursor\n         */\n        if (\n          cellAmount\n          && (\n            (isInSelection && oldIsInSelection)\n            || (!isInSelection && !oldIsInSelection && cell.bg === oldBg)\n          )\n          && (\n            (isInSelection && oldIsInSelection && colors.selectionForeground)\n            || cell.fg === oldFg\n          )\n          && cell.extended.ext === oldExt\n          && isLinkHover === oldLinkHover\n          && spacing === oldSpacing\n          && !isCursorCell\n          && !isJoined\n          && !isDecorated\n        ) {\n          // no span alterations, thus only account chars skipping all code below\n          text += chars;\n          cellAmount++;\n          continue;\n        } else {\n          /**\n           * cannot merge:\n           * - apply left-over text to old span\n           * - create new span, reset state holders cellAmount & text\n           */\n          if (cellAmount) {\n            charElement.textContent = text;\n          }\n          charElement = this._document.createElement('span');\n          cellAmount = 0;\n          text = '';\n        }\n      }\n      // preserve conditions for next merger eval round\n      oldBg = cell.bg;\n      oldFg = cell.fg;\n      oldExt = cell.extended.ext;\n      oldLinkHover = isLinkHover;\n      oldSpacing = spacing;\n      oldIsInSelection = isInSelection;\n\n      if (isJoined) {\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorCell) {\n        classes.push(RowCss.CURSOR_CLASS);\n        if (this._coreBrowserService.isFocused) {\n          if (cursorBlink) {\n            classes.push(RowCss.CURSOR_BLINK_CLASS);\n          }\n          classes.push(\n            cursorStyle === 'bar'\n              ? RowCss.CURSOR_STYLE_BAR_CLASS\n              : cursorStyle === 'underline'\n                ? RowCss.CURSOR_STYLE_UNDERLINE_CLASS\n                : RowCss.CURSOR_STYLE_BLOCK_CLASS\n          );\n        } else {\n          if (cursorInactiveStyle) {\n            switch (cursorInactiveStyle) {\n              case 'outline':\n                classes.push(RowCss.CURSOR_STYLE_OUTLINE_CLASS);\n                break;\n              case 'block':\n                classes.push(RowCss.CURSOR_STYLE_BLOCK_CLASS);\n                break;\n              case 'bar':\n                classes.push(RowCss.CURSOR_STYLE_BAR_CLASS);\n                break;\n              case 'underline':\n                classes.push(RowCss.CURSOR_STYLE_UNDERLINE_CLASS);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      if (cell.isBold()) {\n        classes.push(RowCss.BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        classes.push(RowCss.ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        classes.push(RowCss.DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        text = WHITESPACE_CELL_CHAR;\n      } else {\n        text = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        classes.push(`${RowCss.UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        classes.push(RowCss.OVERLINE_CLASS);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        classes.push(RowCss.STRIKETHROUGH_CLASS);\n      }\n\n      // apply link hover underline late, effectively overrides any previous text-decoration\n      // settings\n      if (isLinkHover) {\n        charElement.style.textDecoration = 'underline';\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection\n      if (!isTop && isInSelection) {\n        // If in the selection, force the element to be above the selection to improve contrast and\n        // support opaque selections. The applies background is not actually needed here as\n        // selection is drawn in a seperate container, the main purpose of this to ensuring minimum\n        // contrast ratio\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        bg = bgOverride.rgba >> 8 & 0xFFFFFF;\n        bgColorMode = Attributes.CM_RGB;\n        // Since an opaque selection is being rendered, the selection pretends to be a decoration to\n        // ensure text is drawn above the selection.\n        isTop = true;\n        // Apply selection foreground if applicable\n        if (colors.selectionForeground) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        classes.push('xterm-decoration-top');\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          classes.push(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            classes.push(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            classes.push(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              classes.push(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // apply CSS classes\n      // slightly faster than using classList by omitting\n      // checks for doubled entries (code above should not have doublets)\n      if (classes.length) {\n        charElement.className = classes.join(' ');\n        classes.length = 0;\n      }\n\n      // exclude conditions for cell merging - never merge these\n      if (!isCursorCell && !isJoined && !isDecorated) {\n        cellAmount++;\n      } else {\n        charElement.textContent = text;\n      }\n      // apply letter-spacing rule\n      if (spacing !== this.defaultSpacing) {\n        charElement.style.letterSpacing = `${spacing}px`;\n      }\n\n      elements.push(charElement);\n      x = lastCharX;\n    }\n\n    // postfix text of last merged span\n    if (charElement && cellAmount) {\n      charElement.textContent = text;\n    }\n\n    return elements;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    const cache = this._getContrastCache(cell);\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = cache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n      // non-dim cells\n      const ratio = this._optionsService.rawOptions.minimumContrastRatio / (cell.isDim() ? 2 : 1);\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, ratio);\n      cache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getContrastCache(cell: ICellData): IColorContrastCache {\n    if (cell.isDim()) {\n      return this._themeService.colors.halfContrastCache;\n    }\n    return this._themeService.colors.contrastCache;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n", "/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { FontWeight } from 'common/services/Services';\n\n\nexport const enum WidthCacheSettings {\n  /** sentinel for unset values in flat cache */\n  FLAT_UNSET = -9999,\n  /** size of flat cache, size-1 equals highest codepoint handled by flat */\n  FLAT_SIZE = 256,\n  /** char repeat for measuring */\n  REPEAT = 32\n}\n\n\nconst enum FontVariant {\n  REGULAR = 0,\n  BOLD = 1,\n  ITALIC = 2,\n  BOLD_ITALIC = 3\n}\n\n\nexport class WidthCache implements IDisposable {\n  // flat cache for regular variant up to CacheSettings.FLAT_SIZE\n  // NOTE: ~4x faster access than holey (serving >>80% of terminal content)\n  //       It has a small memory footprint (only 1MB for full BMP caching),\n  //       still the sweet spot is not reached before touching 32k different codepoints,\n  //       thus we store the remaining <<20% of terminal data in a holey structure.\n  protected _flat = new Float32Array(WidthCacheSettings.FLAT_SIZE);\n\n  // holey cache for bold, italic and bold&italic for any string\n  // FIXME: can grow really big over time (~8.5 MB for full BMP caching),\n  //        so a shared API across terminals is needed\n  protected _holey: Map<string, number> | undefined;\n\n  private _font = '';\n  private _fontSize = 0;\n  private _weight: FontWeight = 'normal';\n  private _weightBold: FontWeight = 'bold';\n  private _container: HTMLDivElement;\n  private _measureElements: HTMLSpanElement[] = [];\n\n  constructor(_document: Document) {\n    this._container = _document.createElement('div');\n    this._container.style.position = 'absolute';\n    this._container.style.top = '-50000px';\n    this._container.style.width = '50000px';\n    // SP should stack in spans\n    this._container.style.whiteSpace = 'pre';\n    // avoid undercuts in non-monospace fonts from kerning\n    this._container.style.fontKerning = 'none';\n\n    const regular = _document.createElement('span');\n\n    const bold = _document.createElement('span');\n    bold.style.fontWeight = 'bold';\n\n    const italic = _document.createElement('span');\n    italic.style.fontStyle = 'italic';\n\n    const boldItalic = _document.createElement('span');\n    boldItalic.style.fontWeight = 'bold';\n    boldItalic.style.fontStyle = 'italic';\n\n    // NOTE: must be in order of FontVariant\n    this._measureElements = [regular, bold, italic, boldItalic];\n    this._container.appendChild(regular);\n    this._container.appendChild(bold);\n    this._container.appendChild(italic);\n    this._container.appendChild(boldItalic);\n\n    _document.body.appendChild(this._container);\n\n    this.clear();\n  }\n\n  public dispose(): void {\n    this._container.remove();           // remove elements from DOM\n    this._measureElements.length = 0;   // release element refs\n    this._holey = undefined;            // free cache memory via GC\n  }\n\n  /**\n   * Clear the width cache.\n   */\n  public clear(): void {\n    this._flat.fill(WidthCacheSettings.FLAT_UNSET);\n    // .clear() has some overhead, re-assign instead (>3 times faster)\n    this._holey = new Map<string, number>();\n  }\n\n  /**\n   * Set the font for measuring.\n   * Must be called for any changes on font settings.\n   * Also clears the cache.\n   */\n  public setFont(font: string, fontSize: number, weight: FontWeight, weightBold: FontWeight): void {\n    // skip if nothing changed\n    if (font === this._font\n      && fontSize === this._fontSize\n      && weight === this._weight\n      && weightBold === this._weightBold\n    ) {\n      return;\n    }\n\n    this._font = font;\n    this._fontSize = fontSize;\n    this._weight = weight;\n    this._weightBold = weightBold;\n\n    this._container.style.fontFamily = this._font;\n    this._container.style.fontSize = `${this._fontSize}px`;\n    this._measureElements[FontVariant.REGULAR].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD].style.fontWeight = `${weightBold}`;\n    this._measureElements[FontVariant.ITALIC].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD_ITALIC].style.fontWeight = `${weightBold}`;\n\n    this.clear();\n  }\n\n  /**\n   * Get the render width for cell content `c` with current font settings.\n   * `variant` denotes the font variant to be used.\n   */\n  public get(c: string, bold: boolean | number, italic: boolean | number): number {\n    let cp = 0;\n    if (!bold && !italic && c.length === 1 && (cp = c.charCodeAt(0)) < WidthCacheSettings.FLAT_SIZE) {\n      return this._flat[cp] !== WidthCacheSettings.FLAT_UNSET\n        ? this._flat[cp]\n        : (this._flat[cp] = this._measure(c, 0));\n    }\n    let key = c;\n    if (bold) key += 'B';\n    if (italic) key += 'I';\n    let width = this._holey!.get(key);\n    if (width === undefined) {\n      let variant = 0;\n      if (bold) variant |= FontVariant.BOLD;\n      if (italic) variant |= FontVariant.ITALIC;\n      width = this._measure(c, variant);\n      this._holey!.set(key, width);\n    }\n    return width;\n  }\n\n  protected _measure(c: string, variant: FontVariant): number {\n    const el = this._measureElements[variant];\n    el.textContent = c.repeat(WidthCacheSettings.REPEAT);\n    return el.offsetWidth / WidthCacheSettings.REPEAT;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n\nconst enum MeasureSettings {\n  REPEAT = 32\n}\n\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses\n// ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W'.repeat(MeasureSettings.REPEAT);\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._measureElement.style.whiteSpace = 'pre';\n    this._measureElement.style.fontKerning = 'none';\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = {\n      height: Number(this._measureElement.offsetHeight),\n      width: Number(this._measureElement.offsetWidth)\n    };\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width / MeasureSettings.REPEAT;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n    coords[0] = Math.min(Math.max(coords[0], 0), this._renderService.dimensions.css.canvas.width - 1);\n    coords[1] = Math.min(Math.max(coords[1], 0), this._renderService.dimensions.css.canvas.height - 1);\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, MutableDisposable } from 'common/Lifecycle';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: MutableDisposable<IRenderer> = this.register(new MutableDisposable());\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer.value!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer.value?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.value.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.value.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer.value;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    this._renderer.value = renderer;\n    this._renderer.value.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer.value!.handleResize(cols, rows));\n    } else {\n      this._renderer.value.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer.value?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer.value?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer.value?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.value?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer.value?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.value?.clear();\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { ICoreBrowserService, IMouseService, IRenderService, ISelectionService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport { getRangeLength } from 'common/buffer/BufferRange';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { AllColorIndex, IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: AllColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { AllColorIndex, IColor, SpecialColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n", "/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics = this.register(new MutableDisposable());\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics.clear();\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics.value) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics.value = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value));\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    // Duplicate the array to avoid issues when _array changes while iterating\n    return [...this._array].values();\n  }\n\n  private _search(key: number): number {\n    let min = 0;\n    let max = this._array.length - 1;\n    while (max >= min) {\n      let mid = (min + max) >> 1;\n      const midKey = this._getKey(this._array[mid]);\n      if (midKey > key) {\n        max = mid - 1;\n      } else if (midKey < key) {\n        min = mid + 1;\n      } else {\n        // key in list, walk to lowest duplicate\n        while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n          mid--;\n        }\n        return mid;\n      }\n    }\n    // key not in list\n    // still return closest min (also used as insert position)\n    return min;\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IAttributeData, IBufferLine, ICellData, ICharset } from 'common/Types';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { getWrappedLineTrimmedLength, reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths } from 'common/buffer/BufferReflow';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, WHITESPACE_CELL_WIDTH } from 'common/buffer/Constants';\nimport { Marker } from 'common/buffer/Marker';\nimport { IBuffer } from 'common/buffer/Types';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IAttributeData, IBufferLine, ICellData, IExtendedAttrs } from 'common/Types';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, BgFlags, CHAR_DATA_ATTR_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, Content, NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock,\n        // volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n", "\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { clone } from 'common/Clone';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { IBufferService, ICoreService, ILogService, IOptionsService } from 'common/services/Services';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecoration, IDecorationOptions, IMarker } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => this.reset()));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { FontWeight, IOptionsService, ITerminalOptions } from 'common/services/Services';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { EventEmitter } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { IBufferNamespace as IBufferNamespaceApi, IDecoration, IDecorationOptions, IDisposable, ILinkProvider, ILocalizableStrings, IMarker, IModes, IParser, ITerminalAddon, Terminal as ITerminalApi, ITerminalInitOnlyOptions, IUnicodeHandling } from 'xterm';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.registerMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n", "import React, { useState, useEffect, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport { Terminal } from 'xterm';\nimport DOMPurify from 'dompurify';\nimport 'xterm/css/xterm.css';\n\ninterface FileItem {\n  id: string;\n  name: string;\n  url: string;\n  size?: number;\n}\n\ninterface DocViewerProps {\n  files: FileItem[];\n  initialId?: string;\n}\n\nexport const DocViewer: React.FC<DocViewerProps> = ({ files, initialId }) => {\n  const [activeFileId, setActiveFileId] = useState<string>(initialId || files[0]?.id);\n  const [content, setContent] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const terminalRef = useRef<HTMLDivElement>(null);\n  const terminalInstance = useRef<Terminal | null>(null);\n  const previousFileId = useRef<string | null>(null);\n\n  const activeFile = files.find(f => f.id === activeFileId);\n\n  // Determine file type from extension\n  const getFileType = (filename: string): 'markdown' | 'ascii' | 'raw' => {\n    const ext = filename.toLowerCase().split('.').pop();\n    if (ext === 'md') return 'markdown';\n    if (ext === 'txt' || ext === 'ascii' || filename.includes('ascii')) return 'ascii';\n    return 'raw';\n  };\n\n  const fileType = activeFile ? getFileType(activeFile.name) : 'raw';\n\n  // Fetch file content\n  useEffect(() => {\n    if (!activeFile) return;\n\n    const fetchContent = async () => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        const response = await fetch(activeFile.url);\n        if (!response.ok) {\n          throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n        }\n        const text = await response.text();\n\n        // Sanitize markdown content\n        const sanitizedContent = fileType === 'markdown'\n          ? DOMPurify.sanitize(text, {\n              ALLOWED_TAGS: ['p', 'br', 'strong', 'em', 'code', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'ul', 'ol', 'li', 'a', 'blockquote', 'table', 'thead', 'tbody', 'tr', 'th', 'td', 'hr', 'img'],\n              ALLOWED_ATTR: ['href', 'src', 'alt', 'title', 'class']\n            })\n          : text;\n\n        setContent(sanitizedContent);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to load file');\n        setContent('');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchContent();\n  }, [activeFile, fileType]);\n\n  // Initialize or update terminal for ASCII files\n  useEffect(() => {\n    if (fileType !== 'ascii' || !terminalRef.current || !content) {\n      return;\n    }\n\n    // Initialize terminal once if not exists\n    if (!terminalInstance.current) {\n      const term = new Terminal({\n        fontFamily: '\"Cascadia Code\", \"Consolas\", \"Courier New\", monospace',\n        fontSize: 13,\n        lineHeight: 1.4,\n        theme: {\n          background: '#ffffff',\n          foreground: '#323130',\n          cursor: '#0078d4',\n          cursorAccent: '#ffffff',\n          selectionBackground: '#add6ff',\n          black: '#000000',\n          red: '#cd3131',\n          green: '#0dbc79',\n          yellow: '#e5e510',\n          blue: '#0078d4',\n          magenta: '#bc3fbc',\n          cyan: '#11a8cd',\n          white: '#323130',\n          brightBlack: '#666666',\n          brightRed: '#f14c4c',\n          brightGreen: '#23d18b',\n          brightYellow: '#f5f543',\n          brightBlue: '#3b8eea',\n          brightMagenta: '#d670d6',\n          brightCyan: '#29b8db',\n          brightWhite: '#605e5c',\n        },\n        cursorBlink: false,\n        disableStdin: true,\n        allowProposedApi: true,\n        convertEol: true,\n      });\n\n      term.open(terminalRef.current);\n      terminalInstance.current = term;\n    }\n\n    // Update content if file changed\n    if (previousFileId.current !== activeFileId && terminalInstance.current) {\n      terminalInstance.current.reset();\n      terminalInstance.current.write(content);\n      previousFileId.current = activeFileId;\n    }\n  }, [fileType, content, activeFileId]);\n\n  // Get file icon\n  const getFileIcon = (filename: string): string => {\n    if (filename.includes('architecture')) return '\uD83D\uDCDD';\n    if (filename.includes('security')) return '\uD83D\uDD12';\n    if (filename.includes('reliability')) return '\u26A1';\n    if (filename.includes('performance')) return '\uD83D\uDE80';\n    if (filename.includes('cost')) return '\uD83D\uDCB0';\n    if (filename.includes('operational')) return '\u2699\uFE0F';\n    if (filename.includes('diagram')) return '\uD83D\uDCD0';\n    if (filename.endsWith('.md')) return '\uD83D\uDCC4';\n    if (filename.endsWith('.txt')) return '\uD83D\uDCCB';\n    return '\uD83D\uDCCE';\n  };\n\n  if (!files || files.length === 0) {\n    return (\n      <div className=\"flex items-center justify-center h-96 bg-white rounded-lg border border-gray-200\">\n        <p className=\"text-gray-500\">No files available</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex h-full bg-white rounded-lg shadow-lg border border-gray-200 overflow-hidden\" style={{ fontFamily: 'Segoe UI, system-ui, sans-serif', minHeight: '600px' }}>\n      {/* Left Sidebar - File List */}\n      <div className=\"w-64 bg-gray-50 border-r border-gray-200 overflow-y-auto\">\n        <div className=\"p-4 border-b border-gray-200 bg-white\">\n          <h3 className=\"font-semibold text-gray-900\">Generated Files</h3>\n          <p className=\"text-xs text-gray-600 mt-1\">{files.length} files</p>\n        </div>\n        <div className=\"p-2\">\n          {files.map(file => (\n            <button\n              key={file.id}\n              onClick={() => setActiveFileId(file.id)}\n              className={`w-full text-left px-3 py-2 rounded mb-1 transition-colors ${\n                activeFileId === file.id\n                  ? 'bg-[#0078d4] text-white'\n                  : 'text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              <div className=\"flex items-start gap-2\">\n                <span className=\"text-lg flex-shrink-0\">{getFileIcon(file.name)}</span>\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"text-sm font-medium truncate\">{file.name}</div>\n                  {file.size && (\n                    <div className=\"text-xs opacity-75 mt-0.5\">\n                      {(file.size / 1024).toFixed(1)} KB\n                    </div>\n                  )}\n                </div>\n              </div>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Main Panel - File Content */}\n      <div className=\"flex-1 flex flex-col overflow-hidden\">\n        {/* Header */}\n        <div className=\"px-6 py-4 bg-gray-50 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-3\">\n              <span className=\"text-2xl\">{activeFile && getFileIcon(activeFile.name)}</span>\n              <div>\n                <h2 className=\"text-lg font-semibold text-gray-900\">\n                  {activeFile?.name || 'No file selected'}\n                </h2>\n                <p className=\"text-sm text-gray-600\">\n                  {fileType === 'markdown' && '\uD83D\uDCDD Markdown Document'}\n                  {fileType === 'ascii' && '\uD83D\uDCD0 ASCII Art / Terminal Output'}\n                  {fileType === 'raw' && '\uD83D\uDCC4 Plain Text'}\n                </p>\n              </div>\n            </div>\n            {activeFile && (\n              <div className=\"flex gap-2\">\n                <a\n                  href={activeFile.url}\n                  download={activeFile.name}\n                  className=\"px-3 py-1.5 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded hover:bg-gray-50 transition-colors\"\n                >\n                  \u2B07\uFE0F Download\n                </a>\n                <a\n                  href={activeFile.url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"px-3 py-1.5 text-sm font-medium text-[#0078d4] bg-white border border-[#0078d4] rounded hover:bg-blue-50 transition-colors\"\n                >\n                  \uD83D\uDD17 Open\n                </a>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Content Area */}\n        <div className=\"flex-1 overflow-y-auto p-6 bg-white\">\n          {loading && (\n            <div className=\"flex items-center justify-center h-64\">\n              <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-[#0078d4]\"></div>\n            </div>\n          )}\n\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n              <h3 className=\"text-red-800 font-semibold mb-2\">Failed to load file</h3>\n              <p className=\"text-red-600 text-sm\">{error}</p>\n            </div>\n          )}\n\n          {!loading && !error && content && (\n            <>\n              {/* Markdown Preview */}\n              {fileType === 'markdown' && (\n                <div className=\"prose prose-azure max-w-none\">\n                  <ReactMarkdown\n                    remarkPlugins={[remarkGfm]}\n                    components={{\n                      h1: ({ children }) => (\n                        <h1 className=\"text-3xl font-semibold text-gray-900 mb-4 mt-6 pb-2 border-b border-gray-200\">\n                          {children}\n                        </h1>\n                      ),\n                      h2: ({ children }) => (\n                        <h2 className=\"text-2xl font-semibold text-gray-900 mb-3 mt-5 pb-2 border-b border-gray-200\">\n                          {children}\n                        </h2>\n                      ),\n                      h3: ({ children }) => (\n                        <h3 className=\"text-xl font-semibold text-gray-900 mb-2 mt-4\">\n                          {children}\n                        </h3>\n                      ),\n                      p: ({ children }) => (\n                        <p className=\"text-gray-700 mb-4 leading-relaxed\">{children}</p>\n                      ),\n                      a: ({ href, children }) => (\n                        <a\n                          href={href}\n                          className=\"text-[#0078d4] hover:underline\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          {children}\n                        </a>\n                      ),\n                      code: ({ inline, children }: any) =>\n                        inline ? (\n                          <code className=\"px-1.5 py-0.5 bg-gray-100 text-[#d73a49] rounded text-sm font-mono\">\n                            {children}\n                          </code>\n                        ) : (\n                          <code className=\"block bg-gray-50 border border-gray-200 rounded p-4 overflow-x-auto text-sm font-mono text-gray-800\">\n                            {children}\n                          </code>\n                        ),\n                      pre: ({ children }) => (\n                        <pre className=\"bg-gray-50 border border-gray-200 rounded p-4 overflow-x-auto mb-4\">\n                          {children}\n                        </pre>\n                      ),\n                      table: ({ children }) => (\n                        <div className=\"overflow-x-auto mb-4\">\n                          <table className=\"min-w-full border border-gray-300 rounded\">\n                            {children}\n                          </table>\n                        </div>\n                      ),\n                      thead: ({ children }) => (\n                        <thead className=\"bg-gray-100\">{children}</thead>\n                      ),\n                      th: ({ children }) => (\n                        <th className=\"px-4 py-2 text-left text-sm font-semibold text-gray-900 border-b border-gray-300\">\n                          {children}\n                        </th>\n                      ),\n                      td: ({ children }) => (\n                        <td className=\"px-4 py-2 text-sm text-gray-700 border-b border-gray-200\">\n                          {children}\n                        </td>\n                      ),\n                      ul: ({ children }) => (\n                        <ul className=\"list-disc list-inside mb-4 space-y-2 text-gray-700\">\n                          {children}\n                        </ul>\n                      ),\n                      ol: ({ children }) => (\n                        <ol className=\"list-decimal list-inside mb-4 space-y-2 text-gray-700\">\n                          {children}\n                        </ol>\n                      ),\n                      li: ({ children }) => (\n                        <li className=\"ml-4\">{children}</li>\n                      ),\n                      blockquote: ({ children }) => (\n                        <blockquote className=\"border-l-4 border-[#0078d4] pl-4 py-2 mb-4 italic text-gray-600 bg-blue-50\">\n                          {children}\n                        </blockquote>\n                      ),\n                      strong: ({ children }) => (\n                        <strong className=\"font-semibold text-gray-900\">{children}</strong>\n                      ),\n                      em: ({ children }) => (\n                        <em className=\"italic text-gray-700\">{children}</em>\n                      ),\n                    }}\n                  >\n                    {content}\n                  </ReactMarkdown>\n                </div>\n              )}\n\n              {/* ASCII Terminal Preview */}\n              {fileType === 'ascii' && (\n                <div\n                  ref={terminalRef}\n                  className=\"bg-white rounded border border-gray-200 overflow-hidden\"\n                  style={{ minHeight: '500px' }}\n                />\n              )}\n\n              {/* Raw Text Preview */}\n              {fileType === 'raw' && (\n                <pre className=\"bg-gray-50 border border-gray-200 rounded p-4 overflow-auto text-sm font-mono text-gray-800 whitespace-pre-wrap\">\n                  {content}\n                </pre>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n", "/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n", "/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n", "/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n", "/**\n * @import {Schema as SchemaType, Space} from 'property-information'\n */\n\n/** @type {SchemaType} */\nexport class Schema {\n  /**\n   * @param {SchemaType['property']} property\n   *   Property.\n   * @param {SchemaType['normal']} normal\n   *   Normal.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Schema.\n   */\n  constructor(property, normal, space) {\n    this.normal = normal\n    this.property = property\n\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\nSchema.prototype.normal = {}\nSchema.prototype.property = {}\nSchema.prototype.space = undefined\n", "/**\n * @import {Info, Space} from 'property-information'\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {ReadonlyArray<Schema>} definitions\n *   Definitions.\n * @param {Space | undefined} [space]\n *   Space.\n * @returns {Schema}\n *   Schema.\n */\nexport function merge(definitions, space) {\n  /** @type {Record<string, Info>} */\n  const property = {}\n  /** @type {Record<string, string>} */\n  const normal = {}\n\n  for (const definition of definitions) {\n    Object.assign(property, definition.property)\n    Object.assign(normal, definition.normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n", "/**\n * Get the cleaned case insensitive form of an attribute or property.\n *\n * @param {string} value\n *   An attribute-like or property-like name.\n * @returns {string}\n *   Value that can be used to look up the properly cased property on a\n *   `Schema`.\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n", "/**\n * @import {Info as InfoType} from 'property-information'\n */\n\n/** @type {InfoType} */\nexport class Info {\n  /**\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute) {\n    this.attribute = attribute\n    this.property = property\n  }\n}\n\nInfo.prototype.attribute = ''\nInfo.prototype.booleanish = false\nInfo.prototype.boolean = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.defined = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.number = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.property = ''\nInfo.prototype.spaceSeparated = false\nInfo.prototype.space = undefined\n", "let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n", "/**\n * @import {Space} from 'property-information'\n */\n\nimport {Info} from './info.js'\nimport * as types from './types.js'\n\nconst checks = /** @type {ReadonlyArray<keyof typeof types>} */ (\n  Object.keys(types)\n)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @param {number | null | undefined} [mask]\n   *   Mask.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @template {keyof DefinedInfo} Key\n *   Key type.\n * @param {DefinedInfo} values\n *   Info.\n * @param {Key} key\n *   Key.\n * @param {DefinedInfo[Key]} value\n *   Value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n", "/**\n * @import {Info, Space} from 'property-information'\n */\n\n/**\n * @typedef Definition\n *   Definition of a schema.\n * @property {Record<string, string> | undefined} [attributes]\n *   Normalzed names to special attribute case.\n * @property {ReadonlyArray<string> | undefined} [mustUseProperty]\n *   Normalized names that must be set as properties.\n * @property {Record<string, number | null>} properties\n *   Property names to their types.\n * @property {Space | undefined} [space]\n *   Space.\n * @property {Transform} transform\n *   Transform a property name.\n */\n\n/**\n * @callback Transform\n *   Transform.\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Attribute.\n */\n\nimport {normalize} from '../normalize.js'\nimport {DefinedInfo} from './defined-info.js'\nimport {Schema} from './schema.js'\n\n/**\n * @param {Definition} definition\n *   Definition.\n * @returns {Schema}\n *   Schema.\n */\nexport function create(definition) {\n  /** @type {Record<string, Info>} */\n  const properties = {}\n  /** @type {Record<string, string>} */\n  const normals = {}\n\n  for (const [property, value] of Object.entries(definition.properties)) {\n    const info = new DefinedInfo(\n      property,\n      definition.transform(definition.attributes || {}, property),\n      value,\n      definition.space\n    )\n\n    if (\n      definition.mustUseProperty &&\n      definition.mustUseProperty.includes(property)\n    ) {\n      info.mustUseProperty = true\n    }\n\n    properties[property] = info\n\n    normals[normalize(property)] = property\n    normals[normalize(info.attribute)] = property\n  }\n\n  return new Schema(properties, normals, definition.space)\n}\n", "import {create} from './util/create.js'\nimport {booleanish, number, spaceSeparated} from './util/types.js'\n\nexport const aria = create({\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  },\n  transform(_, property) {\n    return property === 'role'\n      ? property\n      : 'aria-' + property.slice(4).toLowerCase()\n  }\n})\n", "/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} attribute\n *   Attribute.\n * @returns {string}\n *   Transformed attribute.\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n", "import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Transformed property.\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n", "import {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  booleanish,\n  boolean,\n  commaSeparated,\n  number,\n  overloadedBoolean,\n  spaceSeparated\n} from './util/types.js'\n\nexport const html = create({\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: overloadedBoolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  },\n  space: 'html',\n  transform: caseInsensitiveTransform\n})\n", "import {caseSensitiveTransform} from './util/case-sensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  boolean,\n  commaOrSpaceSeparated,\n  commaSeparated,\n  number,\n  spaceSeparated\n} from './util/types.js'\n\nexport const svg = create({\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  },\n  space: 'svg',\n  transform: caseSensitiveTransform\n})\n", "import {create} from './util/create.js'\n\nexport const xlink = create({\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  },\n  space: 'xlink',\n  transform(_, property) {\n    return 'xlink:' + property.slice(5).toLowerCase()\n  }\n})\n", "import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  properties: {xmlnsXLink: null, xmlns: null},\n  space: 'xmlns',\n  transform: caseInsensitiveTransform\n})\n", "import {create} from './util/create.js'\n\nexport const xml = create({\n  properties: {xmlBase: null, xmlLang: null, xmlSpace: null},\n  space: 'xml',\n  transform(_, property) {\n    return 'xml:' + property.slice(3).toLowerCase()\n  }\n})\n", "/**\n * Special cases for React (`Record<string, string>`).\n *\n * `hast` is close to `React` but differs in a couple of cases.\n * To get a React property from a hast property,\n * check if it is in `hastToReact`.\n * If it is, use the corresponding value;\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n", "/**\n * @import {Schema} from 'property-information'\n */\n\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\nimport {normalize} from './normalize.js'\n\nconst cap = /[A-Z]/g\nconst dash = /-[a-z]/g\nconst valid = /^data[-\\w.:]+$/i\n\n/**\n * Look up info on a property.\n *\n * In most cases the given `schema` contains info on the property.\n * All standard,\n * most legacy,\n * and some non-standard properties are supported.\n * For these cases,\n * the returned `Info` has hints about the value of the property.\n *\n * `name` can also be a valid data attribute or property,\n * in which case an `Info` object with the correctly cased `attribute` and\n * `property` is returned.\n *\n * `name` can be an unknown attribute,\n * in which case an `Info` object with `attribute` and `property` set to the\n * given name is returned.\n * It is not recommended to provide unsupported legacy or recently specced\n * properties.\n *\n *\n * @param {Schema} schema\n *   Schema;\n *   either the `html` or `svg` export.\n * @param {string} value\n *   An attribute-like or property-like name;\n *   it will be passed through `normalize` to hopefully find the correct info.\n * @returns {Info}\n *   Info.\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let property = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      property = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(property, value)\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Kebab.\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Camel.\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n", "// Note: types exposed from `index.d.ts`.\nimport {merge} from './lib/util/merge.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\nimport {xlink} from './lib/xlink.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {xml} from './lib/xml.js'\n\nexport {hastToReact} from './lib/hast-to-react.js'\n\nexport const html = merge([aria, htmlBase, xlink, xmlns, xml], 'html')\n\nexport {find} from './lib/find.js'\nexport {normalize} from './lib/normalize.js'\n\nexport const svg = merge([aria, svgBase, xlink, xmlns, xml], 'svg')\n", "/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n", "/**\n * @import {Identifier, Literal, MemberExpression} from 'estree'\n * @import {Jsx, JsxDev, Options, Props} from 'hast-util-to-jsx-runtime'\n * @import {Element, Nodes, Parents, Root, Text} from 'hast'\n * @import {MdxFlowExpressionHast, MdxTextExpressionHast} from 'mdast-util-mdx-expression'\n * @import {MdxJsxFlowElementHast, MdxJsxTextElementHast} from 'mdast-util-mdx-jsx'\n * @import {MdxjsEsmHast} from 'mdast-util-mdxjs-esm'\n * @import {Position} from 'unist'\n * @import {Child, Create, Field, JsxElement, State, Style} from './types.js'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToJs from 'style-to-js'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\n// To do: next major: `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don\u2019t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JsxElement}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpressionHast | MdxTextExpressionHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsmHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn\u2019t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  try {\n    return styleToJs(value, {reactCompat: true})\n  } catch (error) {\n    if (state.ignoreInvalidStyle) {\n      return {}\n    }\n\n    const cause = /** @type {Error} */ (error)\n    const message = new VFileMessage('Cannot parse `style` attribute', {\n      ancestors: state.ancestors,\n      cause,\n      ruleId: 'style',\n      source: 'hast-util-to-jsx-runtime'\n    })\n    message.file = state.filePath || undefined\n    message.url = docs + '#cannot-parse-style-attribute'\n\n    throw message\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {string | number} */ (result.value)\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n", "/**\n * @import {Node, Point, Position} from 'unist'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > \uD83E\uDEA6 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` \u2014 error, file not usable\n     * * `false` \u2014 warning, change may be needed\n     * * `undefined` \u2014 change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file = ''\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are \u201Cwell known\u201D.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that\u2019s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual = undefined\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected = undefined\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note = undefined\n\n    /**\n     * Link to docs for the message.\n     *\n     * > \uD83D\uDC49 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url = undefined\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n", "/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n", "/**\n * @import {Element, Nodes, Parents, Root} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {ComponentType, JSX, ReactElement, ReactNode} from 'react'\n * @import {Options as RemarkRehypeOptions} from 'remark-rehype'\n * @import {BuildVisitor} from 'unist-util-visit'\n * @import {PluggableList, Processor} from 'unified'\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n */\n\n/**\n * @typedef ExtraProps\n *   Extra fields we pass.\n * @property {Element | undefined} [node]\n *   passed when `passNode` is on.\n */\n\n/**\n * @typedef {{\n *   [Key in keyof JSX.IntrinsicElements]?: ComponentType<JSX.IntrinsicElements[Key] & ExtraProps> | keyof JSX.IntrinsicElements\n * }} Components\n *   Map tag names to components.\n */\n\n/**\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what\u2019s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it\u2019s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n */\n\n/**\n * @typedef HooksOptionsOnly\n *   Configuration specifically for {@linkcode MarkdownHooks}.\n * @property {ReactNode | null | undefined} [fallback]\n *   Content to render while the processor processing the markdown (optional).\n */\n\n/**\n * @typedef {Options & HooksOptionsOnly} HooksOptions\n *   Configuration for {@linkcode MarkdownHooks};\n *   extends the regular {@linkcode Options} with a `fallback` prop.\n */\n\n/**\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport {useEffect, useState} from 'react'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it\u2019s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {from: 'className', id: 'remove-classname'},\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * This is a synchronous component.\n * When using async plugins,\n * see {@linkcode MarkdownAsync} or {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nexport function Markdown(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  return post(processor.runSync(processor.parse(file), file), options)\n}\n\n/**\n * Component to render markdown with support for async plugins\n * through async/await.\n *\n * Components returning promises are supported on the server.\n * For async support on the client,\n * see {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Promise<ReactElement>}\n *   Promise to a React element.\n */\nexport async function MarkdownAsync(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  const tree = await processor.run(processor.parse(file), file)\n  return post(tree, options)\n}\n\n/**\n * Component to render markdown with support for async plugins through hooks.\n *\n * This uses `useEffect` and `useState` hooks.\n * Hooks run on the client and do not immediately render something.\n * For async support on the server,\n * see {@linkcode MarkdownAsync}.\n *\n * @param {Readonly<HooksOptions>} options\n *   Props.\n * @returns {ReactNode}\n *   React node.\n */\nexport function MarkdownHooks(options) {\n  const processor = createProcessor(options)\n  const [error, setError] = useState(\n    /** @type {Error | undefined} */ (undefined)\n  )\n  const [tree, setTree] = useState(/** @type {Root | undefined} */ (undefined))\n\n  useEffect(\n    function () {\n      let cancelled = false\n      const file = createFile(options)\n\n      processor.run(processor.parse(file), file, function (error, tree) {\n        if (!cancelled) {\n          setError(error)\n          setTree(tree)\n        }\n      })\n\n      /**\n       * @returns {undefined}\n       *   Nothing.\n       */\n      return function () {\n        cancelled = true\n      }\n    },\n    [\n      options.children,\n      options.rehypePlugins,\n      options.remarkPlugins,\n      options.remarkRehypeOptions\n    ]\n  )\n\n  if (error) throw error\n\n  return tree ? post(tree, options) : options.fallback\n}\n\n/**\n * Set up the `unified` processor.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Processor<MdastRoot, MdastRoot, Root, undefined, undefined>}\n *   Result.\n */\nfunction createProcessor(options) {\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  return processor\n}\n\n/**\n * Set up the virtual file.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {VFile}\n *   Result.\n */\nfunction createFile(options) {\n  const children = options.children || ''\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  return file\n}\n\n/**\n * Process the result from unified some more.\n *\n * @param {Nodes} tree\n *   Tree.\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nfunction post(tree, options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  visit(tree, transform)\n\n  return toJsxRuntime(tree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {BuildVisitor<Root>} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n          ? disallowedElements.includes(node.tagName)\n          : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it\u2019s relative.\n    colon === -1 ||\n    // If the first colon is after a `?`, `#`, or `/`, it\u2019s not a protocol.\n    (slash !== -1 && colon > slash) ||\n    (questionMark !== -1 && colon > questionMark) ||\n    (numberSign !== -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n", "/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node\u2019s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n", "/// <reference lib=\"dom\" />\n\n/* global document */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string | false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const character = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `\u00ACit;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  if (\n    // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n    // yield `null`.\n    character.charCodeAt(character.length - 1) === 59 /* `;` */ &&\n    value !== 'semi'\n  ) {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return character === characterReference ? false : character\n}\n", "/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length;\n  let chunkStart = 0;\n  /** @type {Array<unknown>} */\n  let parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there\u2019s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it\u2019s fine.\n    list.splice(...parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it\u2019s fine.\n      list.splice(...parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}", "/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n", "/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}", "/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered \u201Cuppercase\u201D, such as U+03F4 (`\u03F4`), but if their\n * lowercase counterpart (U+03B8 (`\u03B8`)) is uppercased will result in a different\n * uppercase character (U+0398 (`\u0398`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, \" \")\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered \u201Cuppercase\u201D, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}", "/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}", "import { asciiAlphanumeric } from 'micromark-util-character';\nimport { encode } from 'micromark-util-encode';\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''));\n  if (!protocol) {\n    return value;\n  }\n  const colon = value.indexOf(':');\n  const questionMark = value.indexOf('?');\n  const numberSign = value.indexOf('#');\n  const slash = value.indexOf('/');\n  if (\n  // If there is no protocol, it\u2019s relative.\n  colon < 0 ||\n  // If the first colon is after a `?`, `#`, or `/`, it\u2019s not a protocol.\n  slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign ||\n  // It is a protocol, it should be allowed.\n  protocol.test(value.slice(0, colon))) {\n    return value;\n  }\n  return '';\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = [];\n  let index = -1;\n  let start = 0;\n  let skip = 0;\n  while (++index < value.length) {\n    const code = value.charCodeAt(index);\n    /** @type {string} */\n    let replace = '';\n\n    // A correct percent encoded value.\n    if (code === 37 && asciiAlphanumeric(value.charCodeAt(index + 1)) && asciiAlphanumeric(value.charCodeAt(index + 2))) {\n      skip = 2;\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code);\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1);\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next);\n        skip = 1;\n      }\n      // Lone surrogate.\n      else {\n        replace = \"\\uFFFD\";\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code);\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace));\n      start = index + skip + 1;\n      replace = '';\n    }\n    if (skip) {\n      index += skip;\n      skip = 0;\n    }\n  }\n  return result.join('') + value.slice(start);\n}", "/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `\u2409` represents a tab (plus how much it expands) and `\u2420` represents a\n * single space.\n *\n * ```markdown\n * \u2409\n * \u2420\u2420\u2420\u2420\n * \u2409\u2420\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}", "/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  /** @type {Token} */\n  let previous;\n  return contentStart;\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, contentStart, \"linePrefix\");\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter(\"paragraph\");\n    return lineStart(code);\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(\"chunkText\", {\n      contentType: \"text\",\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit(\"chunkText\");\n      effects.exit(\"paragraph\");\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit(\"chunkText\");\n      return lineStart;\n    }\n\n    // Data.\n    effects.consume(code);\n    return data;\n  }\n}", "/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n};\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this;\n  /** @type {Array<StackItem>} */\n  const stack = [];\n  let continued = 0;\n  /** @type {TokenizeContext | undefined} */\n  let childFlow;\n  /** @type {Token | undefined} */\n  let childToken;\n  /** @type {number} */\n  let lineStartOffset;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued];\n      self.containerState = item[1];\n      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code);\n    }\n\n    // Done.\n    return checkNewContainers(code);\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++;\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it\u2019s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined;\n      if (childFlow) {\n        closeFlow();\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          point = self.events[indexBeforeFlow][1].end;\n          break;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      let index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they\u2019re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n      return checkNewContainers(code);\n    }\n    return start(code);\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there\u2019s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code);\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can\u2019t have containers \u201Cpierce\u201D into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code);\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we\u2019d be interrupting it w/ a new container if there\u2019s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);\n    }\n\n    // Check if there is a new container.\n    self.containerState = {};\n    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code);\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow();\n    exitContainers(continued);\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length;\n    lineStartOffset = self.now().offset;\n    return flowStart(code);\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {};\n    return effects.attempt(containerConstruct, containerContinue, flowStart)(code);\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++;\n    stack.push([self.currentConstruct, self.containerState]);\n    // Try another.\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow();\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    childFlow = childFlow || self.parser.flow(self.now());\n    effects.enter(\"chunkFlow\", {\n      _tokenizer: childFlow,\n      contentType: \"flow\",\n      previous: childToken\n    });\n    return flowContinue(code);\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit(\"chunkFlow\"), true);\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      writeToChild(effects.exit(\"chunkFlow\"));\n      // Get ready for the next line.\n      continued = 0;\n      self.interrupt = undefined;\n      return start;\n    }\n    effects.consume(code);\n    return flowContinue;\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    const stream = self.sliceStream(token);\n    if (endOfFile) stream.push(null);\n    token.previous = childToken;\n    if (childToken) childToken.next = token;\n    childToken = token;\n    childFlow.defineSkip(token.start);\n    childFlow.write(stream);\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can\u2019t \u201Cunmake\u201D it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which \u201Cunmakes\u201D the first line\n    // and turns the whole into one content block.\n    //\n    // We\u2019ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length;\n      while (index--) {\n        if (\n        // The token starts before the line ending\u2026\n        childFlow.events[index][1].start.offset < lineStartOffset && (\n        // \u2026and either is not ended yet\u2026\n        !childFlow.events[index][1].end ||\n        // \u2026or ends after it.\n        childFlow.events[index][1].end.offset > lineStartOffset)) {\n          // Exit: there\u2019s still something open, which means it\u2019s a lazy line\n          // part of something.\n          return;\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {boolean | undefined} */\n      let seen;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end;\n            break;\n          }\n          seen = true;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they\u2019re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length;\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index];\n      self.containerState = entry[1];\n      entry[0].exit.call(self, effects);\n    }\n    stack.length = size;\n  }\n  function closeFlow() {\n    childFlow.write([null]);\n    childToken = undefined;\n    childFlow = undefined;\n    self.containerState._closeFlow = undefined;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok, nok), \"linePrefix\", this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n}", "/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > \uD83D\uDC49 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}", "/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n", "/**\n * @import {\n *   Code,\n *   Construct,\n *   Event,\n *   Point,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  resolveAll: resolveAllAttention,\n  tokenize: tokenizeAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it\u2019s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don\u2019t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = {\n            ...events[open][1].end\n          };\n          const end = {\n            ...events[index][1].start\n          };\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: {\n              ...events[open][1].end\n            }\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: {\n              ...events[index][1].start\n            },\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: {\n              ...events[open][1].end\n            },\n            end: {\n              ...events[index][1].start\n            }\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: {\n              ...openingSequence.start\n            },\n            end: {\n              ...closingSequence.end\n            }\n          };\n          events[open][1].end = {\n            ...openingSequence.start\n          };\n          events[index][1].start = {\n            ...closingSequence.end\n          };\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It\u2019s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n *   Point.\n * @param {number} offset\n *   Amount to move.\n * @returns {undefined}\n *   Nothing.\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}", "/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}", "/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > \uD83D\uDC49 **Note**: `\u2420` represents a space character.\n   *\n   * ```markdown\n   * > | \u2420\u2420\u240A\n   *     ^\n   * > | \u240A\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > \uD83D\uDC49 **Note**: `\u2420` represents a space character.\n   *\n   * ```markdown\n   * > | \u2420\u2420\u240A\n   *       ^\n   * > | \u240A\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}", "/**\n * @import {\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit,\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}", "/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}", "/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}", "/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuation\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  concrete: true,\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    partial: true,\n    tokenize: tokenizeCloseStart\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}", "/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  partial: true,\n  tokenize: tokenizeFurtherStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can\u2019t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can\u2019t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}", "/**\n * @import {\n *   Construct,\n *   Previous,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  previous,\n  resolve: resolveCodeText,\n  tokenize: tokenizeCodeText\n};\n\n// To do: next major: don\u2019t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don\u2019t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don\u2019t work, and virtual spaces don\u2019t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}", "/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push(...newElements)` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}", "/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else if (otherEvent[1].type === \"linePrefix\" || otherEvent[1].type === \"listItemIndent\") {\n          // Move past.\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {\n          ...events.get(lineIndex)[1].start\n        };\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  let tokenizer = token._tokenizer;\n  if (!tokenizer) {\n    tokenizer = context.parser[token.contentType](token.start);\n    if (token._contentTypeTextTrailing) {\n      tokenizer._contentTypeTextTrailing = true;\n    }\n  }\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there\u2019s one more token (which is the cases for lines that end in an\n  // EOF), that\u2019s perfect: the last point we found starts it.\n  // If there isn\u2019t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren\u2019t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}", "/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  resolve: resolveContent,\n  tokenize: tokenizeContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  partial: true,\n  tokenize: tokenizeContinuation\n};\n\n/**\n * Content is transparent: it\u2019s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}", "/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return enclosedBefore;\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return raw(code);\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return enclosed(code);\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      return enclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? enclosedEscape : enclosed;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return enclosed;\n    }\n    return enclosed(code);\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (!balance && (code === null || code === 41 || markdownLineEndingOrSpace(code))) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code);\n      balance++;\n      return raw;\n    }\n    if (code === 41) {\n      effects.consume(code);\n      balance--;\n      return raw;\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn\u2019t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? rawEscape : raw;\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return raw;\n    }\n    return raw(code);\n  }\n}", "/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse labels.\n *\n * > \uD83D\uDC49 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this;\n  let size = 0;\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.enter(stringType);\n    return atBreak;\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (size > 999 || code === null || code === 91 || code === 93 && !seen ||\n    // To do: remove in the future once we\u2019ve switched from\n    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n    // which doesn\u2019t need this.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    code === 94 && !size && '_hiddenFootnoteSupport' in self.parser.constructs) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit(stringType);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return atBreak;\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return labelInside(code);\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (code === null || code === 91 || code === 93 || markdownLineEnding(code) || size++ > 999) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    if (!seen) seen = !markdownSpace(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n}", "/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      marker = code === 40 ? 41 : code;\n      return begin;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType);\n      return begin(marker);\n    }\n    if (code === null) {\n      return nok(code);\n    }\n\n    // Note: blank lines can\u2019t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return factorySpace(effects, atBreak, \"linePrefix\");\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return inside(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? escape : inside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code);\n      return inside;\n    }\n    return inside(code);\n  }\n}", "/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? \"linePrefix\" : \"lineSuffix\")(code);\n    }\n    return ok(code);\n  }\n}", "/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  partial: true,\n  tokenize: tokenizeTitleBefore\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don\u2019t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don\u2019t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don\u2019t care about uniqueness.\n      // It\u2019s likely that that doesn\u2019t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You\u2019d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}", "/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}", "/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  resolve: resolveHeadingAtx,\n  tokenize: tokenizeHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal \u201Cvisible\u201D hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}", "/**\n * List of lowercase HTML \u201Cblock\u201D tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn\u2019t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > \uD83D\uDC49 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML \u201Craw\u201D tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > \uD83D\uDC49 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n", "/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  concrete: true,\n  name: 'htmlFlow',\n  resolveTo: resolveToHtmlFlow,\n  tokenize: tokenizeHtmlFlow\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  partial: true,\n  tokenize: tokenizeBlankLineBefore\n};\nconst nonLazyContinuationStart = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuationStart\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we\u2019re in an instruction instead of a declaration, we\u2019re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      // Always the case.\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}", "/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > \uD83D\uDC49 **Note**: we can\u2019t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > \uD83D\uDC49 **Note**: we can\u2019t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > \uD83D\uDC49 **Note**: we can\u2019t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}", "/**\n * @import {\n *   Construct,\n *   Event,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  resolveAll: resolveAllLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  tokenize: tokenizeLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  /** @type {Array<Event>} */\n  const newEvents = [];\n  while (++index < events.length) {\n    const token = events[index][1];\n    newEvents.push(events[index]);\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      const offset = token.type === \"labelImage\" ? 4 : 2;\n      token.type = \"data\";\n      index += offset;\n    }\n  }\n\n  // If the events are equal, we don't have to copy newEvents to events\n  if (events.length !== newEvents.length) {\n    splice(events, 0, events.length, newEvents);\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we\u2019ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can\u2019t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n  const label = {\n    type: \"label\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[close][1].end\n    }\n  };\n  const text = {\n    type: \"labelText\",\n    start: {\n      ...events[open + offset + 2][1].end\n    },\n    end: {\n      ...events[close - 2][1].start\n    }\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we\u2019d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can\u2019t have that, so it\u2019s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > \uD83D\uDC49 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it\u2019s nothing.\n   *\n   * There was an okay opening, but we didn\u2019t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > \uD83D\uDC49 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there\u2019s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > \uD83D\uDC49 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}", "/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartImage\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn\u2019t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}", "/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartLink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn\u2019t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}", "/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}", "/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}", "/**\n * @import {\n *   Code,\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd,\n  name: 'list',\n  tokenize: tokenizeListStart\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  partial: true,\n  tokenize: tokenizeListItemPrefixWhitespace\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  partial: true,\n  tokenize: tokenizeIndent\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can\u2019t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we\u2019re closing flow, we\u2019re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Exiter}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}", "/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  resolveTo: resolveToSetextUnderline,\n  tokenize: tokenizeSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It\u2019ll always exist: we don\u2019t tokenize if it isn\u2019t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we\u2019ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: {\n      ...events[content][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we\u2019ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = {\n      ...events[definition][1].end\n    };\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}", "/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport { blankLine, content } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this;\n  const initial = effects.attempt(\n  // Try to parse a blank line.\n  blankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), \"linePrefix\")));\n  return initial;\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEndingBlank\");\n    effects.consume(code);\n    effects.exit(\"lineEndingBlank\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}", "/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n};\nexport const string = initializeFactory('string');\nexport const text = initializeFactory('text');\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(field === 'text' ? resolveAllLineSuffixes : undefined),\n    tokenize: initializeText\n  };\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this;\n    const constructs = this.parser.constructs[field];\n    const text = effects.attempt(constructs, start, notText);\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code);\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code);\n        return;\n      }\n      effects.enter(\"data\");\n      effects.consume(code);\n      return data;\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(\"data\");\n        return text(code);\n      }\n\n      // Data.\n      effects.consume(code);\n      return data;\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true;\n      }\n      const list = constructs[code];\n      let index = -1;\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index];\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText;\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1;\n    /** @type {number | undefined} */\n    let enter;\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === \"data\") {\n          enter = index;\n          index++;\n        }\n      } else if (!events[index] || events[index][1].type !== \"data\") {\n        // Don\u2019t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end;\n          events.splice(enter + 2, index - enter - 2);\n          index = enter + 2;\n        }\n        enter = undefined;\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events;\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can\u2019t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0; // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if ((eventIndex === events.length || events[eventIndex][1].type === \"lineEnding\") && events[eventIndex - 1][1].type === \"data\") {\n      const data = events[eventIndex - 1][1];\n      const chunks = context.sliceStream(data);\n      let index = chunks.length;\n      let bufferIndex = -1;\n      let size = 0;\n      /** @type {boolean | undefined} */\n      let tabs;\n      while (index--) {\n        const chunk = chunks[index];\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length;\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++;\n            bufferIndex--;\n          }\n          if (bufferIndex) break;\n          bufferIndex = -1;\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true;\n          size++;\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++;\n          break;\n        }\n      }\n\n      // Allow final trailing whitespace.\n      if (context._contentTypeTextTrailing && eventIndex === events.length) {\n        size = 0;\n      }\n      if (size) {\n        const token = {\n          type: eventIndex === events.length || tabs || size < 2 ? \"lineSuffix\" : \"hardBreakTrailing\",\n          start: {\n            _bufferIndex: index ? bufferIndex : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {\n            ...data.end\n          }\n        };\n        data.end = {\n          ...token.start\n        };\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token);\n        } else {\n          events.splice(eventIndex, 0, ['enter', token, context], ['exit', token, context]);\n          eventIndex += 2;\n        }\n      }\n      eventIndex++;\n    }\n  }\n  return events;\n}", "/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport { attention, autolink, blockQuote, characterEscape, characterReference, codeFenced, codeIndented, codeText, definition, hardBreakEscape, headingAtx, htmlFlow, htmlText, labelEnd, labelStartImage, labelStartLink, lineEnding, list, setextUnderline, thematicBreak } from 'micromark-core-commonmark';\nimport { resolver as resolveText } from './initialize/text.js';\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n};\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n};\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n};\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n};\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n};\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n};\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n};\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n};\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n};", "/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn\u2019t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: from && from.line || 1,\n    column: from && from.column || 1,\n    offset: from && from.offset || 0\n  };\n  /** @type {Record<string, number>} */\n  const columnStart = {};\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = [];\n  /** @type {Array<Chunk>} */\n  let chunks = [];\n  /** @type {Array<Token>} */\n  let stack = [];\n  /** @type {boolean | undefined} */\n  let consumed = true;\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  };\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: null,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: null,\n    sliceSerialize,\n    sliceStream,\n    write\n  };\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects);\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode;\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize);\n  }\n  return context;\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice);\n    main();\n\n    // Exit if we\u2019re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return [];\n    }\n    addResult(initialize, 0);\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context);\n    return context.events;\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs);\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token);\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    } = point;\n    return {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    };\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column;\n    accountForPotentialSkip();\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex;\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index];\n\n      // If we\u2019re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index;\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0;\n        }\n        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {\n          go(chunk.charCodeAt(point._bufferIndex));\n        }\n      } else {\n        go(chunk);\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    consumed = undefined;\n    expectedCode = code;\n    state = state(code);\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++;\n      point.column = 1;\n      point.offset += code === -3 ? 2 : 1;\n      accountForPotentialSkip();\n    } else if (code !== -1) {\n      point.column++;\n      point.offset++;\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++;\n    } else {\n      point._bufferIndex++;\n\n      // At end of string chunk.\n      if (point._bufferIndex ===\n      // Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      /** @type {string} */\n      chunks[point._index].length) {\n        point._bufferIndex = -1;\n        point._index++;\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code;\n\n    // Mark as consumed.\n    consumed = true;\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {};\n    token.type = type;\n    token.start = now();\n    context.events.push(['enter', token, context]);\n    stack.push(token);\n    return token;\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop();\n    token.end = now();\n    context.events.push(['exit', token, context]);\n    return token;\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from);\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore();\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook;\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs;\n      /** @type {number} */\n      let constructIndex;\n      /** @type {Construct} */\n      let currentConstruct;\n      /** @type {Info} */\n      let info;\n      return Array.isArray(constructs) ? /* c8 ignore next 1 */\n      handleListOfConstructs(constructs) : 'tokenize' in constructs ?\n      // Looks like a construct.\n      handleListOfConstructs([(/** @type {Construct} */constructs)]) : handleMapOfConstructs(constructs);\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code];\n          const all = code !== null && map.null;\n          const list = [\n          // To do: add more extension tests.\n          /* c8 ignore next 2 */\n          ...(Array.isArray(left) ? left : left ? [left] : []), ...(Array.isArray(all) ? all : all ? [all] : [])];\n          return handleListOfConstructs(list)(code);\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list;\n        constructIndex = 0;\n        if (list.length === 0) {\n          return bogusState;\n        }\n        return handleConstruct(list[constructIndex]);\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn\u2019t work because `inspect` in document does a check\n          // w/o a bogus, which doesn\u2019t make sense. But it does seem to help perf\n          // by not storing.\n          info = store();\n          currentConstruct = construct;\n          if (!construct.partial) {\n            context.currentConstruct = construct;\n          }\n\n          // Always populated by defaults.\n\n          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {\n            return nok(code);\n          }\n          return construct.tokenize.call(\n          // If we do have fields, create an object w/ `context` as its\n          // prototype.\n          // This allows a \u201Clive binding\u201D, which is needed for `interrupt`.\n          fields ? Object.assign(Object.create(context), fields) : context, effects, ok, nok)(code);\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true;\n        onreturn(currentConstruct, info);\n        return returnState;\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true;\n        info.restore();\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex]);\n        }\n        return bogusState;\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct);\n    }\n    if (construct.resolve) {\n      splice(context.events, from, context.events.length - from, construct.resolve(context.events.slice(from), context));\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context);\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now();\n    const startPrevious = context.previous;\n    const startCurrentConstruct = context.currentConstruct;\n    const startEventsIndex = context.events.length;\n    const startStack = Array.from(stack);\n    return {\n      from: startEventsIndex,\n      restore\n    };\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint;\n      context.previous = startPrevious;\n      context.currentConstruct = startCurrentConstruct;\n      context.events.length = startEventsIndex;\n      stack = startStack;\n      accountForPotentialSkip();\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it\u2019s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line];\n      point.offset += columnStart[point.line] - 1;\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index;\n  const startBufferIndex = token.start._bufferIndex;\n  const endIndex = token.end._index;\n  const endBufferIndex = token.end._bufferIndex;\n  /** @type {Array<Chunk>} */\n  let view;\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];\n  } else {\n    view = chunks.slice(startIndex, endIndex);\n    if (startBufferIndex > -1) {\n      const head = view[0];\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex);\n        /* c8 ignore next 4 -- used to be used, no longer */\n      } else {\n        view.shift();\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex));\n    }\n  }\n  return view;\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1;\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {boolean | undefined} */\n  let atTab;\n  while (++index < chunks.length) {\n    const chunk = chunks[index];\n    /** @type {string} */\n    let value;\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else switch (chunk) {\n      case -5:\n        {\n          value = \"\\r\";\n          break;\n        }\n      case -4:\n        {\n          value = \"\\n\";\n          break;\n        }\n      case -3:\n        {\n          value = \"\\r\" + \"\\n\";\n          break;\n        }\n      case -2:\n        {\n          value = expandTabs ? \" \" : \"\\t\";\n          break;\n        }\n      case -1:\n        {\n          if (!expandTabs && atTab) continue;\n          value = \" \";\n          break;\n        }\n      default:\n        {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk);\n        }\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}", "/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport { combineExtensions } from 'micromark-util-combine-extensions';\nimport { content } from './initialize/content.js';\nimport { document } from './initialize/document.js';\nimport { flow } from './initialize/flow.js';\nimport { string, text } from './initialize/text.js';\nimport * as defaultConstructs from './constructs.js';\nimport { createTokenizer } from './create-tokenizer.js';\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {};\n  const constructs = /** @type {FullNormalizedExtension} */\n  combineExtensions([defaultConstructs, ...(settings.extensions || [])]);\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  };\n  return parser;\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from);\n    }\n  }\n}", "/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport { subtokenize } from 'micromark-util-subtokenize';\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events;\n}", "/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nconst search = /[\\0\\t\\n\\r]/g;\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1;\n  let buffer = '';\n  /** @type {boolean | undefined} */\n  let start = true;\n  /** @type {boolean | undefined} */\n  let atCarriageReturn;\n  return preprocessor;\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = [];\n    /** @type {RegExpMatchArray | null} */\n    let match;\n    /** @type {number} */\n    let next;\n    /** @type {number} */\n    let startPosition;\n    /** @type {number} */\n    let endPosition;\n    /** @type {Code} */\n    let code;\n    value = buffer + (typeof value === 'string' ? value.toString() : new TextDecoder(encoding || undefined).decode(value));\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match && match.index !== undefined ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        switch (code) {\n          case 0:\n            {\n              chunks.push(65533);\n              column++;\n              break;\n            }\n          case 9:\n            {\n              next = Math.ceil(column / 4) * 4;\n              chunks.push(-2);\n              while (column++ < next) chunks.push(-1);\n              break;\n            }\n          case 10:\n            {\n              chunks.push(-4);\n              column = 1;\n              break;\n            }\n          default:\n            {\n              atCarriageReturn = true;\n              column = 1;\n            }\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}", "import { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nconst characterEscapeOrReference = /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The \u201Cstring\u201D content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode);\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1;\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0);\n  if (head === 35) {\n    const head = $2.charCodeAt(1);\n    const hex = head === 120 || head === 88;\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);\n  }\n  return decodeNamedCharacterReference($2) || $0;\n}", "/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we\u2019ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler || undefined]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it\u2019s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we\u2019ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we\u2019re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n", "/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n", "/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n", "import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n      case 'ArrayBuffer':\n        return as(new Uint8Array(value).buffer, value);\n      case 'DataView': {\n        const { buffer } = new Uint8Array(value);\n        return as(new DataView(buffer), value);\n      }\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n", "import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n    case 'DataView':\n      return [ARRAY, asString];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type) {\n          let spread = value;\n          if (type === 'DataView') {\n            spread = new Uint8Array(value.buffer);\n          }\n          else if (type === 'ArrayBuffer') {\n            spread = new Uint8Array(value);\n          }\n          return as([type, [...spread]], value);\n        }\n\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n", "import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '\u21A9'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node\u2019s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can\u2019t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you\u2019re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can\u2019t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n", "/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn\u2019t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > \uD83D\uDC49 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn\u2019t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn\u2019t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node\u2019s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn\u2019t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n", "/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn\u2019t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it\u2019s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > \uD83D\uDC49 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn\u2019t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn\u2019t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n", "/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '\u21A9'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `\u21A9`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `\u21A9` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node\u2019s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn\u2019t understand\u2026\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn\u2019t understand\u2026\n        return result\n      }\n\n      // @ts-expect-error: it\u2019s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node\u2019s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n", "/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don\u2019t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn\u2019t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn\u2019t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there\u2019s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n", "/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * * if a processor is given,\n *   runs the (rehype) plugins used on it with a hast tree,\n *   then discards the result (*bridge mode*)\n * * otherwise,\n *   returns a hast tree,\n *   the plugins used after `remarkRehype` are rehype plugins (*mutate mode*)\n *\n * > \uD83D\uDC49 **Note**:\n * > It\u2019s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don\u2019t:\n *\n * * `rehype-stringify` also has an option `allowDangerousHtml` which will\n *   output the raw HTML.\n *   This is typically discouraged as noted by the option name but is useful if\n *   you completely trust authors\n * * `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *   into standard hast nodes (`element`, `text`, etc);\n *   this is a heavy task as it needs a full HTML parser,\n *   but it is the only way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark,\n * which we follow by default.\n * They are supported by GitHub,\n * so footnotes can be enabled in markdown with `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes,\n * which is hidden for sighted users but shown to assistive technology.\n * When your page is not in English,\n * you must define translated values.\n *\n * Back references use ARIA attributes,\n * but the section label itself uses a heading that is hidden with an\n * `sr-only` class.\n * To show it to sighted users,\n * define different attributes in `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem,\n * as it links footnote calls to footnote definitions on the page through `id`\n * attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn\u2019t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * * when the node has a `value`\n *   (and doesn\u2019t have `data.hName`, `data.hProperties`, or `data.hChildren`,\n *   see later),\n *   create a hast `text` node\n * * otherwise,\n *   create a `<div>` element (which could be changed with `data.hName`),\n *   with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @overload\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge | TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given,\n *   configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n", "/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n", "/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you\u2019re using a compiler that doesn\u2019t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can\u2019t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it\u2019s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don\u2019t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` \u2014 fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` \u2014 the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` \u2014 new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn\u2019t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we\u2019re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It\u2019s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you\u2019re using a compiler that doesn\u2019t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you\u2019re using a compiler that doesn\u2019t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can\u2019t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you\u2019re using a compiler that doesn\u2019t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we\u2019d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That\u2019s why it\u2019s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n", "export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n", "// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > \uD83D\uDC49 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it\u2019s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we\u2019re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n", "// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node\u2019s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n", "// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don\u2019t think one tiny line of code can be copyrighted. \uD83D\uDE05\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n", "/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it\u2019s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n", "import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n", "/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` \u2014 `{value: options}`\n   * *   `URL` \u2014 `{path: options}`\n   * *   `VFile` \u2014 shallow copies its data over to the new file\n   * *   `object` \u2014 all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it\u2019s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It\u2019s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are \u201Cwell-known\u201D.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn\u2019t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there\u2019s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there\u2019s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > \uD83E\uDEA6 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > \uD83E\uDEA6 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > \uD83E\uDEA6 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it\u2019s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n", "export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n", "/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n", "export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it\u2019s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns\u2019 stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n", "/**\n * @import {Nodes, Parents, PhrasingContent, Root, Text} from 'mdast'\n * @import {BuildVisitor, Test, VisitorResult} from 'unist-util-visit-parents'\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) \u2014 whole match\n *   * `...capture` (`Array<string>`) \u2014 matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) \u2014 info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * \u2026or when `false`, do not replace at all\n *   * \u2026or when `string`, replace with a text node of that value\n *   * \u2026or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn\u2019t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n", "/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it\u2019s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n", "/**\n * @import {\n *   CompileContext,\n *   Extension as FromMarkdownExtension,\n *   Handle as FromMarkdownHandle\n * } from 'mdast-util-from-markdown'\n * @import {ToMarkdownOptions} from 'mdast-util-gfm-footnote'\n * @import {\n *   Handle as ToMarkdownHandle,\n *   Map,\n *   Options as ToMarkdownExtension\n * } from 'mdast-util-to-markdown'\n * @import {FootnoteDefinition, FootnoteReference} from 'mdast'\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {after: ']', before: value})\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteCallString: enterFootnoteCallString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: enterFootnoteDefinition\n    },\n    exit: {\n      gfmFootnoteCallString: exitFootnoteCallString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: exitFootnoteDefinition\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown(options) {\n  // To do: next major: change default.\n  let firstLineBlank = false\n\n  if (options && options.firstLineBlank) {\n    firstLineBlank = true\n  }\n\n  return {\n    handlers: {footnoteDefinition, footnoteReference},\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['label', 'phrasing', 'reference']}]\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, state, info) {\n    const tracker = state.createTracker(info)\n    let value = tracker.move('[^')\n    const exit = state.enter('footnoteDefinition')\n    const subexit = state.enter('label')\n    value += tracker.move(\n      state.safe(state.associationId(node), {before: value, after: ']'})\n    )\n    subexit()\n\n    value += tracker.move(']:')\n\n    if (node.children && node.children.length > 0) {\n      tracker.shift(4)\n\n      value += tracker.move(\n        (firstLineBlank ? '\\n' : ' ') +\n          state.indentLines(\n            state.containerFlow(node, tracker.current()),\n            firstLineBlank ? mapAll : mapExceptFirst\n          )\n      )\n    }\n\n    exit()\n\n    return value\n  }\n}\n\n/** @type {Map} */\nfunction mapExceptFirst(line, index, blank) {\n  return index === 0 ? line : mapAll(line, index, blank)\n}\n\n/** @type {Map} */\nfunction mapAll(line, index, blank) {\n  return (blank ? '' : '    ') + line\n}\n", "/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n", "// To do: next major: remove.\n/**\n * @typedef {Options} MarkdownTableOptions\n *   Configuration.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [alignDelimiters=true]\n *   Whether to align the delimiters (default: `true`);\n *   they are aligned by default:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {ReadonlyArray<string | null | undefined> | string | null | undefined} [align]\n *   How to align columns (default: `''`);\n *   one style for all columns or styles for their respective columns;\n *   each style is either `'l'` (left), `'r'` (right), or `'c'` (center);\n *   other values are treated as `''`, which doesn\u2019t place the colon in the\n *   alignment row but does align left;\n *   *only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean | null | undefined} [delimiterEnd=true]\n *   Whether to end each row with the delimiter (default: `true`).\n *\n *   > \uD83D\uDC49 **Note**: please don\u2019t use this: it could create fragile structures\n *   > that aren\u2019t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean | null | undefined} [delimiterStart=true]\n *   Whether to begin each row with the delimiter (default: `true`).\n *\n *   > \uD83D\uDC49 **Note**: please don\u2019t use this: it could create fragile structures\n *   > that aren\u2019t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean | null | undefined} [padding=true]\n *   Whether to add a space of padding between delimiters and cells\n *   (default: `true`).\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {((value: string) => number) | null | undefined} [stringLength]\n *   Function to detect the length of table cell content (optional);\n *   this is used when aligning the delimiters (`|`) between table cells;\n *   full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source;\n *   to fix this, you can pass this function,\n *   which receives the cell content and returns its \u201Cvisible\u201D size;\n *   note that what is and isn\u2019t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['\u4E2D\u6587', 'Charlie'],\n *     ['\uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC69', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | \u4E2D\u6587 | Charlie |\n *   | \uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC69 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['\u4E2D\u6587', 'Charlie'],\n *       ['\uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC69', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | \u4E2D\u6587  | Charlie |\n *   | \uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC69    | Delta   |\n *   ```\n */\n\n/**\n * @param {string} value\n *   Cell value.\n * @returns {number}\n *   Cell size.\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * Generate a markdown\n * ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables))\n * table.\n *\n * @param {ReadonlyArray<ReadonlyArray<string | null | undefined>>} table\n *   Table data (matrix of strings).\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Result.\n */\nexport function markdownTable(table, options) {\n  const settings = options || {}\n  // To do: next major: change to spread.\n  const align = (settings.align || []).concat()\n  const stringLength = settings.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don\u2019t align delimiters, but otherwise we\u2019d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (settings.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      settings.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (settings.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (settings.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (settings.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        settings.padding !== false &&\n        // Don\u2019t add the opening space if we\u2019re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(settings.alignDelimiters === false && cell === '') &&\n        (settings.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (settings.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (settings.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (settings.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        settings.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      settings.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string | null | undefined} [value]\n *   Value to serialize.\n * @returns {string}\n *   Result.\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string | null | undefined} value\n *   Value.\n * @returns {number}\n *   Alignment.\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n      ? 108 /* `l` */\n      : code === 82 /* `R` */ || code === 114 /* `r` */\n        ? 114 /* `r` */\n        : 0\n}\n", "/**\n * @import {Blockquote, Parents} from 'mdast'\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n", "/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n", "/**\n * @import {Break, Parents} from 'mdast'\n * @import {Info, State} from 'mdast-util-to-markdown'\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can\u2019t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n", "/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n", "/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Code} from 'mdast'\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there\u2019s no info\u2026\n      !node.lang &&\n      // And there\u2019s a non-whitespace character\u2026\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn\u2019t start or end in a blank\u2026\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n", "/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n", "/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {Code, Parents} from 'mdast'\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n", "/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Definition, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there\u2019s no url, or\u2026\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n", "/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n", "/**\n * Encode a code point as a character reference.\n *\n * @param {number} code\n *   Code point to encode.\n * @returns {string}\n *   Encoded character reference.\n */\nexport function encodeCharacterReference(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n", "/**\n * @import {EncodeSides} from '../types.js'\n */\n\nimport {classifyCharacter} from 'micromark-util-classify-character'\n\n/**\n * Check whether to encode (as a character reference) the characters\n * surrounding an attention run.\n *\n * Which characters are around an attention run influence whether it works or\n * not.\n *\n * See <https://github.com/orgs/syntax-tree/discussions/60> for more info.\n * See this markdown in a particular renderer to see what works:\n *\n * ```markdown\n * |                         | A (letter inside) | B (punctuation inside) | C (whitespace inside) | D (nothing inside) |\n * | ----------------------- | ----------------- | ---------------------- | --------------------- | ------------------ |\n * | 1 (letter outside)      | x*y*z             | x*.*z                  | x* *z                 | x**z               |\n * | 2 (punctuation outside) | .*y*.             | .*.*.                  | .* *.                 | .**.               |\n * | 3 (whitespace outside)  | x *y* z           | x *.* z                | x * * z               | x ** z             |\n * | 4 (nothing outside)     | *x*               | *.*                    | * *                   | **                 |\n * ```\n *\n * @param {number} outside\n *   Code point on the outer side of the run.\n * @param {number} inside\n *   Code point on the inner side of the run.\n * @param {'*' | '_'} marker\n *   Marker of the run.\n *   Underscores are handled more strictly (they form less often) than\n *   asterisks.\n * @returns {EncodeSides}\n *   Whether to encode characters.\n */\n// Important: punctuation must never be encoded.\n// Punctuation is solely used by markdown constructs.\n// And by encoding itself.\n// Encoding them will break constructs or double encode things.\nexport function encodeInfo(outside, inside, marker) {\n  const outsideKind = classifyCharacter(outside)\n  const insideKind = classifyCharacter(inside)\n\n  // Letter outside:\n  if (outsideKind === undefined) {\n    return insideKind === undefined\n      ? // Letter inside:\n        // we have to encode *both* letters for `_` as it is looser.\n        // it already forms for `*` (and GFMs `~`).\n        marker === '_'\n        ? {inside: true, outside: true}\n        : {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (letter, whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: encode outer (letter)\n          {inside: false, outside: true}\n  }\n\n  // Whitespace outside:\n  if (outsideKind === 1) {\n    return insideKind === undefined\n      ? // Letter inside: already forms.\n        {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: already forms.\n          {inside: false, outside: false}\n  }\n\n  // Punctuation outside:\n  return insideKind === undefined\n    ? // Letter inside: already forms.\n      {inside: false, outside: false}\n    : insideKind === 1\n      ? // Whitespace inside: encode inner (whitespace).\n        {inside: true, outside: false}\n      : // Punctuation inside: already forms.\n        {inside: false, outside: false}\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Emphasis, Parents} from 'mdast'\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nemphasis.peek = emphasisPeek\n\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n", "/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Heading} from 'mdast'\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Heading, Parents} from 'mdast'\n */\n\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size\u2026\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)\u2026\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn\u2019t matter that\n  // we\u2019ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value = encodeCharacterReference(value.charCodeAt(0)) + value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n", "/**\n * @import {Html} from 'mdast'\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Image, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there\u2019s no url but there is a title\u2026\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {ImageReference, Parents} from 'mdast'\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we\u2019re in phrasing, because escapes don\u2019t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn\u2019t matter that\n  // we\u2019ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n", "/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {InlineCode, Parents} from 'mdast'\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don\u2019t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can\u2019t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n", "/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Link} from 'mdast'\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there\u2019s a url\u2026\n      node.url &&\n      // And there\u2019s a no title\u2026\n      !node.title &&\n      // And the content of `node` is a single text node\u2026\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content\u2026\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol\u2026\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn\u2019t contain ASCII control codes (character escapes and\n      // references don\u2019t work), space, or angle brackets\u2026\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Link, Parents} from 'mdast'\n * @import {Exit} from '../types.js'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we\u2019re in phrasing, because escapes don\u2019t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there\u2019s no url but there is a title\u2026\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {LinkReference, Parents} from 'mdast'\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we\u2019re in phrasing, because escapes don\u2019t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn\u2019t matter that\n  // we\u2019ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n", "/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n", "/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n", "/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n", "/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {List, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there\u2019s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // \u2026because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there\u2019s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // \u2026because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n", "/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n", "/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {ListItem, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Paragraph, Parents} from 'mdast'\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n", "/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > \uD83D\uDC49 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Root} from 'mdast'\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n\n  const container = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return container.call(state, node, info)\n}\n", "/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Strong} from 'mdast'\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nstrong.peek = strongPeek\n\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker + marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker + marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n", "/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Text} from 'mdast'\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n", "/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n", "/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Parents, ThematicBreak} from 'mdast'\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n", "import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n", "/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don\u2019t (but can\u2019t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn\u2019t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n", "/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We\u2019re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n", "/**\n * @import {Extension as FromMarkdownExtension} from 'mdast-util-from-markdown'\n * @import {Options} from 'mdast-util-gfm'\n * @import {Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(options),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n", "/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiControl, markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n};\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n};\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n};\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n};\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n};\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n};\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n};\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n};\n\n/** @type {ConstructRecord} */\nconst text = {};\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  };\n}\n\n/** @type {Code} */\nlet code = 48;\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink;\n  code++;\n  if (code === 58) code = 65;else if (code === 91) code = 97;\n}\ntext[43] = emailAutolink;\ntext[45] = emailAutolink;\ntext[46] = emailAutolink;\ntext[95] = emailAutolink;\ntext[72] = [emailAutolink, protocolAutolink];\ntext[104] = [emailAutolink, protocolAutolink];\ntext[87] = [emailAutolink, wwwAutolink];\ntext[119] = [emailAutolink, wwwAutolink];\n\n// To do: perform email autolink literals on events, afterwards.\n// That\u2019s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this;\n  /** @type {boolean | undefined} */\n  let dot;\n  /** @type {boolean} */\n  let data;\n  return start;\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (!gfmAtext(code) || !previousEmail.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkEmail');\n    return atext(code);\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code);\n      return atext;\n    }\n    if (code === 64) {\n      effects.consume(code);\n      return emailDomain;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(emailDomainDotTrail, emailDomainAfter, emailDomainDot)(code);\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true;\n      effects.consume(code);\n      return emailDomain;\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we\u2019d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn\u2019t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code);\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code);\n    dot = true;\n    return emailDomain;\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail');\n      effects.exit('literalAutolink');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this;\n  return wwwStart;\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (code !== 87 && code !== 119 || !previousWww.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkWww');\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(wwwPrefix, effects.attempt(domain, effects.attempt(path, wwwAfter), nok), nok)(code);\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this;\n  let buffer = '';\n  let seen = false;\n  return protocolStart;\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if ((code === 72 || code === 104) && previousProtocol.call(self, self.previous) && !previousUnbalanced(self.events)) {\n      effects.enter('literalAutolink');\n      effects.enter('literalAutolinkHttp');\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase();\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code);\n        return protocolSlashesInside;\n      }\n    }\n    return nok(code);\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code);\n      if (seen) {\n        return afterProtocol;\n      }\n      seen = true;\n      return protocolSlashesInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null || asciiControl(code) || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || unicodePunctuation(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code);\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0;\n  return wwwPrefixInside;\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++;\n      effects.consume(code);\n      return wwwPrefixInside;\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code);\n      return wwwPrefixAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code);\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment;\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment;\n  /** @type {boolean | undefined} */\n  let seen;\n  return domainInside;\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code);\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.\u9EDE\u770B.com`,\n    // so that\u2019s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || code !== 45 && unicodePunctuation(code)) {\n      return domainAfter(code);\n    }\n    seen = true;\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true;\n    }\n    // Otherwise, it\u2019s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment;\n      underscoreInLastSegment = undefined;\n    }\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that\u2019s GH says a dot is needed, but it\u2019s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code);\n    }\n    return ok(code);\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0;\n  let sizeClose = 0;\n  return pathInside;\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++;\n      effects.consume(code);\n      return pathInside;\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don\u2019t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code);\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (code === 33 || code === 34 || code === 38 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 60 || code === 63 || code === 93 || code === 95 || code === 126) {\n      return effects.check(trail, ok, pathAtPunctuation)(code);\n    }\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++;\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail;\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (code === 33 || code === 34 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 63 || code === 95 || code === 126) {\n      effects.consume(code);\n      return trail;\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code);\n      return trailCharacterReferenceStart;\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code);\n      return trailBracketAfter;\n    }\n    if (\n    // `<` is an end.\n    code === 60 ||\n    // So is whitespace.\n    code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > \uD83D\uDC49 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (code === null || code === 40 || code === 91 || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return trail(code);\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it\u2019s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code);\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code);\n      return trail;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return trailCharacterReferenceInside;\n    }\n\n    // It\u2019s not a trail.\n    return nok(code);\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start;\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code);\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return code === null || code === 40 || code === 42 || code === 95 || code === 91 || code === 93 || code === 126 || markdownLineEndingOrSpace(code);\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code);\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash \u201Cinside\u201D atext.\n  // The reference code is a bit weird, but that\u2019s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code));\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return code === 43 || code === 45 || code === 46 || code === 95 || asciiAlphanumeric(code);\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length;\n  let result = false;\n  while (index--) {\n    const token = events[index][1];\n    if ((token.type === 'labelLink' || token.type === 'labelImage') && !token._balanced) {\n      result = true;\n      break;\n    }\n\n    // If we\u2019ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false;\n      break;\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as \u201Cwalked into\u201D w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;\n  }\n  return result;\n}", "/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { blankLine } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  };\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {Token} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1];\n    if (token.type === \"labelImage\") {\n      labelStart = token;\n      break;\n    }\n\n    // Exit if we\u2019ve walked far enough.\n    if (token.type === 'gfmFootnoteCall' || token.type === \"labelLink\" || token.type === \"label\" || token.type === \"image\" || token.type === \"link\") {\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code);\n    }\n    const id = normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    }));\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code);\n    }\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return ok(code);\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length;\n  /** @type {Token | undefined} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    if (events[index][1].type === \"labelImage\" && events[index][0] === 'enter') {\n      labelStart = events[index][1];\n      break;\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = \"data\";\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker';\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  };\n  // Increment the end 1 character.\n  marker.end.column++;\n  marker.end.offset++;\n  marker.end._bufferIndex++;\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  };\n  /** @type {Token} */\n  const chunk = {\n    type: \"chunkString\",\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  };\n\n  /** @type {Array<Event>} */\n  const replacement = [\n  // Take the `labelImageMarker` (now `data`, the `!`)\n  events[index + 1], events[index + 2], ['enter', call, context],\n  // The `[`\n  events[index + 3], events[index + 4],\n  // The `^`.\n  ['enter', marker, context], ['exit', marker, context],\n  // Everything in between.\n  ['enter', string, context], ['enter', chunk, context], ['exit', chunk, context], ['exit', string, context],\n  // The ending (`]`, properly parsed and labelled).\n  events[events.length - 2], events[events.length - 1], ['exit', call, context]];\n  events.splice(index, events.length - index + 1, ...replacement);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  let size = 0;\n  /** @type {boolean} */\n  let data;\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can\u2019t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start;\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall');\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return callStart;\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code);\n    effects.enter('gfmFootnoteCallMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallMarker');\n    effects.enter('gfmFootnoteCallString');\n    effects.enter('chunkString').contentType = 'string';\n    return callData;\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteCallString');\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code);\n      }\n      effects.enter('gfmFootnoteCallLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteCallLabelMarker');\n      effects.exit('gfmFootnoteCall');\n      return ok;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? callEscape : callData;\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return callData;\n    }\n    return callData(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {string} */\n  let identifier;\n  let size = 0;\n  /** @type {boolean | undefined} */\n  let data;\n  return start;\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true;\n    effects.enter('gfmFootnoteDefinitionLabel');\n    effects.enter('gfmFootnoteDefinitionLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteDefinitionLabelMarker');\n    return labelAtMarker;\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionMarker');\n      effects.enter('gfmFootnoteDefinitionLabelString');\n      effects.enter('chunkString').contentType = 'string';\n      return labelInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label.\n   *\n   * > \uD83D\uDC49 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteDefinitionLabelString');\n      identifier = normalizeIdentifier(self.sliceSerialize(token));\n      effects.enter('gfmFootnoteDefinitionLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionLabelMarker');\n      effects.exit('gfmFootnoteDefinitionLabel');\n      return labelAfter;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > \uD83D\uDC49 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      if (!defined.includes(identifier)) {\n        defined.push(identifier);\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(effects, whitespaceAfter, 'gfmFootnoteDefinitionWhitespace');\n    }\n    return nok(code);\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok));\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition');\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, 'gfmFootnoteDefinitionIndent', 4 + 1);\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'gfmFootnoteDefinitionIndent' && tail[2].sliceSerialize(tail[1], true).length === 4 ? ok(code) : nok(code);\n  }\n}", "/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {};\n  let single = options_.singleTilde;\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n  if (single === null || single === undefined) {\n    single = true;\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  };\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1;\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        let open = index;\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open &&\n          // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            };\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            };\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]];\n            const insideSpan = context.parser.constructs.insideSpan.null;\n            if (insideSpan) {\n              // Between.\n              splice(nextEvents, nextEvents.length, 0, resolveAll(insideSpan, events.slice(open + 1, index), context));\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            splice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = \"data\";\n      }\n    }\n    return events;\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous;\n    const events = this.events;\n    let size = 0;\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      if (previous === 126 && events[events.length - 1][1].type !== \"characterEscape\") {\n        return nok(code);\n      }\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous);\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n      if (size < 2 && !single) return nok(code);\n      const token = effects.exit('strikethroughSequenceTemporary');\n      const after = classifyCharacter(code);\n      token._open = !after || after === 2 && Boolean(before);\n      token._close = !before || before === 2 && Boolean(after);\n      return ok(code);\n    }\n  }\n}", "/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it\u2019s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it\u2019s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = [];\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add);\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return;\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length;\n    /** @type {Array<Array<Event>>} */\n    const vecs = [];\n    while (index > 0) {\n      index -= 1;\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]), this.map[index][2]);\n\n      // Truncate rest.\n      events.length = this.map[index][0];\n    }\n    vecs.push(events.slice());\n    events.length = 0;\n    let slice = vecs.pop();\n    while (slice) {\n      for (const element of slice) {\n        events.push(element);\n      }\n      slice = vecs.pop();\n    }\n\n    // Truncate everything.\n    this.map.length = 0;\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0;\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return;\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove;\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add);\n      // }\n\n      return;\n    }\n    index += 1;\n  }\n  editMap.map.push([at, remove, add]);\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }", "/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false;\n  /** @type {Array<Align>} */\n  const align = [];\n  while (index < events.length) {\n    const event = events[index];\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(events[index + 1][1].type === 'tableDelimiterMarker' ? 'left' : 'none');\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1;\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right';\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break;\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true;\n    }\n    index += 1;\n  }\n  return align;\n}", "/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { EditMap } from './edit-map.js';\nimport { gfmTableAlign } from './infer.js';\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        name: 'table',\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  let sizeB = 0;\n  /** @type {boolean | undefined} */\n  let seen;\n  return start;\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1;\n    while (index > -1) {\n      const type = self.events[index][1].type;\n      if (type === \"lineEnding\" ||\n      // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n      type === \"linePrefix\") index--;else break;\n    }\n    const tail = index > -1 ? self.events[index][1].type : null;\n    const next = tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore;\n\n    // Don\u2019t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    return next(code);\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead');\n    effects.enter('tableRow');\n    return headRowStart(code);\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code);\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true;\n    // Count the first character, that isn\u2019t a pipe, double.\n    sizeB += 1;\n    return headRowBreak(code);\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don\u2018t.\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it\u2019s fine.\n      if (sizeB > 1) {\n        sizeB = 0;\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true;\n        effects.exit('tableRow');\n        effects.enter(\"lineEnding\");\n        effects.consume(code);\n        effects.exit(\"lineEnding\");\n        return headDelimiterStart;\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don\u2018t.\n      return nok(code);\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, \"whitespace\")(code);\n    }\n    sizeB += 1;\n    if (seen) {\n      seen = false;\n      // Header cell count.\n      size += 1;\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      // Whether a delimiter was seen.\n      seen = true;\n      return headRowBreak;\n    }\n\n    // Anything else is cell data.\n    effects.enter(\"data\");\n    return headRowData(code);\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return headRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? headRowEscape : headRowData;\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return headRowData;\n    }\n    return headRowData(code);\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false;\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    effects.enter('tableDelimiterRow');\n    // Track if we\u2019ve seen a `:` or `|`.\n    seen = false;\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return headDelimiterBefore(code);\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code);\n    }\n    if (code === 124) {\n      seen = true;\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return headDelimiterCellBefore;\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, \"whitespace\")(code);\n    }\n    return headDelimiterValueBefore(code);\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1;\n      seen = true;\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterLeftAlignmentAfter;\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1;\n      // To do: seems weird that this *isn\u2019t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      return headDelimiterFiller(code);\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return headDelimiterFiller;\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true;\n      effects.exit('tableDelimiterFiller');\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterRightAlignmentAfter;\n    }\n    effects.exit('tableDelimiterFiller');\n    return headDelimiterRightAlignmentAfter(code);\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, \"whitespace\")(code);\n    }\n    return headDelimiterCellAfter(code);\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it\u2019s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code);\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow');\n      effects.exit('tableHead');\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don\u2018t.\n    return nok(code);\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we\u2019re here, we\u2019re\n    // never at whitespace.\n    effects.enter('tableRow');\n    return bodyRowBreak(code);\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return bodyRowBreak;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow');\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, \"whitespace\")(code);\n    }\n\n    // Anything else is cell content.\n    effects.enter(\"data\");\n    return bodyRowData(code);\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return bodyRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? bodyRowEscape : bodyRowData;\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return bodyRowData;\n    }\n    return bodyRowData(code);\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1;\n  let inFirstCellAwaitingPipe = true;\n  /** @type {RowKind} */\n  let rowKind = 0;\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0];\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0];\n  let afterHeadAwaitingFirstBodyRow = false;\n  let lastTableEnd = 0;\n  /** @type {Token | undefined} */\n  let currentTable;\n  /** @type {Token | undefined} */\n  let currentBody;\n  /** @type {Token | undefined} */\n  let currentCell;\n  const map = new EditMap();\n  while (++index < events.length) {\n    const event = events[index];\n    const token = event[1];\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false;\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n          currentBody = undefined;\n          lastTableEnd = 0;\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        };\n        map.add(index, 0, [['enter', currentTable, context]]);\n      } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n        inFirstCellAwaitingPipe = true;\n        currentCell = undefined;\n        lastCell = [0, 0, 0, 0];\n        cell = [0, index + 1, 0, 0];\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false;\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          };\n          map.add(index, 0, [['enter', currentBody, context]]);\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1;\n      }\n      // Cell data.\n      else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n        inFirstCellAwaitingPipe = false;\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n            lastCell = [0, 0, 0, 0];\n          }\n          cell[2] = index;\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false;\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n          }\n          lastCell = cell;\n          cell = [lastCell[1], index, 0, 0];\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true;\n      lastTableEnd = index;\n    } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n      lastTableEnd = index;\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1];\n        currentCell = flushCell(map, context, lastCell, rowKind, index, currentCell);\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell);\n      }\n      rowKind = 0;\n    } else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n      cell[3] = index;\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n  }\n  map.consume(context.events);\n\n  // To do: move this into `html`, when events are exposed there.\n  // That\u2019s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1;\n  while (++index < context.events.length) {\n    const event = context.events[index];\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index);\n    }\n  }\n  return events;\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName = rowKind === 1 ? 'tableHeader' : rowKind === 2 ? 'tableDelimiter' : 'tableData';\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent';\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]));\n    map.add(range[0], 0, [['exit', previousCell, context]]);\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1]);\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  };\n  map.add(range[1], 0, [['enter', previousCell, context]]);\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2]);\n    const relatedEnd = getPoint(context.events, range[3]);\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    };\n    map.add(range[2], 0, [['enter', valueToken, context]]);\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]];\n      const end = context.events[range[3]];\n      start[1].end = Object.assign({}, end[1].end);\n      start[1].type = \"chunkText\";\n      start[1].contentType = \"text\";\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1;\n        const b = range[3] - range[2] - 1;\n        map.add(a, b, []);\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]]);\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two \u201Cbetween\u201D parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd));\n    map.add(rowEnd, 0, [['exit', previousCell, context]]);\n    previousCell = undefined;\n  }\n  return previousCell;\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = [];\n  const related = getPoint(context.events, index);\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related);\n    exits.push(['exit', tableBody, context]);\n  }\n  table.end = Object.assign({}, related);\n  exits.push(['exit', table, context]);\n  map.add(index + 1, 0, exits);\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index];\n  const side = event[0] === 'enter' ? 'start' : 'end';\n  return event[1][side];\n}", "/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nconst tasklistCheck = {\n  name: 'tasklistCheck',\n  tokenize: tokenizeTasklistCheck\n};\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this;\n  return open;\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n    // Exit if there\u2019s stuff before.\n    self.previous !== null ||\n    // Exit if not in the first content that is the first child of a list\n    // item.\n    !self._gfmTasklistFirstContentOfListItem) {\n      return nok(code);\n    }\n    effects.enter('taskListCheck');\n    effects.enter('taskListCheckMarker');\n    effects.consume(code);\n    effects.exit('taskListCheckMarker');\n    return inside;\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueUnchecked');\n      return close;\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueChecked');\n      return close;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker');\n      effects.consume(code);\n      effects.exit('taskListCheckMarker');\n      effects.exit('taskListCheck');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code);\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({\n        tokenize: spaceThenNonSpace\n      }, ok, nok)(code);\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, \"whitespace\");\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there\u2019s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code);\n  }\n}", "/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n", "/**\n * @import {Root} from 'mdast'\n * @import {Options} from 'remark-gfm'\n * @import {} from 'remark-parse'\n * @import {} from 'remark-stringify'\n * @import {Processor} from 'unified'\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor<Root>} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n", "const {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!freeze) {\n  freeze = function <T>(x: T): T {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function <T>(x: T): T {\n    return x;\n  };\n}\n\nif (!apply) {\n  apply = function <T>(\n    func: (thisArg: any, ...args: any[]) => T,\n    thisArg: any,\n    ...args: any[]\n  ): T {\n    return func.apply(thisArg, args);\n  };\n}\n\nif (!construct) {\n  construct = function <T>(Func: new (...args: any[]) => T, ...args: any[]): T {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\nconst arraySplice = unapply(Array.prototype.splice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply<T>(\n  func: (thisArg: any, ...args: any[]) => T\n): (thisArg: any, ...args: any[]) => T {\n  return (thisArg: any, ...args: any[]): T => {\n    if (thisArg instanceof RegExp) {\n      thisArg.lastIndex = 0;\n    }\n\n    return apply(func, thisArg, args);\n  };\n}\n\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct<T>(\n  Func: new (...args: any[]) => T\n): (...args: any[]) => T {\n  return (...args: any[]): T => construct(Func, args);\n}\n\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(\n  set: Record<string, any>,\n  array: readonly any[],\n  transformCaseFunc: ReturnType<typeof unapply<string>> = stringToLowerCase\n): Record<string, any> {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          (array as any[])[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray<T>(array: T[]): Array<T | null> {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n\n  return array;\n}\n\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone<T extends Record<string, any>>(object: T): T {\n  const newObject = create(null);\n\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (\n        value &&\n        typeof value === 'object' &&\n        value.constructor === Object\n      ) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n\n  return newObject;\n}\n\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter<T extends Record<string, any>>(\n  object: T,\n  prop: string\n): ReturnType<typeof unapply<any>> | (() => null) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(): null {\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayLastIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  arraySplice,\n  // Object\n  entries,\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  clone,\n  create,\n  objectHasOwnProperty,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n  addToSet,\n  // Reflect\n  unapply,\n  unconstruct,\n};\n", "import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'search',\n  'section',\n  'select',\n  'shadow',\n  'slot',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n] as const);\n\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'enterkeyhint',\n  'exportparts',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'inputmode',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'part',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'slot',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n] as const);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n] as const);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n] as const);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n  'mprescripts',\n] as const);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n] as const);\n\nexport const text = freeze(['#text'] as const);\n", "import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'exportparts',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inert',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'part',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'popover',\n  'popovertarget',\n  'popovertargetaction',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'slot',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'wrap',\n  'xmlns',\n  'slot',\n] as const);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'amplitude',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'exponent',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'intercept',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'slope',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'tablevalues',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n] as const);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n] as const);\n", "import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp|matrix):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\nexport const CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n", "/* eslint-disable @typescript-eslint/indent */\n\nimport type { TrustedHTML, TrustedTypesWindow } from 'trusted-types/lib';\nimport type { Config, UseProfilesConfig } from './config';\nimport * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  entries,\n  freeze,\n  arrayForEach,\n  arrayLastIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySplice,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n  create,\n  objectHasOwnProperty,\n} from './utils.js';\n\nexport type { Config } from './config';\n\ndeclare const VERSION: string;\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5, // Deprecated\n  entityNode: 6, // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12, // Deprecated\n};\n\nconst getGlobal = function (): WindowLike {\n  return typeof window === 'undefined' ? null : window;\n};\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function (\n  trustedTypes: TrustedTypePolicyFactory,\n  purifyHostElement: HTMLScriptElement\n) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nconst _createHooksMap = function (): HooksMap {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: [],\n  };\n};\n\nfunction createDOMPurify(window: WindowLike = getGlobal()): DOMPurify {\n  const DOMPurify: DOMPurify = (root: WindowLike) => createDOMPurify(root);\n\n  DOMPurify.version = VERSION;\n\n  DOMPurify.removed = [];\n\n  if (\n    !window ||\n    !window.document ||\n    window.document.nodeType !== NODE_TYPE.document ||\n    !window.Element\n  ) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  let { document } = window;\n\n  const originalDocument = document;\n  const currentScript: HTMLScriptElement =\n    originalDocument.currentScript as HTMLScriptElement;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || (window as any).MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let hooks = _createHooksMap();\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof entries === 'function' &&\n    typeof getParentNode === 'function' &&\n    implementation &&\n    implementation.createHTMLDocument !== undefined;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(\n    create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES: UseProfilesConfig | false = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet(\n    {},\n    [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE],\n    stringToString\n  );\n\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE: null | DOMParserSupportedType = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc: null | Parameters<typeof addToSet>[2] = null;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG: Config | null = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (\n    testValue: unknown\n  ): testValue is Function | RegExp {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg: Config = {}): void {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? DEFAULT_PARSER_MEDIA_TYPE\n        : cfg.PARSER_MEDIA_TYPE;\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? stringToString\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS')\n      ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n      : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR')\n      ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n      : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES')\n      ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString)\n      : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR')\n      ? addToSet(\n          clone(DEFAULT_URI_SAFE_ATTRIBUTES),\n          cfg.ADD_URI_SAFE_ATTR,\n          transformCaseFunc\n        )\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS')\n      ? addToSet(\n          clone(DEFAULT_DATA_URI_TAGS),\n          cfg.ADD_DATA_URI_TAGS,\n          transformCaseFunc\n        )\n      : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS')\n      ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n      : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS')\n      ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n      : clone({});\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR')\n      ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n      : clone({});\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES')\n      ? cfg.USE_PROFILES\n      : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || EXPRESSIONS.IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS =\n      cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS =\n      cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, TAGS.text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate(\n          'TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.'\n        );\n      }\n\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate(\n          'TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.'\n        );\n      }\n\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(\n          trustedTypes,\n          currentScript\n        );\n      }\n\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.svgDisallowed,\n  ]);\n  const ALL_MATHML_TAGS = addToSet({}, [\n    ...TAGS.mathMl,\n    ...TAGS.mathMlDisallowed,\n  ]);\n\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element: Element): boolean {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      ALLOWED_NAMESPACES[element.namespaceURI]\n    ) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function (node: Node): void {\n    arrayPush(DOMPurify.removed, { element: node });\n\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function (name: string, element: Element): void {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element,\n      });\n    }\n\n    element.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty: string): Document {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      NAMESPACE === HTML_NAMESPACE\n    ) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT\n          ? emptyHTML\n          : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function (root: Node): NodeIterator {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT |\n        NodeFilter.SHOW_COMMENT |\n        NodeFilter.SHOW_TEXT |\n        NodeFilter.SHOW_PROCESSING_INSTRUCTION |\n        NodeFilter.SHOW_CDATA_SECTION,\n      null\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function (element: Element): boolean {\n    return (\n      element instanceof HTMLFormElement &&\n      (typeof element.nodeName !== 'string' ||\n        typeof element.textContent !== 'string' ||\n        typeof element.removeChild !== 'function' ||\n        !(element.attributes instanceof NamedNodeMap) ||\n        typeof element.removeAttribute !== 'function' ||\n        typeof element.setAttribute !== 'function' ||\n        typeof element.namespaceURI !== 'string' ||\n        typeof element.insertBefore !== 'function' ||\n        typeof element.hasChildNodes !== 'function')\n    );\n  };\n\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function (value: unknown): value is Node {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n\n  function _executeHooks<T extends HookFunction>(\n    hooks: HookFunction[],\n    currentNode: Parameters<T>[0],\n    data: Parameters<T>[1]\n  ): void {\n    arrayForEach(hooks, (hook: T) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode: any): boolean {\n    let content = null;\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      SAFE_FOR_XML &&\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      regExpTest(/<[/\\w!]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w!]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove any kind of possibly harmful comments */\n    if (\n      SAFE_FOR_XML &&\n      currentNode.nodeType === NODE_TYPE.comment &&\n      regExpTest(/<[/\\w]/g, currentNode.data)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        ) {\n          return false;\n        }\n\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        ) {\n          return false;\n        }\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if (\n      (tagName === 'noscript' ||\n        tagName === 'noembed' ||\n        tagName === 'noframes') &&\n      regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr: RegExp) => {\n        content = stringReplace(content, expr, ' ');\n      });\n\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (\n    lcTag: string,\n    lcName: string,\n    value: string\n  ): boolean {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_isBasicCustomElement(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName, lcTag)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n    } else if (value) {\n      return false;\n    } else {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    }\n\n    return true;\n  };\n\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function (tagName: string): RegExpMatchArray {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode: Element): void {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined,\n    };\n    let l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const { name, namespaceURI, value: attrValue } = attr;\n      const lcName = transformCaseFunc(name);\n\n      const initValue = attrValue;\n      let value = name === 'value' ? initValue : stringTrim(initValue);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Work around a security issue with comments inside attributes */\n      if (\n        SAFE_FOR_XML &&\n        regExpTest(/((--!?|])>)|<\\/(style|title|textarea)/i, value)\n      ) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Make sure we cannot easily use animated hrefs, even if animations are allowed */\n      if (lcName === 'attributename' && stringMatch(value, 'href')) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr: RegExp) => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML': {\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            }\n\n            case 'TrustedScriptURL': {\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            }\n\n            default: {\n              break;\n            }\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      if (value !== initValue) {\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n\n          if (_isClobbered(currentNode)) {\n            _forceRemove(currentNode);\n          } else {\n            arrayPop(DOMPurify.removed);\n          }\n        } catch (_) {\n          _removeAttribute(name, currentNode);\n        }\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment: DocumentFragment): void {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg = {}) {\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if ((dirty as Node).nodeName) {\n        const tagName = transformCaseFunc((dirty as Node).nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (\n        importedNode.nodeType === NODE_TYPE.element &&\n        importedNode.nodeName === 'BODY'\n      ) {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], (expr: RegExp) => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  DOMPurify.setConfig = function (cfg = {}) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  DOMPurify.addHook = function (\n    entryPoint: keyof HooksMap,\n    hookFunction: HookFunction\n  ) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  DOMPurify.removeHook = function (\n    entryPoint: keyof HooksMap,\n    hookFunction: HookFunction\n  ) {\n    if (hookFunction !== undefined) {\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n\n      return index === -1\n        ? undefined\n        : arraySplice(hooks[entryPoint], index, 1)[0];\n    }\n\n    return arrayPop(hooks[entryPoint]);\n  };\n\n  DOMPurify.removeHooks = function (entryPoint: keyof HooksMap) {\n    hooks[entryPoint] = [];\n  };\n\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n\nexport interface DOMPurify {\n  /**\n   * Creates a DOMPurify instance using the given window-like object. Defaults to `window`.\n   */\n  (root?: WindowLike): DOMPurify;\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  version: string;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  removed: Array<RemovedElement | RemovedAttribute>;\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  isSupported: boolean;\n\n  /**\n   * Set the configuration once.\n   *\n   * @param cfg configuration object\n   */\n  setConfig(cfg?: Config): void;\n\n  /**\n   * Removes the configuration.\n   */\n  clearConfig(): void;\n\n  /**\n   * Provides core sanitation functionality.\n   *\n   * @param dirty string or DOM node\n   * @param cfg object\n   * @returns Sanitized TrustedHTML.\n   */\n  sanitize(\n    dirty: string | Node,\n    cfg: Config & { RETURN_TRUSTED_TYPE: true }\n  ): TrustedHTML;\n\n  /**\n   * Provides core sanitation functionality.\n   *\n   * @param dirty DOM node\n   * @param cfg object\n   * @returns Sanitized DOM node.\n   */\n  sanitize(dirty: Node, cfg: Config & { IN_PLACE: true }): Node;\n\n  /**\n   * Provides core sanitation functionality.\n   *\n   * @param dirty string or DOM node\n   * @param cfg object\n   * @returns Sanitized DOM node.\n   */\n  sanitize(dirty: string | Node, cfg: Config & { RETURN_DOM: true }): Node;\n\n  /**\n   * Provides core sanitation functionality.\n   *\n   * @param dirty string or DOM node\n   * @param cfg object\n   * @returns Sanitized document fragment.\n   */\n  sanitize(\n    dirty: string | Node,\n    cfg: Config & { RETURN_DOM_FRAGMENT: true }\n  ): DocumentFragment;\n\n  /**\n   * Provides core sanitation functionality.\n   *\n   * @param dirty string or DOM node\n   * @param cfg object\n   * @returns Sanitized string.\n   */\n  sanitize(dirty: string | Node, cfg?: Config): string;\n\n  /**\n   * Checks if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   *\n   * @param tag Tag name of containing element.\n   * @param attr Attribute name.\n   * @param value Attribute value.\n   * @returns Returns true if `value` is valid. Otherwise, returns false.\n   */\n  isValidAttribute(tag: string, attr: string, value: string): boolean;\n\n  /**\n   * Adds a DOMPurify hook.\n   *\n   * @param entryPoint entry point for the hook to add\n   * @param hookFunction function to execute\n   */\n  addHook(entryPoint: BasicHookName, hookFunction: NodeHook): void;\n\n  /**\n   * Adds a DOMPurify hook.\n   *\n   * @param entryPoint entry point for the hook to add\n   * @param hookFunction function to execute\n   */\n  addHook(entryPoint: ElementHookName, hookFunction: ElementHook): void;\n\n  /**\n   * Adds a DOMPurify hook.\n   *\n   * @param entryPoint entry point for the hook to add\n   * @param hookFunction function to execute\n   */\n  addHook(\n    entryPoint: DocumentFragmentHookName,\n    hookFunction: DocumentFragmentHook\n  ): void;\n\n  /**\n   * Adds a DOMPurify hook.\n   *\n   * @param entryPoint entry point for the hook to add\n   * @param hookFunction function to execute\n   */\n  addHook(\n    entryPoint: 'uponSanitizeElement',\n    hookFunction: UponSanitizeElementHook\n  ): void;\n\n  /**\n   * Adds a DOMPurify hook.\n   *\n   * @param entryPoint entry point for the hook to add\n   * @param hookFunction function to execute\n   */\n  addHook(\n    entryPoint: 'uponSanitizeAttribute',\n    hookFunction: UponSanitizeAttributeHook\n  ): void;\n\n  /**\n   * Remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if hook not specified)\n   *\n   * @param entryPoint entry point for the hook to remove\n   * @param hookFunction optional specific hook to remove\n   * @returns removed hook\n   */\n  removeHook(\n    entryPoint: BasicHookName,\n    hookFunction?: NodeHook\n  ): NodeHook | undefined;\n\n  /**\n   * Remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if hook not specified)\n   *\n   * @param entryPoint entry point for the hook to remove\n   * @param hookFunction optional specific hook to remove\n   * @returns removed hook\n   */\n  removeHook(\n    entryPoint: ElementHookName,\n    hookFunction?: ElementHook\n  ): ElementHook | undefined;\n\n  /**\n   * Remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if hook not specified)\n   *\n   * @param entryPoint entry point for the hook to remove\n   * @param hookFunction optional specific hook to remove\n   * @returns removed hook\n   */\n  removeHook(\n    entryPoint: DocumentFragmentHookName,\n    hookFunction?: DocumentFragmentHook\n  ): DocumentFragmentHook | undefined;\n\n  /**\n   * Remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if hook not specified)\n   *\n   * @param entryPoint entry point for the hook to remove\n   * @param hookFunction optional specific hook to remove\n   * @returns removed hook\n   */\n  removeHook(\n    entryPoint: 'uponSanitizeElement',\n    hookFunction?: UponSanitizeElementHook\n  ): UponSanitizeElementHook | undefined;\n\n  /**\n   * Remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if hook not specified)\n   *\n   * @param entryPoint entry point for the hook to remove\n   * @param hookFunction optional specific hook to remove\n   * @returns removed hook\n   */\n  removeHook(\n    entryPoint: 'uponSanitizeAttribute',\n    hookFunction?: UponSanitizeAttributeHook\n  ): UponSanitizeAttributeHook | undefined;\n\n  /**\n   * Removes all DOMPurify hooks at a given entryPoint\n   *\n   * @param entryPoint entry point for the hooks to remove\n   */\n  removeHooks(entryPoint: HookName): void;\n\n  /**\n   * Removes all DOMPurify hooks.\n   */\n  removeAllHooks(): void;\n}\n\n/**\n * An element removed by DOMPurify.\n */\nexport interface RemovedElement {\n  /**\n   * The element that was removed.\n   */\n  element: Node;\n}\n\n/**\n * An element removed by DOMPurify.\n */\nexport interface RemovedAttribute {\n  /**\n   * The attribute that was removed.\n   */\n  attribute: Attr | null;\n\n  /**\n   * The element that the attribute was removed.\n   */\n  from: Node;\n}\n\ntype BasicHookName =\n  | 'beforeSanitizeElements'\n  | 'afterSanitizeElements'\n  | 'uponSanitizeShadowNode';\ntype ElementHookName = 'beforeSanitizeAttributes' | 'afterSanitizeAttributes';\ntype DocumentFragmentHookName =\n  | 'beforeSanitizeShadowDOM'\n  | 'afterSanitizeShadowDOM';\ntype UponSanitizeElementHookName = 'uponSanitizeElement';\ntype UponSanitizeAttributeHookName = 'uponSanitizeAttribute';\n\ninterface HooksMap {\n  beforeSanitizeElements: NodeHook[];\n  afterSanitizeElements: NodeHook[];\n  beforeSanitizeShadowDOM: DocumentFragmentHook[];\n  uponSanitizeShadowNode: NodeHook[];\n  afterSanitizeShadowDOM: DocumentFragmentHook[];\n  beforeSanitizeAttributes: ElementHook[];\n  afterSanitizeAttributes: ElementHook[];\n  uponSanitizeElement: UponSanitizeElementHook[];\n  uponSanitizeAttribute: UponSanitizeAttributeHook[];\n}\n\ntype ArrayElement<T> = T extends Array<infer U> ? U : never;\n\ntype HookFunction = ArrayElement<HooksMap[keyof HooksMap]>;\n\nexport type HookName =\n  | BasicHookName\n  | ElementHookName\n  | DocumentFragmentHookName\n  | UponSanitizeElementHookName\n  | UponSanitizeAttributeHookName;\n\nexport type NodeHook = (\n  this: DOMPurify,\n  currentNode: Node,\n  hookEvent: null,\n  config: Config\n) => void;\n\nexport type ElementHook = (\n  this: DOMPurify,\n  currentNode: Element,\n  hookEvent: null,\n  config: Config\n) => void;\n\nexport type DocumentFragmentHook = (\n  this: DOMPurify,\n  currentNode: DocumentFragment,\n  hookEvent: null,\n  config: Config\n) => void;\n\nexport type UponSanitizeElementHook = (\n  this: DOMPurify,\n  currentNode: Node,\n  hookEvent: UponSanitizeElementHookEvent,\n  config: Config\n) => void;\n\nexport type UponSanitizeAttributeHook = (\n  this: DOMPurify,\n  currentNode: Element,\n  hookEvent: UponSanitizeAttributeHookEvent,\n  config: Config\n) => void;\n\nexport interface UponSanitizeElementHookEvent {\n  tagName: string;\n  allowedTags: Record<string, boolean>;\n}\n\nexport interface UponSanitizeAttributeHookEvent {\n  attrName: string;\n  attrValue: string;\n  keepAttr: boolean;\n  allowedAttributes: Record<string, boolean>;\n  forceKeepAttr: boolean | undefined;\n}\n\n/**\n * A `Window`-like object containing the properties and types that DOMPurify requires.\n */\nexport type WindowLike = Pick<\n  typeof globalThis,\n  | 'DocumentFragment'\n  | 'HTMLTemplateElement'\n  | 'Node'\n  | 'Element'\n  | 'NodeFilter'\n  | 'NamedNodeMap'\n  | 'HTMLFormElement'\n  | 'DOMParser'\n> & {\n  document?: Document;\n  MozNamedAttrMap?: typeof window.NamedNodeMap;\n} & Pick<TrustedTypesWindow, 'trustedTypes'>;\n", "import { DocViewer } from './components/DocViewer';\n\n// Export to window for global access\ndeclare global {\n  interface Window {\n    DocViewer: typeof DocViewer;\n  }\n}\n\nwindow.DocViewer = DocViewer;"],
  "mappings": "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CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,C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AQ,EAAGA,EAAQN,EAAM/C,OAAQqD,IAChBrB,GAAqBe,EAAOM,CAAK,IAGvDN,EAAMM,CAAK,EAAI,MAInB,OAAON,CACT,CAQA,SAASO,GAAqCC,EAAS,CACrD,IAAMC,EAAYjE,GAAO,IAAI,EAE7B,OAAW,CAACkE,EAAUC,CAAK,IAAK3E,GAAQwE,CAAM,EACpBvB,GAAqBuB,EAAQE,CAAQ,IAGvDvD,MAAMyD,QAAQD,CAAK,EACrBF,EAAUC,CAAQ,EAAIL,GAAWM,CAAK,EAEtCA,GACA,OAAOA,GAAU,UACjBA,EAAME,cAAgBxE,OAEtBoE,EAAUC,CAAQ,EAAIH,GAAMI,CAAK,EAEjCF,EAAUC,CAAQ,EAAIC,GAK5B,OAAOF,CACT,CASA,SAASK,GACPN,EACAO,EAAY,CAEZ,KAAOP,IAAW,MAAM,CACtB,IAAMQ,EAAO5E,GAAyBoE,EAAQO,CAAI,EAElD,GAAIC,EAAM,CACR,GAAIA,EAAKC,IACP,OAAOxD,GAAQuD,EAAKC,GAAG,EAGzB,GAAI,OAAOD,EAAKL,OAAU,WACxB,OAAOlD,GAAQuD,EAAKL,KAAK,CAE7B,CAEAH,EAASrE,GAAeqE,CAAM,CAChC,CAEA,SAASU,GAAa,CACpB,OAAO,IACT,CAEA,OAAOA,CACT,CCjNO,IAAMC,GAAO7E,GAAO,CACzB,IACA,OACA,UACA,UACA,OACA,UACA,QACA,QACA,IACA,MACA,MACA,MACA,QACA,aACA,OACA,KACA,SACA,SACA,UACA,SACA,OACA,OACA,MACA,WACA,UACA,OACA,WACA,KACA,YACA,MACA,UACA,MACA,SACA,MACA,MACA,KACA,KACA,UACA,KACA,WACA,aACA,SACA,OACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,MACA,OACA,UACA,OACA,WACA,QACA,MACA,OACA,KACA,WACA,SACA,SACA,IACA,UACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,SACA,UACA,SACA,SACA,OACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,OACA,KACA,QACA,KACA,IACA,KACA,MACA,QACA,KAAK,CACG,EAEG8E,GAAM9E,GAAO,CACxB,MACA,IACA,WACA,cACA,eACA,eACA,gBACA,mBACA,SACA,WACA,OACA,OACA,UACA,eACA,cACA,SACA,OACA,IACA,QACA,WACA,QACA,QACA,YACA,OACA,iBACA,SACA,OACA,WACA,QACA,OACA,OACA,UACA,UACA,WACA,iBACA,OACA,OACA,OACA,QACA,SACA,SACA,OACA,WACA,QACA,OACA,QACA,OACA,OAAO,CACC,EAEG+E,GAAa/E,GAAO,CAC/B,UACA,gBACA,sBACA,cACA,mBACA,oBACA,oBACA,iBACA,eACA,UACA,UACA,UACA,UACA,UACA,iBACA,UACA,UACA,cACA,eACA,WACA,eACA,qBACA,cACA,SACA,cAAc,CACN,EAMGgF,GAAgBhF,GAAO,CAClC,UACA,gBACA,SACA,UACA,YACA,mBACA,iBACA,gBACA,gBACA,gBACA,QACA,YACA,OACA,eACA,YACA,UACA,gBACA,SACA,MACA,aACA,UACA,KAAK,CACG,EAEGiF,GAASjF,GAAO,CAC3B,OACA,WACA,SACA,UACA,QACA,SACA,KACA,aACA,gBACA,KACA,KACA,QACA,UACA,WACA,QACA,OACA,KACA,SACA,QACA,SACA,OACA,OACA,UACA,SACA,MACA,QACA,MACA,SACA,aACA,aAAa,CACL,EAIGkF,GAAmBlF,GAAO,CACrC,UACA,cACA,aACA,WACA,YACA,UACA,UACA,SACA,SACA,QACA,YACA,aACA,iBACA,cACA,MAAM,CACE,EAEGmF,GAAOnF,GAAO,CAAC,OAAO,CAAU,EC3RhC6E,GAAO7E,GAAO,CACzB,SACA,SACA,QACA,MACA,iBACA,eACA,uBACA,WACA,aACA,UACA,SACA,UACA,cACA,cACA,UACA,OACA,QACA,QACA,QACA,OACA,UACA,WACA,eACA,SACA,cACA,WACA,WACA,UACA,MACA,WACA,0BACA,wBACA,WACA,YACA,UACA,eACA,cACA,OACA,MACA,UACA,SACA,SACA,OACA,OACA,WACA,KACA,QACA,YACA,YACA,QACA,OACA,QACA,OACA,OACA,UACA,OACA,MACA,MACA,YACA,QACA,SACA,MACA,YACA,WACA,QACA,OACA,QACA,UACA,aACA,SACA,OACA,UACA,OACA,UACA,cACA,cACA,UACA,gBACA,sBACA,SACA,UACA,UACA,aACA,WACA,MACA,WACA,MACA,WACA,OACA,OACA,UACA,aACA,QACA,WACA,QACA,OACA,QACA,OACA,OACA,UACA,QACA,MACA,SACA,OACA,QACA,UACA,WACA,QACA,YACA,OACA,SACA,SACA,QACA,QACA,OACA,QACA,MAAM,CACE,EAEG8E,GAAM9E,GAAO,CACxB,gBACA,aACA,WACA,qBACA,YACA,SACA,gBACA,gBACA,UACA,gBACA,iBACA,QACA,OACA,KACA,QACA,OACA,gBACA,YACA,YACA,QACA,sBACA,8BACA,gBACA,kBACA,KACA,KACA,IACA,KACA,KACA,kBACA,YACA,UACA,UACA,MACA,WACA,YACA,MACA,WACA,OACA,eACA,YACA,SACA,cACA,cACA,gBACA,cACA,YACA,mBACA,eACA,aACA,eACA,cACA,KACA,KACA,KACA,KACA,aACA,WACA,gBACA,oBACA,SACA,OACA,KACA,kBACA,KACA,MACA,YACA,IACA,KACA,KACA,KACA,KACA,UACA,YACA,aACA,WACA,OACA,eACA,iBACA,eACA,mBACA,iBACA,QACA,aACA,aACA,eACA,eACA,cACA,cACA,mBACA,YACA,MACA,OACA,QACA,SACA,OACA,MACA,OACA,aACA,SACA,WACA,UACA,QACA,SACA,cACA,SACA,WACA,cACA,OACA,aACA,sBACA,mBACA,eACA,SACA,gBACA,sBACA,iBACA,IACA,KACA,KACA,SACA,OACA,OACA,cACA,YACA,UACA,SACA,SACA,QACA,OACA,kBACA,QACA,mBACA,mBACA,eACA,cACA,eACA,cACA,aACA,eACA,mBACA,oBACA,iBACA,kBACA,oBACA,iBACA,SACA,eACA,QACA,eACA,iBACA,WACA,cACA,UACA,UACA,YACA,mBACA,cACA,kBACA,iBACA,aACA,OACA,KACA,KACA,UACA,SACA,UACA,aACA,UACA,aACA,gBACA,gBACA,QACA,eACA,OACA,eACA,mBACA,mBACA,IACA,KACA,KACA,QACA,IACA,KACA,KACA,IACA,YAAY,CACJ,EAEGiF,GAASjF,GAAO,CAC3B,SACA,cACA,QACA,WACA,QACA,eACA,cACA,aACA,aACA,QACA,MACA,UACA,eACA,WACA,QACA,QACA,SACA,OACA,KACA,UACA,SACA,gBACA,SACA,SACA,iBACA,YACA,WACA,cACA,UACA,UACA,gBACA,WACA,WACA,OACA,WACA,WACA,aACA,UACA,SACA,SACA,cACA,gBACA,uBACA,YACA,YACA,aACA,WACA,iBACA,iBACA,YACA,UACA,QACA,OAAO,CACR,EAEYoF,GAAMpF,GAAO,CACxB,aACA,SACA,cACA,YACA,aAAa,CACL,ECnXGqF,GAAgBpF,GAAK,2BAA2B,EAChDqF,GAAWrF,GAAK,uBAAuB,EACvCsF,GAActF,GAAK,eAAe,EAClCuF,GAAYvF,GAAK,8BAA8B,EAC/CwF,GAAYxF,GAAK,gBAAgB,EACjCyF,GAAiBzF,GAC5B,oGAEW0F,GAAoB1F,GAAK,uBAAuB,EAChD2F,GAAkB3F,GAC7B,+DAEW4F,GAAe5F,GAAK,SAAS,EAC7B6F,GAAiB7F,GAAK,0BAA0B,uMCmBvD8F,GAAY,CAChBlC,QAAS,EACTmC,UAAW,EACXb,KAAM,EACNc,aAAc,EACdC,gBAAiB,EACjBC,WAAY,EACZC,uBAAwB,EACxBC,QAAS,EACTC,SAAU,EACVC,aAAc,GACdC,iBAAkB,GAClBC,SAAU,IAGNC,GAAY,UAAA,CAChB,OAAO,OAAOC,OAAW,IAAc,KAAOA,MAChD,EAUMC,GAA4B,SAChCC,EACAC,EAAoC,CAEpC,GACE,OAAOD,GAAiB,UACxB,OAAOA,EAAaE,cAAiB,WAErC,OAAO,KAMT,IAAIC,EAA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",
  "names": ["require_react", "__commonJSMin", "exports", "module", "require_inline_style_parser", "__commonJSMin", "exports", "module", "COMMENT_REGEX", "NEWLINE_REGEX", "WHITESPACE_REGEX", "PROPERTY_REGEX", "COLON_REGEX", "VALUE_REGEX", "SEMICOLON_REGEX", "TRIM_REGEX", "NEWLINE", "FORWARD_SLASH", "ASTERISK", "EMPTY_STRING", "TYPE_COMMENT", "TYPE_DECLARATION", "style", "options", "lineno", "column", "updatePosition", "str", "lines", "i", "position", "start", "node", "Position", "whitespace", "errorsList", "error", "msg", "err", "match", "re", "m", "comments", "rules", "c", "comment", "pos", "declaration", "prop", "val", "ret", "trim", "declarations", "decls", "decl", "exports", "StyleToObject", "inline_style_parser_1", "__importDefault", "style", "iterator", "styleObject", "declarations", "hasIterator", "declaration", "property", "value", "CUSTOM_PROPERTY_REGEX", "HYPHEN_REGEX", "NO_HYPHEN_REGEX", "VENDOR_PREFIX_REGEX", "MS_VENDOR_PREFIX_REGEX", "skipCamelCase", "property", "capitalize", "match", "character", "trimHyphen", "prefix", "camelCase", "options", "exports", "style_to_object_1", "__importDefault", "utilities_1", "StyleToJS", "style", "options", "output", "property", "value", "module", "require_react_jsx_runtime_production", "__commonJSMin", "exports", "REACT_ELEMENT_TYPE", "REACT_FRAGMENT_TYPE", "jsxProd", "type", "config", "maybeKey", "key", "propName", "require_jsx_runtime", "__commonJSMin", "exports", "module", "require_extend", "__commonJSMin", "exports", "module", "hasOwn", "toStr", "defineProperty", "gOPD", "isArray", "arr", "isPlainObject", "obj", "hasOwnConstructor", "hasIsPrototypeOf", "key", "setProperty", "target", "options", "getProperty", "name", "extend", "src", "copy", "copyIsArray", "clone", "i", "length", "deep", "root", "factory", "exports", "module", "define", "amd", "a", "i", "self", "e", "t", "s", "r", "n", "o", "h", "c", "l", "AccessibilityManager", "Disposable", "_terminal", "super", "_renderService", "_liveRegionLineCount", "_charsToConsume", "_charsToAnnounce", "this", "_accessibilityContainer", "document", "createElement", "classList", "add", "_rowContainer", "setAttribute", "_rowElements", "rows", "_createAccessibilityTreeNode", "appendChild", "_topBoundaryFocusListener", "_handleBoundaryFocus", "_bottomBoundaryFocusListener", "addEventListener", "length", "_refreshRowsDimensions", "_liveRegion", "_liveRegionDebouncer", "register", "TimeBasedDebouncer", "_renderRows", "bind", "element", "Error", "insertAdjacentElement", "onResize", "_handleResize", "onRender", "_refreshRows", "start", "end", "onScroll", "onA11yChar", "char", "_handleChar", "onLineFeed", "onA11yTab", "spaceCount", "_handleTab", "onKey", "_handleKey", "key", "onBlur", "_clearLiveRegion", "onDimensionsChange", "_screenDprMonitor", "ScreenDprMonitor", "window", "setListener", "addDisposableDomListener", "toDisposable", "remove", "MAX_ROWS_TO_READ", "shift", "textContent", "Strings", "tooMuchOutput", "isMac", "parentNode", "setTimeout", "keyChar", "test", "push", "refresh", "buffer", "setSize", "lines", "toString", "lineData", "translateBufferLineToString", "ydisp", "posInSet", "innerText", "_announceCharacters", "position", "boundaryElement", "target", "beforeBoundaryElement", "getAttribute", "relatedTarget", "topBoundaryElement", "bottomBoundaryElement", "pop", "removeChild", "removeEventListener", "newElement", "unshift", "scrollLines", "focus", "preventDefault", "stopImmediatePropagation", "children", "tabIndex", "_refreshRowDimensions", "dimensions", "css", "cell", "height", "style", "width", "canvas", "IRenderService", "prepareTextForTerminal", "text", "replace", "bracketTextForPaste", "bracketedPasteMode", "paste", "textarea", "coreService", "optionsService", "decPrivateModes", "rawOptions", "ignoreBracketedPasteMode", "triggerDataEvent", "value", "moveTextAreaUnderMouseCursor", "ev", "screenElement", "pos", "getBoundingClientRect", "left", "clientX", "top", "clientY", "zIndex", "selectionService", "clipboardData", "setData", "selectionText", "stopPropagation", "getData", "shouldSelectWord", "rightClickSelect", "select", "_color", "TwoKeyMap", "_css", "bg", "fg", "set", "get", "clear", "node", "type", "handler", "options", "disposed", "dispose", "Linkifier2", "currentLink", "_currentLink", "_bufferService", "_linkProviders", "_linkCacheDisposables", "_isMouseOut", "_wasResized", "_activeLine", "_onShowLinkUnderline", "EventEmitter", "onShowLinkUnderline", "event", "_onHideLinkUnderline", "onHideLinkUnderline", "getDisposeArrayDisposable", "_lastMouseEvent", "_clearCurrentLink", "linkProvider", "providerIndex", "indexOf", "splice", "mouseService", "renderService", "_element", "_mouseService", "_handleMouseMove", "_handleMouseDown", "_handleMouseUp", "_positionFromMouseEvent", "composedPath", "contains", "_lastBufferCell", "x", "y", "_handleHover", "_askForLink", "_linkAtPosition", "link", "useLineCache", "_activeProviderReplies", "forEach", "reply", "linkWithState", "Map", "linkProvided", "entries", "_checkLinkProviderResult", "provideLinks", "links", "linksWithState", "map", "size", "_removeIntersectingLinks", "replies", "occupiedCells", "Set", "providerReply", "startX", "range", "endX", "cols", "has", "index", "hasLinkBefore", "j", "linkAtPosition", "find", "_handleNewLink", "_mouseDownLink", "activate", "startRow", "endRow", "_linkLeave", "disposeArray", "state", "decorations", "underline", "pointerCursor", "isHovered", "_linkHover", "Object", "defineProperties", "v", "toggle", "_fireUnderlineEvent", "onRenderedViewportChange", "hover", "showEvent", "scrollOffset", "_createLinkUnderlineEvent", "undefined", "fire", "leave", "lower", "upper", "current", "coords", "getCoords", "x1", "y1", "x2", "y2", "IBufferService", "promptLabel", "OscLinkProvider", "_optionsService", "_oscLinkService", "callback", "line", "result", "linkHandler", "CellData", "lineLength", "getTrimmedLength", "currentLinkId", "currentStart", "finishLink", "hasContent", "loadCell", "hasExtendedAttrs", "extended", "urlId", "getLinkData", "uri", "ignoreLink", "allowNonHttpProtocols", "parsed", "URL", "includes", "protocol", "defaultActivate", "confirm", "newWindow", "open", "opener", "location", "href", "console", "warn", "IOptionsService", "IOscLinkService", "_parentWindow", "_renderCallback", "_refreshCallbacks", "_animationFrame", "cancelAnimationFrame", "requestAnimationFrame", "_innerRefresh", "rowStart", "rowEnd", "rowCount", "_rowCount", "_rowStart", "Math", "min", "_rowEnd", "max", "_runRefreshCallbacks", "_currentDevicePixelRatio", "devicePixelRatio", "clearListener", "listener", "_listener", "_outerListener", "_updateDpr", "_resolutionMediaMatchList", "removeListener", "matchMedia", "addListener", "_", "u", "f", "p", "g", "m", "S", "C", "b", "w", "E", "k", "L", "D", "R", "A", "B", "T", "M", "Terminal", "CoreTerminal", "onFocus", "_onFocus", "_onBlur", "_onA11yCharEmitter", "_onA11yTabEmitter", "onWillOpen", "_onWillOpen", "browser", "Browser", "_keyDownHandled", "_keyDownSeen", "_keyPressHandled", "_unprocessedDeadKey", "_accessibilityManager", "MutableDisposable", "_onCursorMove", "onCursorMove", "_onKey", "_onRender", "_onSelectionChange", "onSelectionChange", "_onTitleChange", "onTitleChange", "_onBell", "onBell", "_setup", "linkifier2", "_instantiationService", "createInstance", "registerLinkProvider", "_decorationService", "DecorationService", "setService", "IDecorationService", "_inputHandler", "onRequestBell", "onRequestRefreshRows", "onRequestSendFocus", "_reportFocus", "onRequestReset", "reset", "onRequestWindowsOptionsReport", "_reportWindowsOptions", "onColor", "_handleColorEvent", "forwardEvent", "_afterResize", "_customKeyEventHandler", "_themeService", "req", "acc", "ident", "channels", "color", "toColorRGB", "colors", "ansi", "C0", "ESC", "toRgbString", "C1_ESCAPED", "ST", "modifyColors", "rgba", "toColor", "narrowedAcc", "restoreColor", "buffers", "active", "preventScroll", "sendFocus", "updateCursorStyle", "_showCursor", "blur", "_handleTextAreaBlur", "_syncTextArea", "isCursorInViewport", "_compositionHelper", "isComposing", "cursorY", "ybase", "bufferLine", "cursorX", "cellHeight", "getWidth", "cellWidth", "cursorTop", "cursorLeft", "lineHeight", "_initGlobal", "_bindKeys", "hasSelection", "copyHandler", "_selectionService", "pasteHandlerWrapper", "handlePasteEvent", "isFirefox", "button", "rightClickHandler", "rightClickSelectsWord", "isLinux", "_keyUp", "_keyDown", "_keyPress", "compositionstart", "compositionupdate", "compositionend", "_inputEvent", "updateCompositionElements", "parent", "isConnected", "_logService", "debug", "_document", "ownerDocument", "dir", "fragment", "createDocumentFragment", "_viewportElement", "_viewportScrollArea", "_helperContainer", "isChromeOS", "_coreBrowserService", "CoreBrowserService", "defaultView", "ICoreBrowserService", "_handleTextAreaFocus", "_charSizeService", "CharSizeService", "ICharSizeService", "ThemeService", "IThemeService", "_characterJoinerService", "CharacterJoinerService", "ICharacterJoinerService", "RenderService", "resize", "_compositionView", "CompositionHelper", "hasRenderer", "setRenderer", "_createRenderer", "MouseService", "IMouseService", "viewport", "Viewport", "onRequestScrollLines", "amount", "suppressScrollEvent", "onRequestSyncScrollBar", "syncScrollArea", "handleCursorMove", "handleResize", "handleBlur", "handleFocus", "SelectionService", "ISelectionService", "onRequestRedraw", "handleSelectionChanged", "columnSelectMode", "onLinuxMouseSelection", "_onScroll", "attachToDom", "BufferDecorationRenderer", "handleMouseDown", "coreMouseService", "areMouseEventsActive", "disable", "enable", "screenReaderMode", "onSpecificOptionChange", "_handleScreenReaderModeOptionChange", "overviewRulerWidth", "_overviewRulerRenderer", "OverviewRulerRenderer", "measure", "bindMouse", "DomRenderer", "el", "sendEvent", "getMouseReportCoords", "but", "action", "overrideType", "buttons", "getLinesScrolled", "deltaY", "triggerMouseEvent", "col", "row", "ctrl", "ctrlKey", "alt", "altKey", "shiftKey", "requestedEvents", "mouseup", "wheel", "mousedrag", "mousemove", "eventListeners", "cancel", "onProtocolChange", "events", "logLevel", "explainEvents", "passive", "activeProtocol", "shouldForceSelection", "hasScrollback", "sequence", "applicationCursorKeys", "data", "abs", "handleWheel", "handleTouchStart", "handleTouchMove", "refreshRows", "shouldColumnSelect", "isCursorInitialized", "disp", "source", "customKeyEventHandler", "joinerId", "deregister", "markers", "cursorYOffset", "addMarker", "decorationOptions", "registerDecoration", "column", "setSelection", "getSelection", "getSelectionPosition", "selectionStart", "selectionEnd", "clearSelection", "selectAll", "selectLines", "shouldIgnoreComposition", "macOptionIsMeta", "keydown", "scrollOnUserInput", "scrollToBottom", "evaluateKeyboardEvent", "scrollCount", "_isThirdLevelShift", "metaKey", "charCodeAt", "ETX", "CR", "domEvent", "thirdLevelKey", "isWindows", "getModifierState", "keyCode", "charCode", "which", "String", "fromCharCode", "inputType", "composed", "hasValidSize", "clearAllMarkers", "getBlankLine", "DEFAULT_ATTR_DATA", "clearTextureAtlas", "WindowsOptionsReportType", "GET_WIN_SIZE_PIXELS", "canvasWidth", "toFixed", "canvasHeight", "GET_CELL_SIZE_PIXELS", "force", "cancelEvents", "P", "_debounceThresholdMS", "_lastRefreshMs", "_additionalRefreshRequested", "_refreshTimeoutID", "clearTimeout", "refreshRequestTime", "Date", "now", "elapsed", "waitPeriodBeforeTrailingRefresh", "_scrollArea", "themeService", "scrollBarWidth", "_currentRowHeight", "_currentDeviceCellHeight", "_lastRecordedBufferLength", "_lastRecordedViewportHeight", "_lastRecordedBufferHeight", "_lastTouchY", "_lastScrollTop", "_wheelPartialScroll", "_refreshAnimationFrame", "_ignoreNextScrollEvent", "_smoothScrollState", "startTime", "origin", "_onRequestScrollLines", "offsetWidth", "_handleScroll", "_activeBuffer", "onBufferActivate", "activeBuffer", "_renderDimensions", "_handleThemeChange", "onChangeColors", "backgroundColor", "background", "immediate", "device", "dpr", "offsetHeight", "newBufferHeight", "round", "scrollTop", "_refresh", "offsetParent", "diff", "_smoothScroll", "_isDisposed", "percent", "_smoothScrollPercent", "_clearSmoothScrollState", "smoothScrollDuration", "scrollPosFromTop", "cancelable", "_getPixelsScrolled", "scrollHeight", "_bubbleScroll", "_applyScrollModifier", "deltaMode", "WheelEvent", "DOM_DELTA_LINE", "DOM_DELTA_PAGE", "startLine", "endLine", "cursorElement", "currentLine", "bufferElements", "isWrapped", "translateToString", "div", "DOM_DELTA_PIXEL", "floor", "modifier", "fastScrollModifier", "fastScrollSensitivity", "scrollSensitivity", "touches", "pageY", "_screenElement", "_decorationElements", "_altBufferIsActive", "_dimensionsChanged", "_container", "_doRefreshDecorations", "_queueRefresh", "onDecorationRegistered", "onDecorationRemoved", "decoration", "_removeDecoration", "addRefreshCallback", "_renderDecoration", "_refreshStyle", "_refreshXPosition", "layer", "marker", "display", "onRenderEmitter", "_createElement", "onDispose", "delete", "anchor", "right", "_zones", "_zonePool", "_zonePoolIndex", "_linePadding", "full", "center", "zones", "overviewRulerOptions", "z", "_lineIntersectsZone", "_lineAdjacentToZone", "_addLineToZone", "startBufferLine", "endBufferLine", "padding", "zone", "drawHeight", "drawWidth", "drawX", "_width", "_coreBrowseService", "_colorZoneStore", "ColorZoneStore", "_shouldUpdateDimensions", "_shouldUpdateAnchor", "_lastKnownBufferLength", "_canvas", "_refreshCanvasDimensions", "parentElement", "insertBefore", "ctx", "getContext", "_ctx", "_registerDecorationListeners", "_registerBufferChangeListeners", "_registerDimensionChangeListeners", "normal", "_refreshDrawHeightConstants", "_refreshColorZonePadding", "_containerHeight", "clientHeight", "_refreshDrawConstants", "outerWidth", "innerWidth", "ceil", "pixelsPerLine", "nonFullHeight", "setPadding", "_refreshDecorations", "clearRect", "addDecoration", "lineWidth", "_renderColorZone", "fillStyle", "fillRect", "updateCanvasDimensions", "updateAnchor", "_isComposing", "_textarea", "_coreService", "_isSendingComposition", "_compositionPosition", "_dataAlreadySent", "_finalizeComposition", "_handleAnyTextareaChanges", "waitForPropagation", "currentCompositionPosition", "input", "substring", "oldValue", "newValue", "DEL", "dontRecurse", "fontFamily", "fontSize", "compositionViewBounds", "ICoreService", "getCoordsRelativeToElement", "rect", "elementStyle", "getComputedStyle", "leftPadding", "parseInt", "getPropertyValue", "topPadding", "colCount", "hasValidCharSize", "cssCellWidth", "cssCellHeight", "isSelection", "moveToRequestedRow", "startY", "targetY", "bufferService", "applicationCursor", "wrappedRowsForRow", "rowsToMove", "wrappedRows", "direction", "verticalDirection", "repeat", "currentRow", "lineWraps", "startCol", "endCol", "forward", "currentCol", "bufferStr", "mod", "count", "str", "rpt", "targetX", "rowDifference", "currX", "TERMINAL_CLASS_PREFIX", "ROW_CONTAINER_CLASS", "FG_CLASS_PREFIX", "BG_CLASS_PREFIX", "FOCUS_CLASS", "SELECTION_CLASS", "nextTerminalId", "_linkifier2", "instantiationService", "_terminalClass", "_refreshRowElements", "_selectionContainer", "createRenderDimensions", "_updateDimensions", "onOptionChange", "_handleOptionsChanged", "_injectCss", "_rowFactory", "DomRendererRowFactory", "_handleLinkHover", "_handleLinkLeave", "_widthCache", "_themeStyleElement", "_dimensionsStyleElement", "WidthCache", "setFont", "fontWeight", "fontWeightBold", "_setDefaultSpacing", "letterSpacing", "overflow", "styles", "_terminalSelector", "foreground", "multiplyOpacity", "cursor", "cursorAccent", "cursorWidth", "selectionBackgroundOpaque", "selectionInactiveBackgroundOpaque", "INVERTED_DEFAULT_COLOR", "opaque", "spacing", "defaultSpacing", "handleDevicePixelRatioChange", "handleCharSizeChanged", "renderRows", "replaceChildren", "viewportStartRow", "viewportEndRow", "viewportCappedStartRow", "viewportCappedEndRow", "documentFragment", "isXFlipped", "_createSelectionElement", "middleRowsCount", "colStart", "colEnd", "cursorAbsoluteY", "cursorBlink", "cursorStyle", "cursorInactiveStyle", "rowElement", "createRow", "_setCellUnderline", "enabled", "maxY", "bufferline", "IInstantiationService", "_workCell", "_columnSelectMode", "_selectionStart", "_selectionEnd", "isCursorRow", "widthCache", "linkStart", "linkEnd", "elements", "joinedRanges", "getJoinedCharacters", "charElement", "getNoBgTrimmedLength", "cellAmount", "oldBg", "oldFg", "oldExt", "oldLinkHover", "oldSpacing", "oldIsInSelection", "classes", "hasHover", "isJoined", "lastCharX", "JoinedCellData", "isInSelection", "_isCellInSelection", "isCursorCell", "isLinkHover", "isDecorated", "forEachDecorationAtCell", "d", "chars", "getChars", "WHITESPACE_CELL_CHAR", "isUnderline", "isOverline", "isBold", "isItalic", "selectionForeground", "ext", "isCursorHidden", "isFocused", "isDim", "isInvisible", "underlineStyle", "isUnderlineColorDefault", "isUnderlineColorRGB", "textDecorationColor", "AttributeData", "getUnderlineColor", "join", "drawBoldTextInBrightColors", "isStrikethrough", "textDecoration", "getFgColor", "fgColorMode", "getFgColorMode", "getBgColor", "bgColorMode", "getBgColorMode", "isInverse", "temp", "temp2", "bgOverride", "fgOverride", "resolvedBg", "isTop", "backgroundColorRGB", "foregroundColorRGB", "_addStyle", "padStart", "_applyMinimumContrast", "$", "className", "minimumContrastRatio", "excludeFromContrastRatioDemands", "getCode", "cache", "_getContrastCache", "adjustedColor", "getColor", "ratio", "ensureContrastRatio", "setColor", "halfContrastCache", "contrastCache", "padChar", "_flat", "Float32Array", "_font", "_fontSize", "_weight", "_weightBold", "_measureElements", "whiteSpace", "fontKerning", "regular", "bold", "italic", "fontStyle", "boldItalic", "body", "_holey", "fill", "font", "weight", "weightBold", "cp", "_measure", "variant", "DIM_OPACITY", "TEXT_BASELINE", "isLegacyEdge", "isPowerlineGlyph", "codepoint", "isSelectAllActive", "selectionStartLength", "finalSelectionStart", "areSelectionValuesReversed", "finalSelectionEnd", "startPlusLength", "_onCharSizeChange", "onCharSizeChange", "_measureStrategy", "DomMeasureStrategy", "onMultipleOptionChange", "_parentElement", "_result", "_measureElement", "geometry", "Number", "firstCell", "content", "combinedData", "isCombined", "getAsCharData", "_characterJoiners", "_nextCharacterJoinerId", "joiner", "id", "ranges", "lineStr", "rangeStartColumn", "currentStringIndex", "rangeStartStringIndex", "rangeAttrFG", "getFg", "rangeAttrBG", "getBg", "_getJoinedRanges", "startIndex", "endIndex", "allJoinedRanges", "error", "joinerRanges", "_mergeRanges", "_stringRangesToCellRanges", "currentRangeIndex", "currentRangeStarted", "currentRange", "getString", "newRange", "inRange", "_isFocused", "_cachedIsFocused", "hasFocus", "queueMicrotask", "_renderer", "decorationService", "coreBrowserService", "_pausedResizeTask", "DebouncedIdleTask", "_isPaused", "_needsFullRefresh", "_isNextRenderRedrawOnly", "_needsSelectionRefresh", "_canvasWidth", "_canvasHeight", "_selectionState", "_onDimensionsChange", "_onRenderedViewportChange", "_onRefreshRequest", "onRefreshRequest", "_renderDebouncer", "RenderDebouncer", "_fullRefresh", "observer", "IntersectionObserver", "_handleIntersectionChange", "threshold", "observe", "disconnect", "entry", "isIntersecting", "intersectionRatio", "flush", "isRedrawOnly", "_fireOnCanvasResize", "renderer", "NON_BREAKING_SPACE_CHAR", "ALL_NON_BREAKING_SPACE_REGEX", "RegExp", "_linkifier", "_dragScrollAmount", "_enabled", "_mouseDownTimeStamp", "_oldHasSelection", "_oldSelectionStart", "_oldSelectionEnd", "_onLinuxMouseSelection", "_onRedrawRequest", "_mouseMoveListener", "_mouseUpListener", "onUserInput", "_trimListener", "onTrim", "_handleTrim", "_handleBufferActivate", "_model", "SelectionModel", "_activeSelectionMode", "_removeMouseDownListeners", "lineText", "startRowEndCol", "isLinuxMouseSelection", "_getMouseBufferCoords", "_areCoordsInSelection", "allowWhitespaceOnlySelection", "getRangeLength", "_selectWordAt", "handleTrim", "offset", "terminalHeight", "macOptionClickForcesSelection", "timeStamp", "_handleIncrementalClick", "detail", "_handleSingleClick", "_handleDoubleClick", "_handleTripleClick", "_addMouseDownListeners", "_dragScrollIntervalTimer", "setInterval", "_dragScroll", "clearInterval", "hasWidth", "_selectWordAtCursor", "_selectLineAt", "previousSelectionEnd", "_selectToWordAt", "_getMouseEventScrollAmount", "timeElapsed", "altClickMovesCursor", "coordinates", "moveToCellSequence", "_fireEventIfSelectionChanged", "_fireOnSelectionChange", "charIndex", "_isClickInSelection", "followWrappedLinesAbove", "followWrappedLinesBelow", "_convertViewportColToCharacterIndex", "charOffset", "leftWideCharCount", "rightWideCharCount", "leftLongCharOffset", "rightLongCharOffset", "charAt", "_isCharWordSeparator", "slice", "trim", "getCodePoint", "previousBufferLine", "previousLineWordPosition", "_getWordAt", "nextBufferLine", "nextLineWordPosition", "wordPosition", "wordSeparator", "wrappedRange", "getWrappedRangeForLine", "first", "last", "createDecorator", "DEFAULT_FOREGROUND", "DEFAULT_BACKGROUND", "DEFAULT_CURSOR", "DEFAULT_CURSOR_ACCENT", "DEFAULT_SELECTION", "DEFAULT_ANSI_COLORS", "freeze", "toCss", "toRgba", "_colors", "_contrastCache", "ColorContrastCache", "_halfContrastCache", "_onChangeColors", "selectionBackgroundTransparent", "blend", "selectionInactiveBackgroundTransparent", "_updateRestoreColors", "_setTheme", "theme", "parseColor", "selectionBackground", "selectionInactiveBackground", "NULL_COLOR", "isOpaque", "opacity", "black", "red", "green", "yellow", "blue", "magenta", "cyan", "white", "brightBlack", "brightRed", "brightGreen", "brightYellow", "brightBlue", "brightMagenta", "brightCyan", "brightWhite", "extendedAnsi", "colorCount", "slot", "_restoreColor", "_restoreColors", "cssString", "fallback", "CircularList", "_maxLength", "onDeleteEmitter", "onDelete", "onInsertEmitter", "onInsert", "onTrimEmitter", "_array", "Array", "_startIndex", "_length", "maxLength", "newMaxLength", "newArray", "_getCyclicIndex", "newLength", "recycle", "isFull", "deleteCount", "items", "countToTrim", "expandListBy", "clone", "val", "depth", "clonedObject", "isArray", "$r", "$g", "$b", "$a", "rgb", "toPaddedHex", "contrastRatio", "l1", "l2", "toChannels", "fgR", "fgG", "fgB", "bgR", "bgG", "bgB", "rgbaColor", "factor", "$ctx", "$litmusColor", "isNode", "willReadFrequently", "globalCompositeOperation", "createLinearGradient", "match", "rgbaMatch", "parseFloat", "getImageData", "relativeLuminance2", "rs", "gs", "bs", "pow", "relativeLuminance", "reduceLuminance", "bgRgba", "fgRgba", "cr", "increaseLuminance", "bgL", "fgL", "resultA", "resultARatio", "resultB", "hasWriteSyncWarnHappened", "_onScrollApi", "_windowsWrappingHeuristics", "_onBinary", "onBinary", "_onData", "onData", "_onLineFeed", "_onResize", "_onWriteParsed", "onWriteParsed", "InstantiationService", "OptionsService", "BufferService", "LogService", "ILogService", "CoreService", "CoreMouseService", "ICoreMouseService", "unicodeService", "UnicodeService", "IUnicodeService", "_charsetService", "CharsetService", "ICharsetService", "OscLinkService", "InputHandler", "onRequestScrollToBottom", "_writeBuffer", "handleUserInput", "_handleWindowsPtyOptionChange", "markRangeDirty", "scrollBottom", "WriteBuffer", "promiseResult", "parse", "write", "maxSubsequentCalls", "LogLevelEnum", "WARN", "writeSync", "isNaN", "MINIMUM_COLS", "MINIMUM_ROWS", "eraseAttr", "scroll", "pageCount", "scrollToTop", "scrollAmount", "registerEscHandler", "registerDcsHandler", "registerCsiHandler", "registerOscHandler", "windowsPty", "buildNumber", "backend", "windowsMode", "_enableWindowsWrappingHeuristics", "disposables", "updateWindowsModeWrappedState", "final", "_listeners", "_disposed", "_event", "arg1", "arg2", "queue", "call", "clearListeners", "from", "to", "GLEVEL", "MAX_PARSEBUFFER_LENGTH", "paramToWindowOption", "opts", "setWinLines", "restoreWin", "minimizeWin", "setWinPosition", "setWinSizePixels", "raiseWin", "lowerWin", "refreshWin", "setWinSizeChars", "maximizeWin", "fullscreenWin", "getWinState", "getWinPosition", "getWinSizePixels", "getScreenSizePixels", "getCellSizePixels", "getWinSizeChars", "getScreenSizeChars", "getIconTitle", "getWinTitle", "pushTitle", "popTitle", "$temp", "getAttrData", "_curAttrData", "_coreMouseService", "_unicodeService", "_parser", "EscapeSequenceParser", "_parseBuffer", "Uint32Array", "_stringDecoder", "StringToUtf32", "_utf8Decoder", "Utf8ToUtf32", "_windowTitle", "_iconName", "_windowTitleStack", "_iconNameStack", "_eraseAttrDataInternal", "_onRequestBell", "_onRequestRefreshRows", "_onRequestReset", "_onRequestSendFocus", "_onRequestSyncScrollBar", "_onRequestWindowsOptionsReport", "_onA11yChar", "_onA11yTab", "_onColor", "_parseStack", "paused", "cursorStartX", "cursorStartY", "decodedLength", "_specialColors", "_dirtyRowTracker", "DirtyRowTracker", "setCsiHandlerFallback", "params", "identifier", "identToString", "toArray", "setEscHandlerFallback", "setExecuteHandlerFallback", "code", "setOscHandlerFallback", "setDcsHandlerFallback", "payload", "setPrintHandler", "print", "insertChars", "intermediates", "scrollLeft", "cursorUp", "scrollRight", "cursorDown", "cursorForward", "cursorBackward", "cursorNextLine", "cursorPrecedingLine", "cursorCharAbsolute", "cursorPosition", "cursorForwardTab", "eraseInDisplay", "prefix", "eraseInLine", "insertLines", "deleteLines", "deleteChars", "scrollUp", "scrollDown", "eraseChars", "cursorBackwardTab", "charPosAbsolute", "hPositionRelative", "repeatPrecedingCharacter", "sendDeviceAttributesPrimary", "sendDeviceAttributesSecondary", "linePosAbsolute", "vPositionRelative", "hVPosition", "tabClear", "setMode", "setModePrivate", "resetMode", "resetModePrivate", "charAttributes", "deviceStatus", "deviceStatusPrivate", "softReset", "setCursorStyle", "setScrollRegion", "saveCursor", "windowOptions", "restoreCursor", "insertColumns", "deleteColumns", "selectProtected", "requestMode", "setExecuteHandler", "BEL", "bell", "LF", "lineFeed", "VT", "FF", "carriageReturn", "BS", "backspace", "HT", "tab", "SO", "shiftOut", "SI", "shiftIn", "C1", "IND", "NEL", "nextLine", "HTS", "tabSet", "OscHandler", "setTitle", "setIconName", "setOrReportIndexedColor", "setHyperlink", "setOrReportFgColor", "setOrReportBgColor", "setOrReportCursorColor", "restoreIndexedColor", "restoreFgColor", "restoreBgColor", "restoreCursorColor", "reverseIndex", "keypadApplicationMode", "keypadNumericMode", "fullReset", "setgLevel", "selectDefaultCharset", "flag", "CHARSETS", "selectCharset", "screenAlignmentPattern", "setErrorHandler", "DcsHandler", "requestStatusString", "Promise", "race", "res", "rej", "catch", "err", "_getCurrentLinkId", "wasPaused", "_logSlowResolvingAsync", "DEBUG", "prototype", "split", "clearRange", "len", "decode", "subarray", "_preserveStack", "chWidth", "charset", "wraparoundMode", "wraparound", "insertMode", "modes", "curAttr", "bufferRow", "markDirty", "setCellFromCodePoint", "wcwidth", "ch", "stringFromCodePoint", "addLineToLink", "_eraseAttrData", "insertCells", "getNullCell", "NULL_CELL_CODE", "NULL_CELL_WIDTH", "addCodepointToCell", "precedingCodepoint", "convertEol", "reverseWraparound", "_restrictCursor", "originalX", "nextStop", "maxCol", "_setCursor", "diffToTop", "_moveCursor", "diffToBottom", "param", "tabs", "prevStop", "clearWrap", "respectProtect", "replaceCells", "clearMarkers", "_eraseInBufferLine", "_resetBufferLine", "scrollBackSize", "trimStart", "scrollBottomRowsOffset", "scrollBottomAbsolute", "deleteCells", "_is", "term", "termName", "setgCharset", "DEFAULT_CHARSET", "applicationKeypad", "activeEncoding", "activateAltBuffer", "activateNormalBuffer", "dm", "mouseProtocol", "mouseEncoding", "cs", "b2v", "mode", "c1", "c2", "c3", "fromColorRGB", "attr", "accu", "cSpace", "advance", "hasSubParams", "subparams", "getSubParams", "_updateAttrColor", "underlineColor", "updateExtended", "_processSGR0", "_processUnderline", "_extractColor", "savedX", "savedY", "savedCurAttrData", "savedCharset", "isBlinking", "bottom", "second", "_savedCharset", "slots", "idx", "spec", "exec", "isValidColorIndex", "args", "_createHyperlink", "_finishHyperlink", "parsedParams", "idParamIndex", "findIndex", "startsWith", "registerLink", "_setOrReportSpecialColor", "collectAndFlag", "scrollRegionHeight", "shiftElements", "level", "yOffset", "markAllDirty", "isProtected", "_disposables", "_value", "array", "_data", "third", "fourth", "navigator", "userAgent", "platform", "isSafari", "majorVersion", "isIpad", "isIphone", "_getKey", "_search", "values", "mid", "midKey", "TaskQueue", "_tasks", "_i", "task", "_start", "_idleCallback", "_cancelCallback", "_requestCallback", "_process", "deadline", "taskDuration", "longestTask", "lastDeadlineRemaining", "timeRemaining", "deadlineRemaining", "PriorityTaskQueue", "_createDeadline", "duration", "IdleTaskQueue", "requestIdleCallback", "cancelIdleCallback", "constructor", "_queue", "enqueue", "lastChar", "CHAR_DATA_CODE_INDEX", "WHITESPACE_CELL_CODE", "ExtendedAttrs", "newObj", "isBlink", "isFgRGB", "isBgRGB", "isFgPalette", "isBgPalette", "isFgDefault", "isBgDefault", "isAttributeDefault", "isEmpty", "getUnderlineColorMode", "isUnderlineColorPalette", "getUnderlineStyle", "_urlId", "_ext", "MAX_BUFFER_SIZE", "_hasScrollback", "_nullCell", "fromCharData", "NULL_CELL_CHAR", "_whitespaceCell", "WHITESPACE_CELL_WIDTH", "_isClearing", "_memoryCleanupQueue", "_memoryCleanupPosition", "_cols", "_rows", "_getCorrectBufferLength", "setupTabStops", "BufferLine", "relativeY", "correctBufferLength", "scrollback", "fillAttr", "newCols", "newRows", "nullCell", "dirtyMemoryLines", "addToY", "amountToTrim", "_isReflowEnabled", "_reflow", "_batchedMemoryCleanup", "normalRun", "counted", "cleanupMemory", "_reflowLarger", "_reflowSmaller", "toRemove", "reflowLargerGetLinesToRemove", "newLayoutResult", "reflowLargerCreateNewLayout", "reflowLargerApplyNewLayout", "layout", "_reflowLargerAdjustViewport", "countRemoved", "viewportAdjustments", "toInsert", "countToInsert", "wrappedLines", "absoluteY", "lastLineLength", "destLineLengths", "reflowSmallerGetNewLineLengths", "linesToAdd", "trimmedLines", "newLines", "newLine", "destLineIndex", "destCol", "srcLineIndex", "srcCol", "cellsToCopy", "copyCellsFrom", "wrappedLinesIndex", "getWrappedLineTrimmedLength", "setCell", "insertEvents", "originalLines", "originalLinesLength", "originalLineIndex", "nextToInsertIndex", "nextToInsert", "countInsertedSoFar", "nextI", "insertCountEmitted", "lineIndex", "trimRight", "tabStopWidth", "Marker", "_removeMarker", "$startIndex", "fillCellData", "_combined", "_extendedAttrs", "CHAR_DATA_ATTR_INDEX", "CHAR_DATA_CHAR_INDEX", "CHAR_DATA_WIDTH_INDEX", "codePoint", "eAttrs", "byteLength", "uint32Cells", "keys", "extKeys", "src", "applyInReverse", "srcData", "srcCombinedKeys", "bufferCols", "endsInNull", "followingLineStartsWithWide", "oldCols", "bufferAbsoluteY", "srcTrimmedTineLength", "srcRemainingCells", "destRemainingCells", "countToRemove", "nextToRemoveIndex", "nextToRemoveStart", "countRemovedSoFar", "newLayout", "newLayoutLines", "newLineLengths", "cellsNeeded", "reduce", "srcLine", "cellsAvailable", "oldTrimmedLength", "endsWithWide", "BufferSet", "_onBufferActivate", "_normal", "Buffer", "fillViewportRows", "_alt", "inactiveBuffer", "obj", "setFromCharData", "combined", "DEFAULT_COLOR", "DEFAULT_ATTR", "DEFAULT_EXT", "_id", "isDisposed", "_nextId", "_onDispose", "disposable", "NUL", "SOH", "STX", "EOT", "ENQ", "ACK", "DLE", "DC1", "DC2", "DC3", "DC4", "NAK", "SYN", "ETB", "CAN", "EM", "SUB", "FS", "GS", "RS", "US", "SP", "PAD", "HOP", "BPH", "NBH", "SSA", "ESA", "HTJ", "VTS", "PLD", "PLU", "RI", "SS2", "SS3", "DCS", "PU1", "PU2", "STS", "CCH", "MW", "SPA", "EPA", "SOS", "SGCI", "SCI", "CSI", "OSC", "PM", "APC", "KEYCODE_KEY_MAPPINGS", "applicationCursorMode", "modifiers", "keyMapping", "keyString", "toUpperCase", "toLowerCase", "_interim", "startPos", "interim", "Uint8Array", "byte1", "byte2", "byte3", "byte4", "discardInterim", "tmp", "missing", "fourStop", "BMP_COMBINING", "HIGH_COMBINING", "table", "version", "num", "ucs", "_action", "_callbacks", "_pendingData", "_bufferOffset", "_isSyncWriting", "_syncCalls", "_didUserInput", "chunk", "cb", "_innerWrite", "lastTime", "continuation", "resolve", "then", "RGB_REX", "HASH_REX", "pad", "bits", "s2", "low", "base", "adv", "PAYLOAD_LIMIT", "EMPTY_HANDLERS", "_handlers", "create", "_active", "_ident", "_handlerFb", "_stack", "loopPosition", "fallThrough", "handlerList", "handlerIndex", "unhook", "hook", "put", "utf32ToString", "success", "handlerResult", "EMPTY_PARAMS", "Params", "addParam", "_handler", "_params", "_hitLimit", "ret", "TransitionTable", "next", "codes", "NON_ASCII_PRINTABLE", "VT500_TRANSITION_TABLE", "blueprint", "apply", "unused", "PRINTABLES", "EXECUTABLES", "states", "setDefault", "addMany", "_transitions", "handlers", "handlerPos", "transition", "chunkPos", "initialState", "currentState", "_collect", "_printHandlerFb", "_executeHandlerFb", "_csiHandlerFb", "_escHandlerFb", "_errorHandlerFb", "_printHandler", "_executeHandlers", "_csiHandlers", "_escHandlers", "_oscParser", "OscParser", "_dcsParser", "DcsParser", "_errorHandler", "finalRange", "intermediate", "finalCode", "reverse", "clearPrintHandler", "_identifier", "registerHandler", "clearHandler", "setHandlerFallback", "clearErrorHandler", "collect", "abort", "addSubParam", "addDigit", "handlersEsc", "jj", "_state", "_put", "MAX_VALUE", "maxSubParamsLength", "Int32Array", "_subParams", "_subParamsLength", "_subParamsIdx", "Uint16Array", "_rejectDigits", "_rejectSubDigits", "_digitIsSub", "newParams", "getSubParamsAll", "store", "cur", "_addons", "instance", "terminal", "loadedAddon", "_wrappedAddonDispose", "_buffer", "viewportY", "baseY", "BufferLineApiView", "_line", "startColumn", "endColumn", "BufferNamespaceApi", "_core", "_onBufferChange", "onBufferChange", "BufferApiView", "_alternate", "alternate", "init", "provider", "versions", "activeVersion", "isUserScrolling", "_cachedBlankLine", "topRow", "bottomRow", "willBufferBeTrimmed", "copyFrom", "oldYdisp", "glevel", "_charsets", "DEFAULT_PROTOCOLS", "NONE", "restrict", "X10", "VT200", "DRAG", "ANY", "eventCode", "isSGR", "DEFAULT_ENCODINGS", "DEFAULT", "SGR", "SGR_PIXELS", "_protocols", "_encodings", "_activeProtocol", "_activeEncoding", "_lastEvent", "_onProtocolChange", "name", "addProtocol", "addEncoding", "encoding", "_equalEvents", "report", "triggerBinaryEvent", "down", "up", "drag", "move", "e1", "e2", "pixels", "DEFAULT_MODES", "DEFAULT_DEC_PRIVATE_MODES", "_onUserInput", "_onRequestScrollToBottom", "wasUserInput", "disableStdin", "$xmin", "$xmax", "_decorations", "SortedList", "_onDecorationRegistered", "_onDecorationRemoved", "Decoration", "markerDispose", "insert", "xmin", "xmax", "getKeyIterator", "forEachByKey", "_cachedBg", "_cachedFg", "foregroundColor", "ServiceCollection", "_entries", "service", "_services", "ctor", "serviceDependencies", "getServiceDependencies", "sort", "serviceArgs", "dependency", "firstServiceArgPos", "optionsKeyToLogLevel", "trace", "TRACE", "info", "INFO", "ERROR", "off", "OFF", "traceLogger", "_logLevel", "_updateLogLevel", "optionalParams", "message", "_evalLazyOptionalParams", "logger", "_log", "log", "_target", "descriptor", "fn", "JSON", "stringify", "DEFAULT_OPTIONS", "customGlyphs", "allowProposedApi", "allowTransparency", "FONT_WEIGHT_OPTIONS", "_onOptionChange", "defaultOptions", "_sanitizeAndValidateOption", "_setupOptions", "eventKey", "getter", "propName", "setter", "desc", "defineProperty", "_entriesWithId", "_dataByLinkId", "_removeMarkerFromLink", "castData", "_getEntryIdKey", "linkId", "every", "linkData", "DI_TARGET", "DI_DEPENDENCIES", "serviceRegistry", "decorator", "arguments", "_providers", "_onChange", "onChange", "defaultProvider", "UnicodeV6", "_activeProvider", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "__webpack_modules__", "CONSTRUCTOR_ONLY_OPTIONS", "_addonManager", "AddonManager", "_publicOptions", "_checkReadonlyOptions", "_checkProposedApi", "parser", "ParserApi", "unicode", "UnicodeApi", "mouseTrackingMode", "applicationCursorKeysMode", "applicationKeypadMode", "originMode", "reverseWraparoundMode", "sendFocusMode", "columns", "_verifyIntegers", "attachCustomKeyEventHandler", "registerCharacterJoiner", "deregisterCharacterJoiner", "registerMarker", "_verifyPositiveIntegers", "scrollPages", "scrollToLine", "addon", "loadAddon", "strings", "Infinity", "import_react", "stringify", "values", "options", "settings", "nameRe", "nameReJsx", "emptyOptions", "name", "options", "emptyOptions", "nameReJsx", "nameRe", "re", "whitespace", "thing", "empty", "value", "Schema", "property", "normal", "space", "merge", "definitions", "space", "property", "normal", "definition", "Schema", "normalize", "value", "Info", "property", "attribute", "types_exports", "__export", "boolean", "booleanish", "commaOrSpaceSeparated", "commaSeparated", "number", "overloadedBoolean", "spaceSeparated", "powers", "increment", "checks", "types_exports", "DefinedInfo", "Info", "property", "attribute", "mask", "space", "index", "mark", "check", "values", "key", "value", "create", "definition", "properties", "normals", "property", "value", "info", "DefinedInfo", "normalize", "Schema", "aria", "create", "booleanish", "number", "spaceSeparated", "_", "property", "caseSensitiveTransform", "attributes", "attribute", "caseInsensitiveTransform", "attributes", "property", "caseSensitiveTransform", "html", "create", "commaSeparated", "spaceSeparated", "boolean", "number", "booleanish", "overloadedBoolean", "caseInsensitiveTransform", "svg", "create", "commaOrSpaceSeparated", "number", "spaceSeparated", "boolean", "commaSeparated", "caseSensitiveTransform", "xlink", "create", "_", "property", "xmlns", "create", "caseInsensitiveTransform", "xml", "create", "_", "property", "hastToReact", "cap", "dash", "valid", "find", "schema", "value", "normal", "normalize", "property", "Type", "Info", "rest", "camelcase", "dashes", "kebab", "DefinedInfo", "$0", "html", "merge", "aria", "xlink", "xmlns", "xml", "svg", "stringify", "values", "import_style_to_js", "pointEnd", "point", "pointStart", "type", "node", "position", "start", "end", "stringifyPosition", "value", "position", "point", "index", "pos", "VFileMessage", "causeOrReason", "optionsOrParentOrPlace", "origin", "reason", "options", "legacyCause", "index", "parent", "start", "stringifyPosition", "own", "emptyMap", "cap", "tableElements", "tableCellElement", "docs", "toJsxRuntime", "tree", "options", "filePath", "create", "developmentCreate", "productionCreate", "state", "svg", "html", "result", "one", "node", "key", "element", "mdxExpression", "mdxJsxElement", "mdxEsm", "root", "text", "parentSchema", "schema", "type", "findComponentFromName", "props", "createElementProps", "children", "createChildren", "child", "whitespace", "addNode", "addChildren", "expression", "crashEstree", "createJsxElementProps", "_", "value", "jsx", "jsxs", "fn", "jsxDEV", "isStaticChildren", "point", "pointStart", "alignValue", "prop", "createProperty", "style", "attribute", "objectExpression", "property", "name", "index", "countsByName", "count", "info", "find", "stringify", "styleObject", "parseStyle", "transformStylesToCssCasing", "hastToReact", "styleToJs", "error", "cause", "message", "VFileMessage", "allowExpression", "identifiers", "place", "domCasing", "cssCasing", "from", "transformStyleToCssCasing", "to", "toDash", "$0", "urlAttributes", "import_jsx_runtime", "import_react", "emptyOptions", "toString", "value", "options", "settings", "includeImageAlt", "includeHtml", "one", "node", "all", "values", "result", "index", "element", "decodeNamedCharacterReference", "value", "characterReference", "character", "splice", "list", "start", "remove", "items", "end", "chunkStart", "parameters", "push", "hasOwnProperty", "combineExtensions", "extensions", "all", "index", "syntaxExtension", "extension", "hook", "left", "right", "code", "value", "constructs", "existing", "list", "before", "splice", "decodeNumericCharacterReference", "value", "base", "code", "normalizeIdentifier", "value", "asciiAlpha", "regexCheck", "asciiAlphanumeric", "asciiAtext", "asciiControl", "code", "asciiDigit", "asciiHexDigit", "asciiPunctuation", "markdownLineEnding", "markdownLineEndingOrSpace", "markdownSpace", "unicodePunctuation", "unicodeWhitespace", "regex", "check", "normalizeUri", "value", "result", "index", "start", "skip", "code", "replace", "asciiAlphanumeric", "next", "factorySpace", "effects", "ok", "type", "max", "limit", "size", "start", "code", "markdownSpace", "prefix", "content", "initializeContent", "effects", "contentStart", "afterContentStartConstruct", "paragraphInitial", "previous", "code", "factorySpace", "lineStart", "token", "data", "markdownLineEnding", "document", "initializeDocument", "containerConstruct", "tokenizeContainer", "effects", "self", "stack", "continued", "childFlow", "childToken", "lineStartOffset", "start", "code", "item", "documentContinue", "checkNewContainers", "closeFlow", "indexBeforeExits", "indexBeforeFlow", "point", "exitContainers", "index", "splice", "documentContinued", "flowStart", "thereIsANewContainer", "thereIsNoNewContainer", "containerContinue", "flowContinue", "writeToChild", "markdownLineEnding", "token", "endOfFile", "stream", "seen", "size", "entry", "ok", "nok", "factorySpace", "classifyCharacter", "code", "markdownLineEndingOrSpace", "unicodeWhitespace", "unicodePunctuation", "resolveAll", "constructs", "events", "context", "called", "index", "resolve", "attention", "resolveAllAttention", "tokenizeAttention", "events", "context", "index", "open", "group", "text", "openingSequence", "closingSequence", "use", "nextEvents", "offset", "start", "end", "movePoint", "push", "resolveAll", "splice", "effects", "ok", "attentionMarkers", "previous", "before", "classifyCharacter", "marker", "code", "inside", "token", "after", "close", "point", "autolink", "tokenizeAutolink", "effects", "ok", "nok", "size", "start", "code", "open", "asciiAlpha", "schemeOrEmailAtext", "emailAtext", "asciiAlphanumeric", "schemeInsideOrEmailAtext", "urlInside", "asciiControl", "emailAtSignOrDot", "asciiAtext", "emailLabel", "emailValue", "next", "blankLine", "tokenizeBlankLine", "effects", "ok", "nok", "start", "code", "markdownSpace", "factorySpace", "after", "markdownLineEnding", "blockQuote", "tokenizeBlockQuoteContinuation", "exit", "tokenizeBlockQuoteStart", "effects", "ok", "nok", "self", "start", "code", "state", "after", "markdownSpace", "contStart", "factorySpace", "contBefore", "characterEscape", "tokenizeCharacterEscape", "effects", "ok", "nok", "start", "code", "inside", "asciiPunctuation", "characterReference", "tokenizeCharacterReference", "effects", "ok", "nok", "self", "size", "max", "test", "start", "code", "open", "numeric", "asciiAlphanumeric", "value", "asciiHexDigit", "asciiDigit", "token", "decodeNamedCharacterReference", "nonLazyContinuation", "tokenizeNonLazyContinuation", "codeFenced", "tokenizeCodeFenced", "effects", "ok", "nok", "self", "closeStart", "tokenizeCloseStart", "initialPrefix", "sizeOpen", "marker", "start", "code", "beforeSequenceOpen", "tail", "sequenceOpen", "markdownSpace", "factorySpace", "infoBefore", "markdownLineEnding", "atNonLazyBreak", "after", "info", "metaBefore", "meta", "contentBefore", "contentStart", "beforeContentChunk", "contentChunk", "size", "startBefore", "beforeSequenceClose", "sequenceClose", "sequenceCloseAfter", "lineStart", "codeIndented", "tokenizeCodeIndented", "furtherStart", "tokenizeFurtherStart", "effects", "ok", "nok", "self", "start", "code", "factorySpace", "afterPrefix", "tail", "atBreak", "after", "markdownLineEnding", "inside", "codeText", "previous", "resolveCodeText", "tokenizeCodeText", "events", "tailExitIndex", "headEnterIndex", "index", "enter", "code", "effects", "ok", "nok", "self", "sizeOpen", "size", "token", "start", "sequenceOpen", "between", "sequenceClose", "markdownLineEnding", "data", "SpliceBuffer", "initial", "index", "start", "end", "stop", "deleteCount", "items", "count", "removed", "chunkedPush", "item", "n", "list", "right", "chunkStart", "subtokenize", "eventsArray", "jumps", "index", "event", "lineIndex", "otherIndex", "otherEvent", "parameters", "subevents", "more", "events", "SpliceBuffer", "subcontent", "splice", "eventIndex", "token", "context", "startPosition", "startPositions", "tokenizer", "childEvents", "gaps", "stream", "previous", "current", "adjust", "start", "breaks", "slice", "content", "resolveContent", "tokenizeContent", "continuationConstruct", "tokenizeContinuation", "events", "subtokenize", "effects", "ok", "previous", "chunkStart", "code", "chunkInside", "contentEnd", "markdownLineEnding", "contentContinue", "nok", "self", "startLookahead", "factorySpace", "prefixed", "tail", "factoryDestination", "effects", "ok", "nok", "type", "literalType", "literalMarkerType", "rawType", "stringType", "max", "limit", "balance", "start", "code", "enclosedBefore", "asciiControl", "raw", "enclosed", "markdownLineEnding", "enclosedEscape", "markdownLineEndingOrSpace", "rawEscape", "factoryLabel", "effects", "ok", "nok", "type", "markerType", "stringType", "self", "size", "seen", "start", "code", "atBreak", "markdownLineEnding", "labelInside", "markdownSpace", "labelEscape", "factoryTitle", "effects", "ok", "nok", "type", "markerType", "stringType", "marker", "start", "code", "begin", "atBreak", "markdownLineEnding", "factorySpace", "inside", "escape", "factoryWhitespace", "effects", "ok", "seen", "start", "code", "markdownLineEnding", "markdownSpace", "factorySpace", "definition", "tokenizeDefinition", "titleBefore", "tokenizeTitleBefore", "effects", "ok", "nok", "self", "identifier", "start", "code", "before", "factoryLabel", "labelAfter", "normalizeIdentifier", "markerAfter", "markdownLineEndingOrSpace", "factoryWhitespace", "destinationBefore", "factoryDestination", "destinationAfter", "after", "markdownSpace", "factorySpace", "afterWhitespace", "markdownLineEnding", "beforeMarker", "factoryTitle", "titleAfter", "titleAfterOptionalWhitespace", "hardBreakEscape", "tokenizeHardBreakEscape", "effects", "ok", "nok", "start", "code", "after", "markdownLineEnding", "headingAtx", "resolveHeadingAtx", "tokenizeHeadingAtx", "events", "context", "contentEnd", "contentStart", "content", "text", "splice", "effects", "ok", "nok", "size", "start", "code", "before", "sequenceOpen", "markdownLineEndingOrSpace", "atBreak", "sequenceFurther", "markdownLineEnding", "markdownSpace", "factorySpace", "data", "htmlBlockNames", "htmlRawNames", "htmlFlow", "resolveToHtmlFlow", "tokenizeHtmlFlow", "blankLineBefore", "tokenizeBlankLineBefore", "nonLazyContinuationStart", "tokenizeNonLazyContinuationStart", "events", "index", "effects", "ok", "nok", "self", "marker", "closingTag", "buffer", "markerB", "start", "code", "before", "open", "declarationOpen", "tagCloseStart", "continuationDeclarationInside", "asciiAlpha", "tagName", "commentOpenInside", "cdataOpenInside", "value", "continuation", "markdownLineEndingOrSpace", "slash", "name", "htmlRawNames", "htmlBlockNames", "basicSelfClosing", "completeClosingTagAfter", "completeAttributeNameBefore", "asciiAlphanumeric", "markdownSpace", "completeEnd", "completeAttributeName", "completeAttributeNameAfter", "completeAttributeValueBefore", "completeAttributeValueQuoted", "completeAttributeValueUnquoted", "completeAttributeValueQuotedAfter", "markdownLineEnding", "completeAfter", "continuationCommentInside", "continuationRawTagOpen", "continuationClose", "continuationCdataInside", "continuationAfter", "continuationStart", "continuationStartNonLazy", "continuationBefore", "continuationRawEndTag", "after", "blankLine", "htmlText", "tokenizeHtmlText", "effects", "ok", "nok", "self", "marker", "index", "returnState", "start", "code", "open", "declarationOpen", "tagCloseStart", "instruction", "asciiAlpha", "tagOpen", "commentOpenInside", "cdataOpenInside", "declaration", "commentEnd", "comment", "commentClose", "markdownLineEnding", "lineEndingBefore", "end", "value", "cdata", "cdataClose", "cdataEnd", "instructionClose", "tagClose", "asciiAlphanumeric", "tagCloseBetween", "markdownSpace", "markdownLineEndingOrSpace", "tagOpenBetween", "tagOpenAttributeName", "tagOpenAttributeNameAfter", "tagOpenAttributeValueBefore", "tagOpenAttributeValueQuoted", "tagOpenAttributeValueUnquoted", "tagOpenAttributeValueQuotedAfter", "lineEndingAfter", "factorySpace", "lineEndingAfterPrefix", "labelEnd", "resolveAllLabelEnd", "resolveToLabelEnd", "tokenizeLabelEnd", "resourceConstruct", "tokenizeResource", "referenceFullConstruct", "tokenizeReferenceFull", "referenceCollapsedConstruct", "tokenizeReferenceCollapsed", "events", "index", "newEvents", "token", "offset", "splice", "context", "open", "close", "media", "group", "label", "text", "push", "resolveAll", "effects", "ok", "nok", "self", "labelStart", "defined", "start", "code", "labelEndNok", "normalizeIdentifier", "after", "labelEndOk", "referenceNotFull", "resourceStart", "resourceBefore", "markdownLineEndingOrSpace", "factoryWhitespace", "resourceOpen", "resourceEnd", "factoryDestination", "resourceDestinationAfter", "resourceDestinationMissing", "resourceBetween", "factoryTitle", "resourceTitleAfter", "referenceFull", "factoryLabel", "referenceFullAfter", "referenceFullMissing", "referenceCollapsedStart", "referenceCollapsedOpen", "labelStartImage", "labelEnd", "tokenizeLabelStartImage", "effects", "ok", "nok", "self", "start", "code", "open", "after", "labelStartLink", "labelEnd", "tokenizeLabelStartLink", "effects", "ok", "nok", "self", "start", "code", "after", "lineEnding", "tokenizeLineEnding", "effects", "ok", "start", "code", "factorySpace", "thematicBreak", "tokenizeThematicBreak", "effects", "ok", "nok", "size", "marker", "start", "code", "before", "atBreak", "sequence", "markdownLineEnding", "markdownSpace", "factorySpace", "list", "tokenizeListContinuation", "tokenizeListEnd", "tokenizeListStart", "listItemPrefixWhitespaceConstruct", "tokenizeListItemPrefixWhitespace", "indentConstruct", "tokenizeIndent", "effects", "ok", "nok", "self", "tail", "initialSize", "size", "start", "code", "kind", "asciiDigit", "thematicBreak", "atMarker", "inside", "blankLine", "onBlank", "endOfPrefix", "otherPrefix", "markdownSpace", "notBlank", "factorySpace", "notInCurrentItem", "afterPrefix", "setextUnderline", "resolveToSetextUnderline", "tokenizeSetextUnderline", "events", "context", "index", "content", "text", "definition", "heading", "effects", "ok", "nok", "self", "marker", "start", "code", "paragraph", "before", "inside", "markdownSpace", "factorySpace", "after", "markdownLineEnding", "flow", "initializeFlow", "effects", "self", "initial", "blankLine", "atBlankEnding", "afterConstruct", "factorySpace", "content", "code", "resolver", "createResolver", "string", "initializeFactory", "text", "field", "resolveAllLineSuffixes", "initializeText", "effects", "self", "constructs", "start", "notText", "code", "atBreak", "data", "list", "index", "item", "extraResolver", "resolveAllText", "events", "context", "enter", "eventIndex", "chunks", "bufferIndex", "size", "tabs", "chunk", "token", "constructs_exports", "__export", "attentionMarkers", "contentInitial", "disable", "document", "flow", "flowInitial", "insideSpan", "string", "text", "document", "list", "blockQuote", "contentInitial", "definition", "flowInitial", "codeIndented", "flow", "headingAtx", "thematicBreak", "setextUnderline", "htmlFlow", "codeFenced", "string", "characterReference", "characterEscape", "text", "lineEnding", "labelStartImage", "attention", "autolink", "htmlText", "labelStartLink", "hardBreakEscape", "labelEnd", "codeText", "insideSpan", "resolver", "attentionMarkers", "disable", "createTokenizer", "parser", "initialize", "from", "point", "columnStart", "resolveAllConstructs", "chunks", "stack", "consumed", "effects", "constructFactory", "onsuccessfulconstruct", "onsuccessfulcheck", "consume", "enter", "exit", "context", "defineSkip", "now", "sliceSerialize", "sliceStream", "write", "state", "expectedCode", "slice", "push", "main", "addResult", "resolveAll", "token", "expandTabs", "serializeChunks", "sliceChunks", "_bufferIndex", "_index", "line", "column", "offset", "value", "accountForPotentialSkip", "chunkIndex", "chunk", "go", "code", "markdownLineEnding", "type", "fields", "construct", "info", "_", "onreturn", "hook", "constructs", "returnState", "bogusState", "listOfConstructs", "constructIndex", "currentConstruct", "handleListOfConstructs", "handleMapOfConstructs", "map", "start", "left", "all", "list", "handleConstruct", "store", "nok", "ok", "splice", "startPoint", "startPrevious", "startCurrentConstruct", "startEventsIndex", "startStack", "restore", "startIndex", "startBufferIndex", "endIndex", "endBufferIndex", "view", "head", "index", "result", "atTab", "parse", "options", "parser", "combineExtensions", "constructs_exports", "create", "content", "document", "flow", "string", "text", "initial", "creator", "from", "createTokenizer", "postprocess", "events", "subtokenize", "search", "preprocess", "column", "buffer", "start", "atCarriageReturn", "preprocessor", "value", "encoding", "end", "chunks", "match", "next", "startPosition", "endPosition", "code", "characterEscapeOrReference", "decodeString", "value", "decode", "$0", "$1", "$2", "head", "hex", "decodeNumericCharacterReference", "decodeNamedCharacterReference", "own", "fromMarkdown", "value", "encoding", "options", "compiler", "postprocess", "parse", "preprocess", "config", "opener", "link", "onenterdata", "heading", "blockQuote", "codeFlow", "buffer", "codeText", "definition", "emphasis", "hardBreak", "html", "image", "listItem", "onenterlistitemvalue", "list", "onenterlistordered", "paragraph", "onenterreference", "strong", "thematicBreak", "closer", "onexitatxheadingsequence", "onexitautolinkemail", "onexitautolinkprotocol", "onexitdata", "onexitcharacterreferencemarker", "onexitcharacterreferencevalue", "onexitcharacterreference", "onexitcodefenced", "onexitcodefencedfence", "onexitcodefencedfenceinfo", "onexitcodefencedfencemeta", "onexitcodeindented", "onexitcodetext", "onexitdefinitiondestinationstring", "onexitdefinitionlabelstring", "onexitdefinitiontitlestring", "onexithardbreak", "onexithtmlflow", "onexithtmltext", "onexitimage", "onexitlabel", "onexitlabeltext", "onexitlineending", "onexitlink", "onexitreferencestring", "onexitresourcedestinationstring", "onexitresourcetitlestring", "onexitresource", "onexitsetextheading", "onexitsetextheadinglinesequence", "onexitsetextheadingtext", "configure", "data", "compile", "events", "tree", "context", "enter", "exit", "resume", "listStack", "index", "tail", "prepareList", "handler", "defaultOnError", "point", "start", "length", "containerBalance", "listSpread", "lineIndex", "firstBlankLineIndex", "atMarker", "event", "tailIndex", "tailEvent", "item", "create", "and", "open", "token", "node", "errorHandler", "close", "onExitError", "stringifyPosition", "toString", "ancestor", "label", "normalizeIdentifier", "depth", "siblings", "text", "referenceType", "string", "decodeString", "fragment", "children", "type", "decodeNumericCharacterReference", "decodeNamedCharacterReference", "d", "combined", "extensions", "extension", "key", "right", "left", "remarkParse", "options", "self", "parser", "doc", "fromMarkdown", "blockquote", "state", "node", "result", "hardBreak", "state", "node", "result", "code", "state", "node", "value", "properties", "result", "strikethrough", "state", "node", "result", "emphasis", "state", "node", "result", "footnoteReference", "state", "node", "clobberPrefix", "id", "safeId", "normalizeUri", "index", "counter", "reuseCounter", "link", "sup", "heading", "state", "node", "result", "html", "state", "node", "result", "revert", "state", "node", "subtype", "suffix", "contents", "head", "tail", "imageReference", "state", "node", "id", "definition", "revert", "properties", "normalizeUri", "result", "image", "state", "node", "properties", "normalizeUri", "result", "inlineCode", "state", "node", "text", "result", "linkReference", "state", "node", "id", "definition", "revert", "properties", "normalizeUri", "result", "link", "state", "node", "properties", "normalizeUri", "result", "listItem", "state", "node", "parent", "results", "loose", "listLoose", "listItemLoose", "properties", "children", "head", "paragraph", "index", "child", "tail", "result", "spread", "list", "state", "node", "properties", "results", "index", "child", "result", "paragraph", "state", "node", "result", "root", "state", "node", "result", "strong", "state", "node", "result", "table", "state", "node", "rows", "firstRow", "tableContent", "head", "body", "start", "pointStart", "end", "pointEnd", "result", "tableRow", "state", "node", "parent", "siblings", "tagName", "align", "length", "cellIndex", "cells", "cell", "properties", "alignValue", "result", "tableCell", "state", "node", "result", "trimLines", "value", "source", "search", "match", "last", "lines", "trimLine", "start", "end", "startIndex", "endIndex", "code", "text", "state", "node", "result", "trimLines", "thematicBreak", "state", "node", "result", "handlers", "blockquote", "hardBreak", "code", "strikethrough", "emphasis", "footnoteReference", "heading", "html", "imageReference", "image", "inlineCode", "linkReference", "link", "listItem", "list", "paragraph", "root", "strong", "table", "tableCell", "tableRow", "text", "thematicBreak", "ignore", "env", "deserializer", "$", "_", "as", "out", "index", "unpair", "type", "value", "arr", "object", "key", "source", "flags", "map", "set", "name", "message", "buffer", "deserialize", "serialized", "EMPTY", "toString", "keys", "typeOf", "value", "type", "asString", "shouldSkip", "TYPE", "serializer", "strict", "json", "$", "_", "as", "out", "index", "pair", "entry", "spread", "arr", "entries", "key", "source", "flags", "message", "serialize", "lossy", "esm_default", "any", "options", "deserialize", "serialize", "defaultFootnoteBackContent", "_", "rereferenceIndex", "result", "defaultFootnoteBackLabel", "referenceIndex", "footer", "state", "clobberPrefix", "footnoteBackContent", "footnoteBackLabel", "footnoteLabel", "footnoteLabelTagName", "footnoteLabelProperties", "listItems", "definition", "content", "id", "safeId", "normalizeUri", "backReferences", "counts", "children", "tail", "tailTail", "listItem", "esm_default", "convert", "test", "ok", "castFactory", "anyFactory", "propsFactory", "typeFactory", "tests", "checks", "index", "any", "parameters", "check", "checkAsRecord", "all", "node", "nodeAsRecord", "key", "type", "testFunction", "value", "parent", "looksLikeANode", "empty", "CONTINUE", "EXIT", "SKIP", "visitParents", "tree", "test", "visitor", "reverse", "check", "is", "convert", "step", "factory", "node", "index", "parents", "value", "name", "visit", "result", "subresult", "offset", "grandparents", "toResult", "nodeAsParent", "child", "visit", "tree", "testOrVisitor", "visitorOrReverse", "maybeReverse", "reverse", "test", "visitor", "visitParents", "overload", "node", "parents", "parent", "index", "own", "emptyOptions", "createState", "tree", "options", "settings", "definitionById", "footnoteById", "footnoteCounts", "handlers", "state", "all", "applyData", "one", "patch", "wrap", "visit", "node", "map", "id", "parent", "type", "handle", "children", "shallow", "result", "esm_default", "defaultUnknownHandler", "values", "nodes", "index", "trimMarkdownSpaceStart", "head", "from", "to", "position", "hName", "hChildren", "hProperties", "data", "loose", "value", "code", "toHast", "tree", "options", "state", "createState", "node", "foot", "footer", "result", "remarkRehype", "destination", "options", "tree", "file", "hastTree", "toHast", "bail", "error", "import_extend", "isPlainObject", "value", "prototype", "trough", "fns", "pipeline", "run", "use", "values", "middlewareIndex", "callback", "next", "error", "output", "fn", "index", "wrap", "middelware", "middleware", "called", "wrapped", "parameters", "fnExpectsCallback", "result", "done", "exception", "then", "value", "minpath", "basename", "dirname", "extname", "join", "path", "assertPath", "start", "end", "index", "seenNonSlash", "firstNonSlashEnd", "extnameIndex", "unmatchedSlash", "startPart", "startDot", "preDotState", "code", "segments", "joined", "normalize", "absolute", "value", "normalizeString", "allowAboveRoot", "result", "lastSegmentLength", "lastSlash", "dots", "lastSlashIndex", "minproc", "cwd", "isUrl", "fileUrlOrPath", "urlToPath", "path", "isUrl", "error", "getPathFromURLPosix", "url", "pathname", "index", "third", "order", "VFile", "value", "options", "isUrl", "isUint8Array", "minproc", "index", "field", "minpath", "basename", "assertNonEmpty", "assertPart", "dirname", "assertPath", "extname", "path", "urlToPath", "stem", "causeOrReason", "optionsOrParentOrPlace", "origin", "message", "VFileMessage", "encoding", "part", "name", "CallableInstance", "property", "proto", "value", "apply", "own", "Processor", "_Processor", "CallableInstance", "trough", "destination", "index", "attacher", "extend", "key", "value", "assertUnfrozen", "self", "options", "transformer", "file", "realFile", "vfile", "parser", "assertParser", "done", "assertCompiler", "executor", "resolve", "reject", "parseTree", "error", "tree", "realDone", "compileTree", "compileResult", "looksLikeAValue", "complete", "result", "assertDone", "bail", "assertNode", "transformers", "outputTree", "resultingTree", "compiler", "parameters", "attachers", "namespace", "addPlugin", "addList", "addPreset", "add", "plugin", "plugins", "thing", "entryIndex", "primary", "rest", "currentPrimary", "isPlainObject", "unified", "name", "frozen", "node", "asyncName", "looksLikeAVFile", "VFile", "isUint8Array", "changelog", "emptyPlugins", "emptyRemarkRehypeOptions", "safeProtocol", "deprecations", "Markdown", "options", "processor", "createProcessor", "file", "createFile", "post", "createProcessor", "options", "rehypePlugins", "emptyPlugins", "remarkPlugins", "remarkRehypeOptions", "emptyRemarkRehypeOptions", "unified", "remarkParse", "remarkRehype", "createFile", "children", "file", "VFile", "post", "tree", "allowedElements", "allowElement", "components", "disallowedElements", "skipHtml", "unwrapDisallowed", "urlTransform", "defaultUrlTransform", "deprecation", "deprecations", "changelog", "visit", "transform", "toJsxRuntime", "node", "index", "parent", "key", "urlAttributes", "value", "test", "remove", "colon", "questionMark", "numberSign", "slash", "safeProtocol", "ccount", "value", "character", "source", "count", "index", "escapeStringRegexp", "string", "findAndReplace", "tree", "list", "options", "ignored", "convert", "pairs", "toPairs", "pairIndex", "visitParents", "visitor", "node", "parents", "index", "grandparent", "parent", "siblings", "handler", "find", "replace", "start", "change", "nodes", "match", "position", "matchObject", "value", "tupleOrList", "result", "tuple", "toExpression", "toFunction", "escapeStringRegexp", "inConstruct", "notInConstruct", "gfmAutolinkLiteralFromMarkdown", "transformGfmAutolinkLiterals", "enterLiteralAutolink", "enterLiteralAutolinkValue", "exitLiteralAutolink", "exitLiteralAutolinkEmail", "exitLiteralAutolinkHttp", "exitLiteralAutolinkWww", "gfmAutolinkLiteralToMarkdown", "token", "node", "tree", "findAndReplace", "findUrl", "findEmail", "_", "protocol", "domain", "path", "match", "prefix", "previous", "isCorrectDomain", "parts", "splitUrl", "result", "atext", "label", "url", "trailExec", "trail", "closingParenIndex", "openingParens", "ccount", "closingParens", "email", "code", "unicodeWhitespace", "unicodePunctuation", "footnoteReference", "footnoteReferencePeek", "enterFootnoteCallString", "enterFootnoteCall", "token", "enterFootnoteDefinitionLabelString", "enterFootnoteDefinition", "exitFootnoteCallString", "label", "node", "normalizeIdentifier", "exitFootnoteCall", "exitFootnoteDefinitionLabelString", "exitFootnoteDefinition", "_", "state", "info", "tracker", "value", "exit", "subexit", "gfmFootnoteFromMarkdown", "gfmFootnoteToMarkdown", "options", "firstLineBlank", "footnoteDefinition", "mapAll", "mapExceptFirst", "line", "index", "blank", "constructsWithoutStrikethrough", "handleDelete", "peekDelete", "gfmStrikethroughFromMarkdown", "enterStrikethrough", "exitStrikethrough", "gfmStrikethroughToMarkdown", "token", "node", "_", "state", "info", "tracker", "exit", "value", "defaultStringLength", "value", "markdownTable", "table", "options", "settings", "align", "stringLength", "alignments", "cellMatrix", "sizeMatrix", "longestCellByColumn", "mostCellsPerRow", "rowIndex", "row", "sizes", "columnIndex", "cell", "serialize", "size", "toAlignment", "code", "before", "after", "lines", "line", "blockquote", "node", "_", "state", "info", "exit", "tracker", "value", "map", "line", "blank", "patternInScope", "stack", "pattern", "listInScope", "list", "none", "index", "hardBreak", "_", "_1", "state", "info", "index", "patternInScope", "longestStreak", "value", "substring", "source", "index", "expected", "count", "max", "formatCodeAsIndented", "node", "state", "checkFence", "state", "marker", "code", "node", "_", "state", "info", "marker", "checkFence", "raw", "suffix", "formatCodeAsIndented", "exit", "value", "map", "tracker", "sequence", "longestStreak", "subexit", "line", "blank", "checkQuote", "state", "marker", "definition", "node", "_", "state", "info", "quote", "checkQuote", "suffix", "exit", "subexit", "tracker", "value", "checkEmphasis", "state", "marker", "encodeCharacterReference", "code", "encodeInfo", "outside", "inside", "marker", "outsideKind", "classifyCharacter", "insideKind", "emphasis", "emphasisPeek", "node", "_", "state", "info", "marker", "checkEmphasis", "exit", "tracker", "before", "between", "betweenHead", "open", "encodeInfo", "encodeCharacterReference", "betweenTail", "close", "after", "_1", "formatHeadingAsSetext", "node", "state", "literalWithBreak", "visit", "EXIT", "toString", "heading", "node", "_", "state", "info", "rank", "tracker", "formatHeadingAsSetext", "exit", "subexit", "value", "sequence", "encodeCharacterReference", "html", "htmlPeek", "node", "image", "imagePeek", "node", "_", "state", "info", "quote", "checkQuote", "suffix", "exit", "subexit", "tracker", "value", "imageReference", "imageReferencePeek", "node", "_", "state", "info", "type", "exit", "subexit", "tracker", "value", "alt", "stack", "reference", "inlineCode", "inlineCodePeek", "node", "_", "state", "value", "sequence", "index", "pattern", "expression", "match", "position", "formatLinkAsAutolink", "node", "state", "raw", "toString", "link", "linkPeek", "node", "_", "state", "info", "quote", "checkQuote", "suffix", "tracker", "exit", "subexit", "formatLinkAsAutolink", "stack", "value", "linkReference", "linkReferencePeek", "node", "_", "state", "info", "type", "exit", "subexit", "tracker", "value", "text", "stack", "reference", "checkBullet", "state", "marker", "checkBulletOther", "state", "bullet", "checkBullet", "bulletOther", "checkBulletOrdered", "state", "marker", "checkRule", "state", "marker", "list", "node", "parent", "state", "info", "exit", "bulletCurrent", "bullet", "checkBulletOrdered", "checkBullet", "bulletOther", "checkBulletOther", "useDifferentMarker", "firstListItem", "checkRule", "index", "item", "value", "checkListItemIndent", "state", "style", "listItem", "node", "parent", "state", "info", "listItemIndent", "checkListItemIndent", "bullet", "checkBullet", "size", "tracker", "exit", "value", "map", "line", "index", "blank", "paragraph", "node", "_", "state", "info", "exit", "subexit", "value", "phrasing", "convert", "root", "node", "_", "state", "info", "d", "phrasing", "checkStrong", "state", "marker", "strong", "strongPeek", "node", "_", "state", "info", "marker", "checkStrong", "exit", "tracker", "before", "between", "betweenHead", "open", "encodeInfo", "encodeCharacterReference", "betweenTail", "close", "after", "_1", "text", "node", "_", "state", "info", "checkRuleRepetition", "state", "repetition", "thematicBreak", "_", "_1", "state", "value", "checkRule", "checkRuleRepetition", "handle", "blockquote", "hardBreak", "code", "definition", "emphasis", "heading", "html", "image", "imageReference", "inlineCode", "link", "linkReference", "list", "listItem", "paragraph", "root", "strong", "text", "thematicBreak", "gfmTableFromMarkdown", "enterTable", "enterCell", "enterRow", "exitCodeText", "exitTable", "exit", "token", "align", "d", "value", "replace", "node", "$0", "$1", "gfmTableToMarkdown", "options", "settings", "padding", "alignDelimiters", "stringLength", "around", "inlineCodeWithTable", "handleTable", "handleTableCell", "handleTableRow", "_", "state", "info", "serializeData", "handleTableAsData", "row", "handleTableRowAsData", "subexit", "matrix", "markdownTable", "children", "index", "result", "parent", "handle", "gfmTaskListItemFromMarkdown", "exitCheck", "exitParagraphWithTaskListItem", "gfmTaskListItemToMarkdown", "listItemWithTaskListItem", "token", "node", "parent", "head", "siblings", "index", "firstParaghraph", "sibling", "state", "info", "checkable", "checkbox", "tracker", "value", "handle", "check", "$0", "gfmFromMarkdown", "gfmAutolinkLiteralFromMarkdown", "gfmFootnoteFromMarkdown", "gfmStrikethroughFromMarkdown", "gfmTableFromMarkdown", "gfmTaskListItemFromMarkdown", "gfmToMarkdown", "options", "gfmAutolinkLiteralToMarkdown", "gfmFootnoteToMarkdown", "gfmStrikethroughToMarkdown", "gfmTableToMarkdown", "gfmTaskListItemToMarkdown", "wwwPrefix", "tokenizeWwwPrefix", "domain", "tokenizeDomain", "path", "tokenizePath", "trail", "tokenizeTrail", "emailDomainDotTrail", "tokenizeEmailDomainDotTrail", "wwwAutolink", "tokenizeWwwAutolink", "previousWww", "protocolAutolink", "tokenizeProtocolAutolink", "previousProtocol", "emailAutolink", "tokenizeEmailAutolink", "previousEmail", "text", "gfmAutolinkLiteral", "code", "effects", "ok", "nok", "self", "dot", "data", "start", "gfmAtext", "previousUnbalanced", "atext", "emailDomain", "emailDomainAfter", "emailDomainDot", "asciiAlphanumeric", "asciiAlpha", "wwwStart", "wwwAfter", "buffer", "seen", "protocolStart", "protocolPrefixInside", "protocol", "protocolSlashesInside", "afterProtocol", "asciiControl", "markdownLineEndingOrSpace", "unicodeWhitespace", "unicodePunctuation", "protocolAfter", "size", "wwwPrefixInside", "wwwPrefixAfter", "underscoreInLastSegment", "underscoreInLastLastSegment", "domainInside", "domainAfter", "domainAtPunctuation", "sizeOpen", "sizeClose", "pathInside", "pathAtPunctuation", "trailCharacterReferenceStart", "trailBracketAfter", "trailCharacterReferenceInside", "after", "events", "index", "result", "token", "indent", "tokenizeIndent", "gfmFootnote", "tokenizeDefinitionStart", "tokenizeDefinitionContinuation", "gfmFootnoteDefinitionEnd", "tokenizeGfmFootnoteCall", "tokenizePotentialGfmFootnoteCall", "resolveToPotentialGfmFootnoteCall", "effects", "ok", "nok", "self", "index", "defined", "labelStart", "token", "start", "code", "id", "normalizeIdentifier", "events", "context", "call", "marker", "string", "chunk", "replacement", "size", "data", "callStart", "callData", "markdownLineEndingOrSpace", "callEscape", "identifier", "labelAtMarker", "labelInside", "labelAfter", "labelEscape", "factorySpace", "whitespaceAfter", "blankLine", "afterPrefix", "tail", "gfmStrikethrough", "options", "single", "tokenizer", "tokenizeStrikethrough", "resolveAllStrikethrough", "events", "context", "index", "open", "strikethrough", "text", "nextEvents", "insideSpan", "splice", "resolveAll", "effects", "ok", "nok", "previous", "size", "start", "code", "more", "before", "classifyCharacter", "token", "after", "EditMap", "index", "remove", "add", "addImplementation", "events", "a", "b", "vecs", "slice", "element", "editMap", "at", "gfmTableAlign", "events", "index", "inDelimiterRow", "align", "event", "alignIndex", "gfmTable", "tokenizeTable", "resolveTable", "effects", "ok", "nok", "self", "size", "sizeB", "seen", "start", "code", "index", "type", "tail", "next", "bodyRowStart", "headRowBefore", "headRowStart", "headRowBreak", "markdownLineEnding", "headDelimiterStart", "markdownSpace", "factorySpace", "headRowData", "markdownLineEndingOrSpace", "headRowEscape", "headDelimiterBefore", "headDelimiterValueBefore", "headDelimiterCellBefore", "headDelimiterNok", "headDelimiterLeftAlignmentAfter", "headDelimiterCellAfter", "headDelimiterFiller", "headDelimiterRightAlignmentAfter", "bodyRowBreak", "bodyRowData", "bodyRowEscape", "events", "context", "inFirstCellAwaitingPipe", "rowKind", "lastCell", "cell", "afterHeadAwaitingFirstBodyRow", "lastTableEnd", "currentTable", "currentBody", "currentCell", "map", "EditMap", "event", "token", "flushTableEnd", "flushCell", "gfmTableAlign", "range", "rowEnd", "previousCell", "groupName", "valueName", "getPoint", "now", "relatedStart", "relatedEnd", "valueToken", "end", "b", "table", "tableBody", "exits", "related", "side", "tasklistCheck", "tokenizeTasklistCheck", "gfmTaskListItem", "effects", "ok", "nok", "self", "open", "code", "inside", "markdownLineEndingOrSpace", "close", "after", "markdownLineEnding", "markdownSpace", "spaceThenNonSpace", "factorySpace", "gfm", "options", "combineExtensions", "gfmAutolinkLiteral", "gfmFootnote", "gfmStrikethrough", "gfmTable", "gfmTaskListItem", "emptyOptions", "remarkGfm", "options", "self", "settings", "data", "micromarkExtensions", "fromMarkdownExtensions", "toMarkdownExtensions", "gfm", "gfmFromMarkdown", "gfmToMarkdown", "import_xterm", "entries", "setPrototypeOf", "isFrozen", "getPrototypeOf", "getOwnPropertyDescriptor", "Object", "freeze", "seal", "create", "apply", "construct", "Reflect", "x", "func", "thisArg", "_len", "arguments", "length", "args", "Array", "_key", "Func", "_len2", "_key2", "arrayForEach", "unapply", "prototype", "forEach", "arrayLastIndexOf", "lastIndexOf", "arrayPop", "pop", "arrayPush", "push", "arraySplice", "splice", "stringToLowerCase", "String", "toLowerCase", "stringToString", "toString", "stringMatch", "match", "stringReplace", "replace", "stringIndexOf", "indexOf", "stringTrim", "trim", "objectHasOwnProperty", "hasOwnProperty", "regExpTest", "RegExp", "test", "typeErrorCreate", "unconstruct", "TypeError", "lastIndex", "_len3", "_key3", "_len4", "_key4", "addToSet", "set", "array", "transformCaseFunc", "l", "element", "lcElement", "cleanArray", "index", "clone", "object", "newObject", "property", "value", "isArray", "constructor", "lookupGetter", "prop", "desc", "get", "fallbackValue", "html", "svg", "svgFilters", "svgDisallowed", "mathMl", "mathMlDisallowed", "text", "xml", "MUSTACHE_EXPR", "ERB_EXPR", "TMPLIT_EXPR", "DATA_ATTR", "ARIA_ATTR", "IS_ALLOWED_URI", "IS_SCRIPT_OR_DATA", "ATTR_WHITESPACE", "DOCTYPE_NAME", "CUSTOM_ELEMENT", "NODE_TYPE", "attribute", "cdataSection", "entityReference", "entityNode", "progressingInstruction", "comment", "document", "documentType", "documentFragment", "notation", "getGlobal", "window", "_createTrustedTypesPolicy", "trustedTypes", "purifyHostElement", "createPolicy", "suffix", "ATTR_NAME", "hasAttribute", "getAttribute", "policyName", "createHTML", "createScriptURL", "scriptUrl", "console", "warn", "_createHooksMap", "afterSanitizeAttributes", "afterSanitizeElements", "afterSanitizeShadowDOM", "beforeSanitizeAttributes", "beforeSanitizeElements", "beforeSanitizeShadowDOM", "uponSanitizeAttribute", "uponSanitizeElement", "uponSanitizeShadowNode", "createDOMPurify", "undefined", "DOMPurify", "root", "version", "VERSION", "removed", "nodeType", "Element", "isSupported", "originalDocument", "currentScript", "DocumentFragment", "HTMLTemplateElement", "Node", "NodeFilter", "NamedNodeMap", "MozNamedAttrMap", "HTMLFormElement", "DOMParser", "ElementPrototype", "cloneNode", "remove", "getNextSibling", "getChildNodes", "getParentNode", "template", "createElement", "content", "ownerDocument", "trustedTypesPolicy", "emptyHTML", "implementation", "createNodeIterator", "createDocumentFragment", "getElementsByTagName", "importNode", "hooks", "createHTMLDocument", "EXPRESSIONS", "ALLOWED_TAGS", "DEFAULT_ALLOWED_TAGS", "TAGS", "ALLOWED_ATTR", "DEFAULT_ALLOWED_ATTR", "ATTRS", "CUSTOM_ELEMENT_HANDLING", "tagNameCheck", "writable", "configurable", "enumerable", "attributeNameCheck", "allowCustomizedBuiltInElements", "FORBID_TAGS", "FORBID_ATTR", "ALLOW_ARIA_ATTR", "ALLOW_DATA_ATTR", "ALLOW_UNKNOWN_PROTOCOLS", "ALLOW_SELF_CLOSE_IN_ATTR", "SAFE_FOR_TEMPLATES", "SAFE_FOR_XML", "WHOLE_DOCUMENT", "SET_CONFIG", "FORCE_BODY", "RETURN_DOM", "RETURN_DOM_FRAGMENT", "RETURN_TRUSTED_TYPE", "SANITIZE_DOM", "SANITIZE_NAMED_PROPS", "SANITIZE_NAMED_PROPS_PREFIX", "KEEP_CONTENT", "IN_PLACE", "USE_PROFILES", "FORBID_CONTENTS", "DEFAULT_FORBID_CONTENTS", "DATA_URI_TAGS", "DEFAULT_DATA_URI_TAGS", "URI_SAFE_ATTRIBUTES", "DEFAULT_URI_SAFE_ATTRIBUTES", "MATHML_NAMESPACE", "SVG_NAMESPACE", "HTML_NAMESPACE", "NAMESPACE", "IS_EMPTY_INPUT", "ALLOWED_NAMESPACES", "DEFAULT_ALLOWED_NAMESPACES", "MATHML_TEXT_INTEGRATION_POINTS", "HTML_INTEGRATION_POINTS", "COMMON_SVG_AND_HTML_ELEMENTS", "PARSER_MEDIA_TYPE", "SUPPORTED_PARSER_MEDIA_TYPES", "DEFAULT_PARSER_MEDIA_TYPE", "CONFIG", "formElement", "isRegexOrFunction", "testValue", "Function", "_parseConfig", "cfg", "ADD_URI_SAFE_ATTR", "ADD_DATA_URI_TAGS", "ALLOWED_URI_REGEXP", "ADD_TAGS", "ADD_ATTR", "table", "tbody", "TRUSTED_TYPES_POLICY", "ALL_SVG_TAGS", "ALL_MATHML_TAGS", "_checkValidNamespace", "parent", "tagName", "namespaceURI", "parentTagName", "Boolean", "_forceRemove", "node", "removeChild", "_removeAttribute", "name", "getAttributeNode", "from", "removeAttribute", "setAttribute", "_initDocument", "dirty", "doc", "leadingWhitespace", "matches", "dirtyPayload", "parseFromString", "documentElement", "createDocument", "innerHTML", "body", "insertBefore", "createTextNode", "childNodes", "call", "_createNodeIterator", "SHOW_ELEMENT", "SHOW_COMMENT", "SHOW_TEXT", "SHOW_PROCESSING_INSTRUCTION", "SHOW_CDATA_SECTION", "_isClobbered", "nodeName", "textContent", "attributes", "hasChildNodes", "_isNode", "_executeHooks", "currentNode", "data", "hook", "_sanitizeElements", "allowedTags", "firstElementChild", "_isBasicCustomElement", "parentNode", "childCount", "i", "childClone", "__removalCount", "expr", "_isValidAttribute", "lcTag", "lcName", "_sanitizeAttributes", "hookEvent", "attrName", "attrValue", "keepAttr", "allowedAttributes", "forceKeepAttr", "attr", "initValue", "getAttributeType", "setAttributeNS", "_sanitizeShadowDOM", "fragment", "shadowNode", "shadowIterator", "nextNode", "sanitize", "importedNode", "returnNode", "appendChild", "firstChild", "nodeIterator", "shadowroot", "shadowrootmode", "serializedHTML", "outerHTML", "doctype", "setConfig", "clearConfig", "isValidAttribute", "tag", "addHook", "entryPoint", "hookFunction", "removeHook", "removeHooks", "removeAllHooks", "purify", "import_jsx_runtime", "DocViewer", "files", "initialId", "activeFileId", "setActiveFileId", "content", "setContent", "loading", "setLoading", "error", "setError", "terminalRef", "terminalInstance", "previousFileId", "activeFile", "f", "fileType", "filename", "ext", "response", "text", "sanitizedContent", "purify", "err", "term", "getFileIcon", "file", "Markdown", "remarkGfm", "children", "href", "inline", "DocViewer"]
}
